{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kgcl schema A data model for describing change operations at a high level on an ontology or ontology-like artefact, such as a Knowledge Graph. See https://github.com/cmungall/knowledge-graph-change-language Classes Activity - a provence-generating activity Agent - a provence-generating agent Change - Any change perform on an ontology or knowledge graph ComplexChange - A change that is is a composition of other changes MultiNodeObsoletion - A complex change consisting of multiple obsoletions. NameBecomesSynonym - A complex change where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym SimpleChange - A change that is about a single ontology element DatatypeChange EdgeChange - A change in which the entity changes is an edge EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. EdgeDeletion - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. EdgeLabelChange - An edge change where the edge label (relationship type) is modified. EdgeLogicalInterpretationChange - An edge change where the subjet, object, and edge label are unchanged, but the logical interpretation changes EdgeObsoletion - An edge change in which an edge is obsoleted. NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes NodeDeepening - A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any edge label in the relational graph NodeShallowing - The opposite of node deepening NodeChange - A simple change where the change is about a node AddNodeToSubset - Places a node inside a subset, by annotating that node NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO NodeAnnotationReplacement - A node annotation change where the change replaces a particular property value. TODO NodeCreation - a node change in which a new node is created NodeDeletion - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. NodeObsoletionWithMerge - An obsoletion change in which information from the obsoleted node is moved to a single target. NodeObsoletionWithSplit - An obsoletion change in which information from the obsoleted node is moved selectively to multiple targets NodeRename - A node change where the name (aka rdfs:label) of the node changes NodeSynonymChange NewSynonym - A node change where a de-novo synonym is created RemoveSynonym - A node change where a synonym is deleted SynonymReplacement - A node change where the text of a synonym is changed NodeTextDefinitionChange - A node change where the text definition is changed NewTextDefinition - A node change where a de-novo text definition is created RemoveTextDefinition - A node change where a text definition is deleted TextDefinitionReplacement - A node change where a text definition is modified NodeUnobsoletion - unobsoletion of a node deprecates usage of that node. Rarely applied. RemovedNodeFromSubset - Removes a node from a subset, by removing an annotation ChangeSetSummaryStatistic - A summary statistic for a set of changes of the same type, grouped by zero or more node properties OntologyElement - Any component of an ontology or knowledge graph Edge - A relationship between two nodes. We assume owlstar or similar for existential restrictions LogicalDefinition Node - Any named entity in an ontology. May be a class, individual, property ClassNode - A node that is a class InstanceNode - A node that is an individual PropertyValue - a property-value pair Annotation - owl annotations. Not to be confused with annotations sensu GO Subset TextualDiff - A summarizing of a change on a piece of text. This could be rendered in a number of different ways Transaction - A unified set of changes. Could be a single change, or the results of an ontology diff Mixins AddToSubset - placing an element inside a subset ChangeMixin - root class for all change mixins AddToSubset - placing an element inside a subset Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed. Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed. Slots about - The 'focus' entity on which the change operates edge change\u279eabout node change\u279eabout node obsoletion with merge\u279eabout acted on behalf of activity id annotation set change 1 name becomes synonym\u279echange 1 change 2 name becomes synonym\u279echange 2 change description - A string serialization of the change edge creation\u279echange description edge deletion\u279echange description edge label change\u279echange description edge obsoletion\u279echange description multi node obsoletion\u279echange description node creation\u279echange description node deletion\u279echange description node move\u279echange description node deepening\u279echange description node shallowing\u279echange description node obsoletion\u279echange description node obsoletion with merge\u279echange description node obsoletion with split\u279echange description node rename\u279echange description node unobsoletion\u279echange description change set - A collection of changes associated change set - All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: multi node obsoletion\u279eassociated change set - All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: multi node obsoletion\u279echange set node obsoletion\u279eassociated change set - All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere change type change set summary statistic\u279echange type consider node obsoletion\u279econsider node unobsoletion\u279econsider count change set summary statistic\u279ecount edge label ended at time filler has textual diff - A representation of the diff in ascii text id - CURIE or URI in subset - subset that the element is being placed inside. add to subset\u279ein subset remove from subset\u279ein subset - subset that the element is being removed from name new value - The value of a property held in the old instance of the ontology node rename\u279enew value object old value - The value of a property held in the old instance of the ontology node rename\u279eold value property property value set change set summary statistic\u279eproperty value set - Summary statistic is grouped by these constraints replaced by - When this is present, the node obsoletion MAY be associated with automated rewiring changes node obsoletion\u279ereplaced by node unobsoletion\u279ereplaced by started at time subject target - The secondary entity on which the change operates node obsoletion with merge\u279etarget node obsoletion with split\u279etarget used was associated with was generated by was informed by Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value ChangeClassType ( Uriorcurie ) - CURIE for a class within this datamodel. E.g. kgcl:NodeObsoletion Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer Ncname ( NCName ) - Prefix part of CURIE Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Index"},{"location":"#kgcl-schema","text":"A data model for describing change operations at a high level on an ontology or ontology-like artefact, such as a Knowledge Graph. See https://github.com/cmungall/knowledge-graph-change-language","title":"Kgcl schema"},{"location":"#classes","text":"Activity - a provence-generating activity Agent - a provence-generating agent Change - Any change perform on an ontology or knowledge graph ComplexChange - A change that is is a composition of other changes MultiNodeObsoletion - A complex change consisting of multiple obsoletions. NameBecomesSynonym - A complex change where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym SimpleChange - A change that is about a single ontology element DatatypeChange EdgeChange - A change in which the entity changes is an edge EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. EdgeDeletion - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. EdgeLabelChange - An edge change where the edge label (relationship type) is modified. EdgeLogicalInterpretationChange - An edge change where the subjet, object, and edge label are unchanged, but the logical interpretation changes EdgeObsoletion - An edge change in which an edge is obsoleted. NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes NodeDeepening - A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any edge label in the relational graph NodeShallowing - The opposite of node deepening NodeChange - A simple change where the change is about a node AddNodeToSubset - Places a node inside a subset, by annotating that node NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO NodeAnnotationReplacement - A node annotation change where the change replaces a particular property value. TODO NodeCreation - a node change in which a new node is created NodeDeletion - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. NodeObsoletionWithMerge - An obsoletion change in which information from the obsoleted node is moved to a single target. NodeObsoletionWithSplit - An obsoletion change in which information from the obsoleted node is moved selectively to multiple targets NodeRename - A node change where the name (aka rdfs:label) of the node changes NodeSynonymChange NewSynonym - A node change where a de-novo synonym is created RemoveSynonym - A node change where a synonym is deleted SynonymReplacement - A node change where the text of a synonym is changed NodeTextDefinitionChange - A node change where the text definition is changed NewTextDefinition - A node change where a de-novo text definition is created RemoveTextDefinition - A node change where a text definition is deleted TextDefinitionReplacement - A node change where a text definition is modified NodeUnobsoletion - unobsoletion of a node deprecates usage of that node. Rarely applied. RemovedNodeFromSubset - Removes a node from a subset, by removing an annotation ChangeSetSummaryStatistic - A summary statistic for a set of changes of the same type, grouped by zero or more node properties OntologyElement - Any component of an ontology or knowledge graph Edge - A relationship between two nodes. We assume owlstar or similar for existential restrictions LogicalDefinition Node - Any named entity in an ontology. May be a class, individual, property ClassNode - A node that is a class InstanceNode - A node that is an individual PropertyValue - a property-value pair Annotation - owl annotations. Not to be confused with annotations sensu GO Subset TextualDiff - A summarizing of a change on a piece of text. This could be rendered in a number of different ways Transaction - A unified set of changes. Could be a single change, or the results of an ontology diff","title":"Classes"},{"location":"#mixins","text":"AddToSubset - placing an element inside a subset ChangeMixin - root class for all change mixins AddToSubset - placing an element inside a subset Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed. Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed.","title":"Mixins"},{"location":"#slots","text":"about - The 'focus' entity on which the change operates edge change\u279eabout node change\u279eabout node obsoletion with merge\u279eabout acted on behalf of activity id annotation set change 1 name becomes synonym\u279echange 1 change 2 name becomes synonym\u279echange 2 change description - A string serialization of the change edge creation\u279echange description edge deletion\u279echange description edge label change\u279echange description edge obsoletion\u279echange description multi node obsoletion\u279echange description node creation\u279echange description node deletion\u279echange description node move\u279echange description node deepening\u279echange description node shallowing\u279echange description node obsoletion\u279echange description node obsoletion with merge\u279echange description node obsoletion with split\u279echange description node rename\u279echange description node unobsoletion\u279echange description change set - A collection of changes associated change set - All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: multi node obsoletion\u279eassociated change set - All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: multi node obsoletion\u279echange set node obsoletion\u279eassociated change set - All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere change type change set summary statistic\u279echange type consider node obsoletion\u279econsider node unobsoletion\u279econsider count change set summary statistic\u279ecount edge label ended at time filler has textual diff - A representation of the diff in ascii text id - CURIE or URI in subset - subset that the element is being placed inside. add to subset\u279ein subset remove from subset\u279ein subset - subset that the element is being removed from name new value - The value of a property held in the old instance of the ontology node rename\u279enew value object old value - The value of a property held in the old instance of the ontology node rename\u279eold value property property value set change set summary statistic\u279eproperty value set - Summary statistic is grouped by these constraints replaced by - When this is present, the node obsoletion MAY be associated with automated rewiring changes node obsoletion\u279ereplaced by node unobsoletion\u279ereplaced by started at time subject target - The secondary entity on which the change operates node obsoletion with merge\u279etarget node obsoletion with split\u279etarget used was associated with was generated by was informed by","title":"Slots"},{"location":"#types","text":"","title":"Types"},{"location":"#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"#defined","text":"Boolean ( Bool ) - A binary (true or false) value ChangeClassType ( Uriorcurie ) - CURIE for a class within this datamodel. E.g. kgcl:NodeObsoletion Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer Ncname ( NCName ) - Prefix part of CURIE Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"Activity/","text":"Class: Activity a provence-generating activity URI: kgcl:Activity Referenced by class None was generated by OPT Activity None was informed by OPT Activity Attributes Own activity id REQ range: String ended at time OPT range: String started at time OPT range: String used OPT range: String was associated with OPT range: Agent was informed by OPT range: Activity Other properties Mappings: prov:Activity","title":"Class: Activity"},{"location":"Activity/#class-activity","text":"a provence-generating activity URI: kgcl:Activity","title":"Class: Activity"},{"location":"Activity/#referenced-by-class","text":"None was generated by OPT Activity None was informed by OPT Activity","title":"Referenced by class"},{"location":"Activity/#attributes","text":"","title":"Attributes"},{"location":"Activity/#own","text":"activity id REQ range: String ended at time OPT range: String started at time OPT range: String used OPT range: String was associated with OPT range: Agent was informed by OPT range: Activity","title":"Own"},{"location":"Activity/#other-properties","text":"Mappings: prov:Activity","title":"Other properties"},{"location":"AddNodeToSubset/","text":"Class: AddNodeToSubset Places a node inside a subset, by annotating that node URI: kgcl:AddNodeToSubset Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: AddToSubset - placing an element inside a subset Attributes Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Mixed in from add to subset: add to subset\u279ein subset OPT Description: subset that the element is being placed inside. range: Subset Other properties Aliases: add term to slim See also: http://wiki.geneontology.org/index.php/Adding_a_Term_to_a_GO_Subset_(Slim)","title":"Class: AddNodeToSubset"},{"location":"AddNodeToSubset/#class-addnodetosubset","text":"Places a node inside a subset, by annotating that node URI: kgcl:AddNodeToSubset","title":"Class: AddNodeToSubset"},{"location":"AddNodeToSubset/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"AddNodeToSubset/#uses-mixins","text":"mixin: AddToSubset - placing an element inside a subset","title":"Uses Mixins"},{"location":"AddNodeToSubset/#attributes","text":"","title":"Attributes"},{"location":"AddNodeToSubset/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"AddNodeToSubset/#mixed-in-from-add-to-subset","text":"add to subset\u279ein subset OPT Description: subset that the element is being placed inside. range: Subset","title":"Mixed in from add to subset:"},{"location":"AddNodeToSubset/#other-properties","text":"Aliases: add term to slim See also: http://wiki.geneontology.org/index.php/Adding_a_Term_to_a_GO_Subset_(Slim)","title":"Other properties"},{"location":"AddToSubset/","text":"Class: AddToSubset placing an element inside a subset URI: kgcl:AddToSubset Parents is_a: ChangeMixin - root class for all change mixins Mixin for AddNodeToSubset (mixin) - Places a node inside a subset, by annotating that node Referenced by class Attributes Own add to subset\u279ein subset OPT Description: subset that the element is being placed inside. range: Subset","title":"Class: AddToSubset"},{"location":"AddToSubset/#class-addtosubset","text":"placing an element inside a subset URI: kgcl:AddToSubset","title":"Class: AddToSubset"},{"location":"AddToSubset/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"AddToSubset/#mixin-for","text":"AddNodeToSubset (mixin) - Places a node inside a subset, by annotating that node","title":"Mixin for"},{"location":"AddToSubset/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"AddToSubset/#attributes","text":"","title":"Attributes"},{"location":"AddToSubset/#own","text":"add to subset\u279ein subset OPT Description: subset that the element is being placed inside. range: Subset","title":"Own"},{"location":"Agent/","text":"Class: Agent a provence-generating agent URI: kgcl:Agent Referenced by class None acted on behalf of OPT Agent None was associated with OPT Agent Attributes Own acted on behalf of OPT range: Agent was informed by OPT range: Activity Other properties Mappings: prov:Agent","title":"Class: Agent"},{"location":"Agent/#class-agent","text":"a provence-generating agent URI: kgcl:Agent","title":"Class: Agent"},{"location":"Agent/#referenced-by-class","text":"None acted on behalf of OPT Agent None was associated with OPT Agent","title":"Referenced by class"},{"location":"Agent/#attributes","text":"","title":"Attributes"},{"location":"Agent/#own","text":"acted on behalf of OPT range: Agent was informed by OPT range: Activity","title":"Own"},{"location":"Agent/#other-properties","text":"Mappings: prov:Agent","title":"Other properties"},{"location":"Annotation/","text":"Class: Annotation owl annotations. Not to be confused with annotations sensu GO URI: kgcl:Annotation Parents is_a: PropertyValue - a property-value pair Referenced by class None annotation set OPT Annotation Attributes Own annotation set OPT range: Annotation filler OPT range: String property OPT range: Node Other properties Mappings: owl:Annotation","title":"Class: Annotation"},{"location":"Annotation/#class-annotation","text":"owl annotations. Not to be confused with annotations sensu GO URI: kgcl:Annotation","title":"Class: Annotation"},{"location":"Annotation/#parents","text":"is_a: PropertyValue - a property-value pair","title":"Parents"},{"location":"Annotation/#referenced-by-class","text":"None annotation set OPT Annotation","title":"Referenced by class"},{"location":"Annotation/#attributes","text":"","title":"Attributes"},{"location":"Annotation/#own","text":"annotation set OPT range: Annotation filler OPT range: String property OPT range: Node","title":"Own"},{"location":"Annotation/#other-properties","text":"Mappings: owl:Annotation","title":"Other properties"},{"location":"Change/","text":"Class: Change Any change perform on an ontology or knowledge graph URI: kgcl:Change Children ComplexChange - A change that is is a composition of other changes SimpleChange - A change that is about a single ontology element Referenced by class None associated change set 0.. Change * None change set 0.. Change * MultiNodeObsoletion multi node obsoletion\u279eassociated change set 0.. Change * NodeObsoletion node obsoletion\u279eassociated change set 0.. Change * Attributes Own was generated by OPT range: Activity","title":"Class: Change"},{"location":"Change/#class-change","text":"Any change perform on an ontology or knowledge graph URI: kgcl:Change","title":"Class: Change"},{"location":"Change/#children","text":"ComplexChange - A change that is is a composition of other changes SimpleChange - A change that is about a single ontology element","title":"Children"},{"location":"Change/#referenced-by-class","text":"None associated change set 0.. Change * None change set 0.. Change * MultiNodeObsoletion multi node obsoletion\u279eassociated change set 0.. Change * NodeObsoletion node obsoletion\u279eassociated change set 0.. Change *","title":"Referenced by class"},{"location":"Change/#attributes","text":"","title":"Attributes"},{"location":"Change/#own","text":"was generated by OPT range: Activity","title":"Own"},{"location":"ChangeMixin/","text":"Class: ChangeMixin root class for all change mixins URI: kgcl:ChangeMixin Children AddToSubset - placing an element inside a subset Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed. Referenced by class Attributes","title":"Class: ChangeMixin"},{"location":"ChangeMixin/#class-changemixin","text":"root class for all change mixins URI: kgcl:ChangeMixin","title":"Class: ChangeMixin"},{"location":"ChangeMixin/#children","text":"AddToSubset - placing an element inside a subset Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed.","title":"Children"},{"location":"ChangeMixin/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ChangeMixin/#attributes","text":"","title":"Attributes"},{"location":"ChangeSetSummaryStatistic/","text":"Class: ChangeSetSummaryStatistic A summary statistic for a set of changes of the same type, grouped by zero or more node properties URI: kgcl:ChangeSetSummaryStatistic Referenced by class Attributes Own change set summary statistic\u279echange type OPT range: ChangeClassType change set summary statistic\u279ecount OPT range: Integer change set summary statistic\u279eproperty value set 0..* Description: Summary statistic is grouped by these constraints range: PropertyValue","title":"Class: ChangeSetSummaryStatistic"},{"location":"ChangeSetSummaryStatistic/#class-changesetsummarystatistic","text":"A summary statistic for a set of changes of the same type, grouped by zero or more node properties URI: kgcl:ChangeSetSummaryStatistic","title":"Class: ChangeSetSummaryStatistic"},{"location":"ChangeSetSummaryStatistic/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ChangeSetSummaryStatistic/#attributes","text":"","title":"Attributes"},{"location":"ChangeSetSummaryStatistic/#own","text":"change set summary statistic\u279echange type OPT range: ChangeClassType change set summary statistic\u279ecount OPT range: Integer change set summary statistic\u279eproperty value set 0..* Description: Summary statistic is grouped by these constraints range: PropertyValue","title":"Own"},{"location":"ClassNode/","text":"Class: ClassNode A node that is a class URI: kgcl:ClassNode Parents is_a: Node - Any named entity in an ontology. May be a class, individual, property Attributes Inherited from node: annotation set OPT range: Annotation id REQ Description: CURIE or URI range: String name OPT range: String Other properties Aliases: concept Mappings: owl:Class","title":"Class: ClassNode"},{"location":"ClassNode/#class-classnode","text":"A node that is a class URI: kgcl:ClassNode","title":"Class: ClassNode"},{"location":"ClassNode/#parents","text":"is_a: Node - Any named entity in an ontology. May be a class, individual, property","title":"Parents"},{"location":"ClassNode/#attributes","text":"","title":"Attributes"},{"location":"ClassNode/#inherited-from-node","text":"annotation set OPT range: Annotation id REQ Description: CURIE or URI range: String name OPT range: String","title":"Inherited from node:"},{"location":"ClassNode/#other-properties","text":"Aliases: concept Mappings: owl:Class","title":"Other properties"},{"location":"ComplexChange/","text":"Class: ComplexChange A change that is is a composition of other changes URI: kgcl:ComplexChange Parents is_a: Change - Any change perform on an ontology or knowledge graph Children MultiNodeObsoletion - A complex change consisting of multiple obsoletions. NameBecomesSynonym - A complex change where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym Referenced by class Attributes Own change set 0..* Description: A collection of changes range: Change Inherited from change: was generated by OPT range: Activity","title":"Class: ComplexChange"},{"location":"ComplexChange/#class-complexchange","text":"A change that is is a composition of other changes URI: kgcl:ComplexChange","title":"Class: ComplexChange"},{"location":"ComplexChange/#parents","text":"is_a: Change - Any change perform on an ontology or knowledge graph","title":"Parents"},{"location":"ComplexChange/#children","text":"MultiNodeObsoletion - A complex change consisting of multiple obsoletions. NameBecomesSynonym - A complex change where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym","title":"Children"},{"location":"ComplexChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ComplexChange/#attributes","text":"","title":"Attributes"},{"location":"ComplexChange/#own","text":"change set 0..* Description: A collection of changes range: Change","title":"Own"},{"location":"ComplexChange/#inherited-from-change","text":"was generated by OPT range: Activity","title":"Inherited from change:"},{"location":"Creation/","text":"Class: Creation Creation of an element. URI: kgcl:Creation Parents is_a: ChangeMixin - root class for all change mixins Mixin for EdgeCreation (mixin) - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. NodeCreation (mixin) - a node change in which a new node is created Referenced by class Attributes","title":"Class: Creation"},{"location":"Creation/#class-creation","text":"Creation of an element. URI: kgcl:Creation","title":"Class: Creation"},{"location":"Creation/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"Creation/#mixin-for","text":"EdgeCreation (mixin) - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. NodeCreation (mixin) - a node change in which a new node is created","title":"Mixin for"},{"location":"Creation/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Creation/#attributes","text":"","title":"Attributes"},{"location":"DatatypeChange/","text":"Class: DatatypeChange URI: kgcl:DatatypeChange Parents is_a: SimpleChange - A change that is about a single ontology element Attributes Inherited from simple change: about OPT Description: The 'focus' entity on which the change operates range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: DatatypeChange"},{"location":"DatatypeChange/#class-datatypechange","text":"URI: kgcl:DatatypeChange","title":"Class: DatatypeChange"},{"location":"DatatypeChange/#parents","text":"is_a: SimpleChange - A change that is about a single ontology element","title":"Parents"},{"location":"DatatypeChange/#attributes","text":"","title":"Attributes"},{"location":"DatatypeChange/#inherited-from-simple-change","text":"about OPT Description: The 'focus' entity on which the change operates range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from simple change:"},{"location":"Deletion/","text":"Class: Deletion Removal of an element. URI: kgcl:Deletion Parents is_a: ChangeMixin - root class for all change mixins Mixin for EdgeDeletion (mixin) - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. NodeDeletion (mixin) - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise Referenced by class Attributes Other properties Comments: Elements should never be deleted, always obsolete","title":"Class: Deletion"},{"location":"Deletion/#class-deletion","text":"Removal of an element. URI: kgcl:Deletion","title":"Class: Deletion"},{"location":"Deletion/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"Deletion/#mixin-for","text":"EdgeDeletion (mixin) - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. NodeDeletion (mixin) - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise","title":"Mixin for"},{"location":"Deletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Deletion/#attributes","text":"","title":"Attributes"},{"location":"Deletion/#other-properties","text":"Comments: Elements should never be deleted, always obsolete","title":"Other properties"},{"location":"Edge/","text":"Class: Edge A relationship between two nodes. We assume owlstar or similar for existential restrictions URI: kgcl:Edge Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Attributes Own annotation set OPT range: Annotation edge label OPT range: Node object OPT range: Node subject OPT range: Node Other properties Aliases: triple axiom relationship Mappings: owl:Axiom rdf:Statement","title":"Class: Edge"},{"location":"Edge/#class-edge","text":"A relationship between two nodes. We assume owlstar or similar for existential restrictions URI: kgcl:Edge","title":"Class: Edge"},{"location":"Edge/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"Edge/#attributes","text":"","title":"Attributes"},{"location":"Edge/#own","text":"annotation set OPT range: Annotation edge label OPT range: Node object OPT range: Node subject OPT range: Node","title":"Own"},{"location":"Edge/#other-properties","text":"Aliases: triple axiom relationship Mappings: owl:Axiom rdf:Statement","title":"Other properties"},{"location":"EdgeChange/","text":"Class: EdgeChange A change in which the entity changes is an edge URI: kgcl:EdgeChange Parents is_a: SimpleChange - A change that is about a single ontology element Children EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. EdgeDeletion - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. EdgeLabelChange - An edge change where the edge label (relationship type) is modified. EdgeLogicalInterpretationChange - An edge change where the subjet, object, and edge label are unchanged, but the logical interpretation changes EdgeObsoletion - An edge change in which an edge is obsoleted. NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes Referenced by class Attributes Own edge change\u279eabout OPT range: String Inherited from simple change: new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Aliases: axiom change triple change","title":"Class: EdgeChange"},{"location":"EdgeChange/#class-edgechange","text":"A change in which the entity changes is an edge URI: kgcl:EdgeChange","title":"Class: EdgeChange"},{"location":"EdgeChange/#parents","text":"is_a: SimpleChange - A change that is about a single ontology element","title":"Parents"},{"location":"EdgeChange/#children","text":"EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. EdgeDeletion - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. EdgeLabelChange - An edge change where the edge label (relationship type) is modified. EdgeLogicalInterpretationChange - An edge change where the subjet, object, and edge label are unchanged, but the logical interpretation changes EdgeObsoletion - An edge change in which an edge is obsoleted. NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes","title":"Children"},{"location":"EdgeChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeChange/#attributes","text":"","title":"Attributes"},{"location":"EdgeChange/#own","text":"edge change\u279eabout OPT range: String","title":"Own"},{"location":"EdgeChange/#inherited-from-simple-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from simple change:"},{"location":"EdgeChange/#other-properties","text":"Aliases: axiom change triple change","title":"Other properties"},{"location":"EdgeCreation/","text":"Class: EdgeCreation An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. URI: kgcl:EdgeCreation Parents is_a: EdgeChange - A change in which the entity changes is an edge Uses Mixins mixin: Creation - Creation of an element. Referenced by class Attributes Own annotation set OPT range: Annotation edge creation\u279echange description OPT range: String edge label OPT range: Node object OPT range: Node subject OPT range: Node Inherited from edge change: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Aliases: relationship creation See also: http://wiki.geneontology.org/index.php/Guidelines_for_creating_relationships_between_terms","title":"Class: EdgeCreation"},{"location":"EdgeCreation/#class-edgecreation","text":"An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. URI: kgcl:EdgeCreation","title":"Class: EdgeCreation"},{"location":"EdgeCreation/#parents","text":"is_a: EdgeChange - A change in which the entity changes is an edge","title":"Parents"},{"location":"EdgeCreation/#uses-mixins","text":"mixin: Creation - Creation of an element.","title":"Uses Mixins"},{"location":"EdgeCreation/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeCreation/#attributes","text":"","title":"Attributes"},{"location":"EdgeCreation/#own","text":"annotation set OPT range: Annotation edge creation\u279echange description OPT range: String edge label OPT range: Node object OPT range: Node subject OPT range: Node","title":"Own"},{"location":"EdgeCreation/#inherited-from-edge-change","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from edge change:"},{"location":"EdgeCreation/#other-properties","text":"Aliases: relationship creation See also: http://wiki.geneontology.org/index.php/Guidelines_for_creating_relationships_between_terms","title":"Other properties"},{"location":"EdgeDeletion/","text":"Class: EdgeDeletion An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. URI: kgcl:EdgeDeletion Parents is_a: EdgeChange - A change in which the entity changes is an edge Uses Mixins mixin: Deletion - Removal of an element. Referenced by class Attributes Own annotation set OPT range: Annotation edge deletion\u279echange description OPT range: String edge label OPT range: Node object OPT range: Node subject OPT range: Node Inherited from edge change: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Aliases: relationship deletion","title":"Class: EdgeDeletion"},{"location":"EdgeDeletion/#class-edgedeletion","text":"An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. URI: kgcl:EdgeDeletion","title":"Class: EdgeDeletion"},{"location":"EdgeDeletion/#parents","text":"is_a: EdgeChange - A change in which the entity changes is an edge","title":"Parents"},{"location":"EdgeDeletion/#uses-mixins","text":"mixin: Deletion - Removal of an element.","title":"Uses Mixins"},{"location":"EdgeDeletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeDeletion/#attributes","text":"","title":"Attributes"},{"location":"EdgeDeletion/#own","text":"annotation set OPT range: Annotation edge deletion\u279echange description OPT range: String edge label OPT range: Node object OPT range: Node subject OPT range: Node","title":"Own"},{"location":"EdgeDeletion/#inherited-from-edge-change","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from edge change:"},{"location":"EdgeDeletion/#other-properties","text":"Aliases: relationship deletion","title":"Other properties"},{"location":"EdgeLabelChange/","text":"Class: EdgeLabelChange An edge change where the edge label (relationship type) is modified. URI: kgcl:EdgeLabelChange Parents is_a: EdgeChange - A change in which the entity changes is an edge Referenced by class Attributes Own edge label change\u279echange description OPT range: String Inherited from edge change: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Examples: Example(value='changing a is-a b to a part-of b', description=None)","title":"Class: EdgeLabelChange"},{"location":"EdgeLabelChange/#class-edgelabelchange","text":"An edge change where the edge label (relationship type) is modified. URI: kgcl:EdgeLabelChange","title":"Class: EdgeLabelChange"},{"location":"EdgeLabelChange/#parents","text":"is_a: EdgeChange - A change in which the entity changes is an edge","title":"Parents"},{"location":"EdgeLabelChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeLabelChange/#attributes","text":"","title":"Attributes"},{"location":"EdgeLabelChange/#own","text":"edge label change\u279echange description OPT range: String","title":"Own"},{"location":"EdgeLabelChange/#inherited-from-edge-change","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from edge change:"},{"location":"EdgeLabelChange/#other-properties","text":"Examples: Example(value='changing a is-a b to a part-of b', description=None)","title":"Other properties"},{"location":"EdgeLogicalInterpretationChange/","text":"Class: EdgeLogicalInterpretationChange An edge change where the subjet, object, and edge label are unchanged, but the logical interpretation changes URI: kgcl:EdgeLogicalInterpretationChange Parents is_a: EdgeChange - A change in which the entity changes is an edge Attributes Inherited from edge change: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Examples: Example(value='changing a SubClassOf r some b to a subClassOf r only b', description=None)","title":"Class: EdgeLogicalInterpretationChange"},{"location":"EdgeLogicalInterpretationChange/#class-edgelogicalinterpretationchange","text":"An edge change where the subjet, object, and edge label are unchanged, but the logical interpretation changes URI: kgcl:EdgeLogicalInterpretationChange","title":"Class: EdgeLogicalInterpretationChange"},{"location":"EdgeLogicalInterpretationChange/#parents","text":"is_a: EdgeChange - A change in which the entity changes is an edge","title":"Parents"},{"location":"EdgeLogicalInterpretationChange/#attributes","text":"","title":"Attributes"},{"location":"EdgeLogicalInterpretationChange/#inherited-from-edge-change","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from edge change:"},{"location":"EdgeLogicalInterpretationChange/#other-properties","text":"Examples: Example(value='changing a SubClassOf r some b to a subClassOf r only b', description=None)","title":"Other properties"},{"location":"EdgeObsoletion/","text":"Class: EdgeObsoletion An edge change in which an edge is obsoleted. URI: kgcl:EdgeObsoletion Parents is_a: EdgeChange - A change in which the entity changes is an edge Uses Mixins mixin: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. Referenced by class Attributes Own annotation set OPT range: Annotation edge label OPT range: Node edge obsoletion\u279echange description OPT range: String object OPT range: Node subject OPT range: Node Inherited from edge change: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Aliases: relationship obsoletion Comments: Note there is not yet consensus in how this should be done in rdf/owl implementations. Simply marking the edge deprecated with render it visible to most clients.","title":"Class: EdgeObsoletion"},{"location":"EdgeObsoletion/#class-edgeobsoletion","text":"An edge change in which an edge is obsoleted. URI: kgcl:EdgeObsoletion","title":"Class: EdgeObsoletion"},{"location":"EdgeObsoletion/#parents","text":"is_a: EdgeChange - A change in which the entity changes is an edge","title":"Parents"},{"location":"EdgeObsoletion/#uses-mixins","text":"mixin: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element.","title":"Uses Mixins"},{"location":"EdgeObsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeObsoletion/#attributes","text":"","title":"Attributes"},{"location":"EdgeObsoletion/#own","text":"annotation set OPT range: Annotation edge label OPT range: Node edge obsoletion\u279echange description OPT range: String object OPT range: Node subject OPT range: Node","title":"Own"},{"location":"EdgeObsoletion/#inherited-from-edge-change","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from edge change:"},{"location":"EdgeObsoletion/#other-properties","text":"Aliases: relationship obsoletion Comments: Note there is not yet consensus in how this should be done in rdf/owl implementations. Simply marking the edge deprecated with render it visible to most clients.","title":"Other properties"},{"location":"InstanceNode/","text":"Class: InstanceNode A node that is an individual URI: kgcl:InstanceNode Parents is_a: Node - Any named entity in an ontology. May be a class, individual, property Attributes Inherited from node: annotation set OPT range: Annotation id REQ Description: CURIE or URI range: String name OPT range: String Other properties Aliases: named individual Mappings: owl:NamedIndividual","title":"Class: InstanceNode"},{"location":"InstanceNode/#class-instancenode","text":"A node that is an individual URI: kgcl:InstanceNode","title":"Class: InstanceNode"},{"location":"InstanceNode/#parents","text":"is_a: Node - Any named entity in an ontology. May be a class, individual, property","title":"Parents"},{"location":"InstanceNode/#attributes","text":"","title":"Attributes"},{"location":"InstanceNode/#inherited-from-node","text":"annotation set OPT range: Annotation id REQ Description: CURIE or URI range: String name OPT range: String","title":"Inherited from node:"},{"location":"InstanceNode/#other-properties","text":"Aliases: named individual Mappings: owl:NamedIndividual","title":"Other properties"},{"location":"LogicalDefinition/","text":"Class: LogicalDefinition URI: kgcl:LogicalDefinition Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Attributes","title":"Class: LogicalDefinition"},{"location":"LogicalDefinition/#class-logicaldefinition","text":"URI: kgcl:LogicalDefinition","title":"Class: LogicalDefinition"},{"location":"LogicalDefinition/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"LogicalDefinition/#attributes","text":"","title":"Attributes"},{"location":"MultiNodeObsoletion/","text":"Class: MultiNodeObsoletion A complex change consisting of multiple obsoletions. URI: kgcl:MultiNodeObsoletion Parents is_a: ComplexChange - A change that is is a composition of other changes Referenced by class Attributes Own multi node obsoletion\u279eassociated change set 0..* Description: All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D range: Change multi node obsoletion\u279echange description OPT range: String multi node obsoletion\u279echange set 0..* range: NodeObsoletion Inherited from complex change: was generated by OPT range: Activity Other properties Aliases: multi node deprecation multi class obsoletion multi term obsoletion multi concept obsoletion See also: https://github.com/cmungall/obo-scripts/blob/master/obo-obsoletify.pl","title":"Class: MultiNodeObsoletion"},{"location":"MultiNodeObsoletion/#class-multinodeobsoletion","text":"A complex change consisting of multiple obsoletions. URI: kgcl:MultiNodeObsoletion","title":"Class: MultiNodeObsoletion"},{"location":"MultiNodeObsoletion/#parents","text":"is_a: ComplexChange - A change that is is a composition of other changes","title":"Parents"},{"location":"MultiNodeObsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"MultiNodeObsoletion/#attributes","text":"","title":"Attributes"},{"location":"MultiNodeObsoletion/#own","text":"multi node obsoletion\u279eassociated change set 0..* Description: All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D range: Change multi node obsoletion\u279echange description OPT range: String multi node obsoletion\u279echange set 0..* range: NodeObsoletion","title":"Own"},{"location":"MultiNodeObsoletion/#inherited-from-complex-change","text":"was generated by OPT range: Activity","title":"Inherited from complex change:"},{"location":"MultiNodeObsoletion/#other-properties","text":"Aliases: multi node deprecation multi class obsoletion multi term obsoletion multi concept obsoletion See also: https://github.com/cmungall/obo-scripts/blob/master/obo-obsoletify.pl","title":"Other properties"},{"location":"NameBecomesSynonym/","text":"Class: NameBecomesSynonym A complex change where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym URI: kgcl:NameBecomesSynonym Parents is_a: ComplexChange - A change that is is a composition of other changes Referenced by class Attributes Own name becomes synonym\u279echange 1 OPT range: NodeRename name becomes synonym\u279echange 2 OPT range: NewSynonym Inherited from complex change: change set 0..* Description: A collection of changes range: Change was generated by OPT range: Activity","title":"Class: NameBecomesSynonym"},{"location":"NameBecomesSynonym/#class-namebecomessynonym","text":"A complex change where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym URI: kgcl:NameBecomesSynonym","title":"Class: NameBecomesSynonym"},{"location":"NameBecomesSynonym/#parents","text":"is_a: ComplexChange - A change that is is a composition of other changes","title":"Parents"},{"location":"NameBecomesSynonym/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NameBecomesSynonym/#attributes","text":"","title":"Attributes"},{"location":"NameBecomesSynonym/#own","text":"name becomes synonym\u279echange 1 OPT range: NodeRename name becomes synonym\u279echange 2 OPT range: NewSynonym","title":"Own"},{"location":"NameBecomesSynonym/#inherited-from-complex-change","text":"change set 0..* Description: A collection of changes range: Change was generated by OPT range: Activity","title":"Inherited from complex change:"},{"location":"NewSynonym/","text":"Class: NewSynonym A node change where a de-novo synonym is created URI: kgcl:NewSynonym Parents is_a: NodeSynonymChange Referenced by class None change 2 OPT NewSynonym NameBecomesSynonym name becomes synonym\u279echange 2 OPT NewSynonym Attributes Own new value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node synonym change: node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NewSynonym"},{"location":"NewSynonym/#class-newsynonym","text":"A node change where a de-novo synonym is created URI: kgcl:NewSynonym","title":"Class: NewSynonym"},{"location":"NewSynonym/#parents","text":"is_a: NodeSynonymChange","title":"Parents"},{"location":"NewSynonym/#referenced-by-class","text":"None change 2 OPT NewSynonym NameBecomesSynonym name becomes synonym\u279echange 2 OPT NewSynonym","title":"Referenced by class"},{"location":"NewSynonym/#attributes","text":"","title":"Attributes"},{"location":"NewSynonym/#own","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"NewSynonym/#inherited-from-node-synonym-change","text":"node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node synonym change:"},{"location":"NewTextDefinition/","text":"Class: NewTextDefinition A node change where a de-novo text definition is created URI: kgcl:NewTextDefinition Parents is_a: NodeTextDefinitionChange - A node change where the text definition is changed Attributes Own new value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node text definition change: node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NewTextDefinition"},{"location":"NewTextDefinition/#class-newtextdefinition","text":"A node change where a de-novo text definition is created URI: kgcl:NewTextDefinition","title":"Class: NewTextDefinition"},{"location":"NewTextDefinition/#parents","text":"is_a: NodeTextDefinitionChange - A node change where the text definition is changed","title":"Parents"},{"location":"NewTextDefinition/#attributes","text":"","title":"Attributes"},{"location":"NewTextDefinition/#own","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"NewTextDefinition/#inherited-from-node-text-definition-change","text":"node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node text definition change:"},{"location":"Node/","text":"Class: Node Any named entity in an ontology. May be a class, individual, property URI: kgcl:Node Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Children ClassNode - A node that is a class InstanceNode - A node that is an individual Referenced by class None consider OPT Node None edge label OPT Node NodeObsoletion node obsoletion\u279econsider OPT Node NodeObsoletion node obsoletion\u279ereplaced by OPT Node NodeUnobsoletion node unobsoletion\u279econsider OPT Node NodeUnobsoletion node unobsoletion\u279ereplaced by OPT Node None object OPT Node None property OPT Node None replaced by OPT Node None subject OPT Node Attributes Own annotation set OPT range: Annotation id REQ Description: CURIE or URI range: String name OPT range: String Other properties Aliases: entity","title":"Class: Node"},{"location":"Node/#class-node","text":"Any named entity in an ontology. May be a class, individual, property URI: kgcl:Node","title":"Class: Node"},{"location":"Node/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"Node/#children","text":"ClassNode - A node that is a class InstanceNode - A node that is an individual","title":"Children"},{"location":"Node/#referenced-by-class","text":"None consider OPT Node None edge label OPT Node NodeObsoletion node obsoletion\u279econsider OPT Node NodeObsoletion node obsoletion\u279ereplaced by OPT Node NodeUnobsoletion node unobsoletion\u279econsider OPT Node NodeUnobsoletion node unobsoletion\u279ereplaced by OPT Node None object OPT Node None property OPT Node None replaced by OPT Node None subject OPT Node","title":"Referenced by class"},{"location":"Node/#attributes","text":"","title":"Attributes"},{"location":"Node/#own","text":"annotation set OPT range: Annotation id REQ Description: CURIE or URI range: String name OPT range: String","title":"Own"},{"location":"Node/#other-properties","text":"Aliases: entity","title":"Other properties"},{"location":"NodeAnnotationChange/","text":"Class: NodeAnnotationChange A node change where the change alters node properties/annotations. TODO URI: kgcl:NodeAnnotationChange Parents is_a: NodeChange - A simple change where the change is about a node Children NodeAnnotationReplacement - A node annotation change where the change replaces a particular property value. TODO Referenced by class Attributes Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NodeAnnotationChange"},{"location":"NodeAnnotationChange/#class-nodeannotationchange","text":"A node change where the change alters node properties/annotations. TODO URI: kgcl:NodeAnnotationChange","title":"Class: NodeAnnotationChange"},{"location":"NodeAnnotationChange/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeAnnotationChange/#children","text":"NodeAnnotationReplacement - A node annotation change where the change replaces a particular property value. TODO","title":"Children"},{"location":"NodeAnnotationChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeAnnotationChange/#attributes","text":"","title":"Attributes"},{"location":"NodeAnnotationChange/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"NodeAnnotationReplacement/","text":"Class: NodeAnnotationReplacement A node annotation change where the change replaces a particular property value. TODO URI: kgcl:NodeAnnotationReplacement Parents is_a: NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO Attributes Inherited from node annotation change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NodeAnnotationReplacement"},{"location":"NodeAnnotationReplacement/#class-nodeannotationreplacement","text":"A node annotation change where the change replaces a particular property value. TODO URI: kgcl:NodeAnnotationReplacement","title":"Class: NodeAnnotationReplacement"},{"location":"NodeAnnotationReplacement/#parents","text":"is_a: NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO","title":"Parents"},{"location":"NodeAnnotationReplacement/#attributes","text":"","title":"Attributes"},{"location":"NodeAnnotationReplacement/#inherited-from-node-annotation-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node annotation change:"},{"location":"NodeChange/","text":"Class: NodeChange A simple change where the change is about a node URI: kgcl:NodeChange Parents is_a: SimpleChange - A change that is about a single ontology element Children AddNodeToSubset - Places a node inside a subset, by annotating that node NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO NodeCreation - a node change in which a new node is created NodeDeletion - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. NodeRename - A node change where the name (aka rdfs:label) of the node changes NodeSynonymChange NodeTextDefinitionChange - A node change where the text definition is changed NodeUnobsoletion - unobsoletion of a node deprecates usage of that node. Rarely applied. RemovedNodeFromSubset - Removes a node from a subset, by removing an annotation Referenced by class Attributes Own node change\u279eabout OPT range: String Inherited from simple change: new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NodeChange"},{"location":"NodeChange/#class-nodechange","text":"A simple change where the change is about a node URI: kgcl:NodeChange","title":"Class: NodeChange"},{"location":"NodeChange/#parents","text":"is_a: SimpleChange - A change that is about a single ontology element","title":"Parents"},{"location":"NodeChange/#children","text":"AddNodeToSubset - Places a node inside a subset, by annotating that node NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO NodeCreation - a node change in which a new node is created NodeDeletion - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. NodeRename - A node change where the name (aka rdfs:label) of the node changes NodeSynonymChange NodeTextDefinitionChange - A node change where the text definition is changed NodeUnobsoletion - unobsoletion of a node deprecates usage of that node. Rarely applied. RemovedNodeFromSubset - Removes a node from a subset, by removing an annotation","title":"Children"},{"location":"NodeChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeChange/#attributes","text":"","title":"Attributes"},{"location":"NodeChange/#own","text":"node change\u279eabout OPT range: String","title":"Own"},{"location":"NodeChange/#inherited-from-simple-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from simple change:"},{"location":"NodeCreation/","text":"Class: NodeCreation a node change in which a new node is created URI: kgcl:NodeCreation Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: Creation - Creation of an element. Referenced by class Attributes Own annotation set OPT range: Annotation id REQ Description: CURIE or URI range: String name OPT range: String node creation\u279echange description OPT range: String Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties See also: http://wiki.geneontology.org/index.php/Guidelines_for_creating_a_GO_term","title":"Class: NodeCreation"},{"location":"NodeCreation/#class-nodecreation","text":"a node change in which a new node is created URI: kgcl:NodeCreation","title":"Class: NodeCreation"},{"location":"NodeCreation/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeCreation/#uses-mixins","text":"mixin: Creation - Creation of an element.","title":"Uses Mixins"},{"location":"NodeCreation/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeCreation/#attributes","text":"","title":"Attributes"},{"location":"NodeCreation/#own","text":"annotation set OPT range: Annotation id REQ Description: CURIE or URI range: String name OPT range: String node creation\u279echange description OPT range: String","title":"Own"},{"location":"NodeCreation/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"NodeCreation/#other-properties","text":"See also: http://wiki.geneontology.org/index.php/Guidelines_for_creating_a_GO_term","title":"Other properties"},{"location":"NodeDeepening/","text":"Class: NodeDeepening A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any edge label in the relational graph URI: kgcl:NodeDeepening Parents is_a: NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes Referenced by class Attributes Own node deepening\u279echange description OPT range: String Inherited from node move: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Examples: Example(value='changing a is-a b to a is-a c, where c is a subclass of b', description=None)","title":"Class: NodeDeepening"},{"location":"NodeDeepening/#class-nodedeepening","text":"A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any edge label in the relational graph URI: kgcl:NodeDeepening","title":"Class: NodeDeepening"},{"location":"NodeDeepening/#parents","text":"is_a: NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes","title":"Parents"},{"location":"NodeDeepening/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeDeepening/#attributes","text":"","title":"Attributes"},{"location":"NodeDeepening/#own","text":"node deepening\u279echange description OPT range: String","title":"Own"},{"location":"NodeDeepening/#inherited-from-node-move","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node move:"},{"location":"NodeDeepening/#other-properties","text":"Examples: Example(value='changing a is-a b to a is-a c, where c is a subclass of b', description=None)","title":"Other properties"},{"location":"NodeDeletion/","text":"Class: NodeDeletion Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise URI: kgcl:NodeDeletion Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: Deletion - Removal of an element. Referenced by class Attributes Own node deletion\u279echange description OPT range: String Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NodeDeletion"},{"location":"NodeDeletion/#class-nodedeletion","text":"Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise URI: kgcl:NodeDeletion","title":"Class: NodeDeletion"},{"location":"NodeDeletion/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeDeletion/#uses-mixins","text":"mixin: Deletion - Removal of an element.","title":"Uses Mixins"},{"location":"NodeDeletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeDeletion/#attributes","text":"","title":"Attributes"},{"location":"NodeDeletion/#own","text":"node deletion\u279echange description OPT range: String","title":"Own"},{"location":"NodeDeletion/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"NodeMove/","text":"Class: NodeMove A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes URI: kgcl:NodeMove Parents is_a: EdgeChange - A change in which the entity changes is an edge Children NodeDeepening - A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any edge label in the relational graph NodeShallowing - The opposite of node deepening Referenced by class Attributes Own node move\u279echange description OPT range: String Inherited from edge change: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Examples: Example(value='changing a is-a b to a is-a c', description=None)","title":"Class: NodeMove"},{"location":"NodeMove/#class-nodemove","text":"A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes URI: kgcl:NodeMove","title":"Class: NodeMove"},{"location":"NodeMove/#parents","text":"is_a: EdgeChange - A change in which the entity changes is an edge","title":"Parents"},{"location":"NodeMove/#children","text":"NodeDeepening - A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any edge label in the relational graph NodeShallowing - The opposite of node deepening","title":"Children"},{"location":"NodeMove/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeMove/#attributes","text":"","title":"Attributes"},{"location":"NodeMove/#own","text":"node move\u279echange description OPT range: String","title":"Own"},{"location":"NodeMove/#inherited-from-edge-change","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from edge change:"},{"location":"NodeMove/#other-properties","text":"Examples: Example(value='changing a is-a b to a is-a c', description=None)","title":"Other properties"},{"location":"NodeObsoletion/","text":"Class: NodeObsoletion Obsoletion of a node deprecates usage of that node, but does not delete it. URI: kgcl:NodeObsoletion Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. Children NodeObsoletionWithMerge - An obsoletion change in which information from the obsoleted node is moved to a single target. NodeObsoletionWithSplit - An obsoletion change in which information from the obsoleted node is moved selectively to multiple targets Referenced by class MultiNodeObsoletion multi node obsoletion\u279echange set 0.. NodeObsoletion * Attributes Own node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279echange description OPT range: String node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Aliases: node deprecation class obsoletion term obsoletion concept obsoletion See also: http://wiki.geneontology.org/index.php/Obsoleting_an_Existing_Ontology_Term","title":"Class: NodeObsoletion"},{"location":"NodeObsoletion/#class-nodeobsoletion","text":"Obsoletion of a node deprecates usage of that node, but does not delete it. URI: kgcl:NodeObsoletion","title":"Class: NodeObsoletion"},{"location":"NodeObsoletion/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeObsoletion/#uses-mixins","text":"mixin: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element.","title":"Uses Mixins"},{"location":"NodeObsoletion/#children","text":"NodeObsoletionWithMerge - An obsoletion change in which information from the obsoleted node is moved to a single target. NodeObsoletionWithSplit - An obsoletion change in which information from the obsoleted node is moved selectively to multiple targets","title":"Children"},{"location":"NodeObsoletion/#referenced-by-class","text":"MultiNodeObsoletion multi node obsoletion\u279echange set 0.. NodeObsoletion *","title":"Referenced by class"},{"location":"NodeObsoletion/#attributes","text":"","title":"Attributes"},{"location":"NodeObsoletion/#own","text":"node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279echange description OPT range: String node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node","title":"Own"},{"location":"NodeObsoletion/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"NodeObsoletion/#other-properties","text":"Aliases: node deprecation class obsoletion term obsoletion concept obsoletion See also: http://wiki.geneontology.org/index.php/Obsoleting_an_Existing_Ontology_Term","title":"Other properties"},{"location":"NodeObsoletionWithMerge/","text":"Class: NodeObsoletionWithMerge An obsoletion change in which information from the obsoleted node is moved to a single target. URI: kgcl:NodeObsoletionWithMerge Parents is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. Referenced by class Attributes Own node obsoletion with merge\u279eabout OPT range: String node obsoletion with merge\u279echange description OPT range: String node obsoletion with merge\u279etarget OPT range: String Inherited from node obsoletion: new value OPT Description: The value of a property held in the old instance of the ontology range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties See also: http://wiki.geneontology.org/index.php/Merging_Ontology_Terms http://wiki.geneontology.org/index.php/Principles_for_merging_terms","title":"Class: NodeObsoletionWithMerge"},{"location":"NodeObsoletionWithMerge/#class-nodeobsoletionwithmerge","text":"An obsoletion change in which information from the obsoleted node is moved to a single target. URI: kgcl:NodeObsoletionWithMerge","title":"Class: NodeObsoletionWithMerge"},{"location":"NodeObsoletionWithMerge/#parents","text":"is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Parents"},{"location":"NodeObsoletionWithMerge/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeObsoletionWithMerge/#attributes","text":"","title":"Attributes"},{"location":"NodeObsoletionWithMerge/#own","text":"node obsoletion with merge\u279eabout OPT range: String node obsoletion with merge\u279echange description OPT range: String node obsoletion with merge\u279etarget OPT range: String","title":"Own"},{"location":"NodeObsoletionWithMerge/#inherited-from-node-obsoletion","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node obsoletion:"},{"location":"NodeObsoletionWithMerge/#other-properties","text":"See also: http://wiki.geneontology.org/index.php/Merging_Ontology_Terms http://wiki.geneontology.org/index.php/Principles_for_merging_terms","title":"Other properties"},{"location":"NodeObsoletionWithSplit/","text":"Class: NodeObsoletionWithSplit An obsoletion change in which information from the obsoleted node is moved selectively to multiple targets URI: kgcl:NodeObsoletionWithSplit Parents is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. Referenced by class Attributes Own node obsoletion with split\u279echange description OPT range: String node obsoletion with split\u279etarget 0..* range: String Inherited from node obsoletion: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NodeObsoletionWithSplit"},{"location":"NodeObsoletionWithSplit/#class-nodeobsoletionwithsplit","text":"An obsoletion change in which information from the obsoleted node is moved selectively to multiple targets URI: kgcl:NodeObsoletionWithSplit","title":"Class: NodeObsoletionWithSplit"},{"location":"NodeObsoletionWithSplit/#parents","text":"is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Parents"},{"location":"NodeObsoletionWithSplit/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeObsoletionWithSplit/#attributes","text":"","title":"Attributes"},{"location":"NodeObsoletionWithSplit/#own","text":"node obsoletion with split\u279echange description OPT range: String node obsoletion with split\u279etarget 0..* range: String","title":"Own"},{"location":"NodeObsoletionWithSplit/#inherited-from-node-obsoletion","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node obsoletion:"},{"location":"NodeRename/","text":"Class: NodeRename A node change where the name (aka rdfs:label) of the node changes URI: kgcl:NodeRename Parents is_a: NodeChange - A simple change where the change is about a node Referenced by class None change 1 OPT NodeRename NameBecomesSynonym name becomes synonym\u279echange 1 OPT NodeRename Attributes Own has textual diff OPT Description: A representation of the diff in ascii text range: TextualDiff node rename\u279echange description OPT range: String node rename\u279enew value OPT range: String node rename\u279eold value OPT range: String Inherited from node change: node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Class: NodeRename"},{"location":"NodeRename/#class-noderename","text":"A node change where the name (aka rdfs:label) of the node changes URI: kgcl:NodeRename","title":"Class: NodeRename"},{"location":"NodeRename/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeRename/#referenced-by-class","text":"None change 1 OPT NodeRename NameBecomesSynonym name becomes synonym\u279echange 1 OPT NodeRename","title":"Referenced by class"},{"location":"NodeRename/#attributes","text":"","title":"Attributes"},{"location":"NodeRename/#own","text":"has textual diff OPT Description: A representation of the diff in ascii text range: TextualDiff node rename\u279echange description OPT range: String node rename\u279enew value OPT range: String node rename\u279eold value OPT range: String","title":"Own"},{"location":"NodeRename/#inherited-from-node-change","text":"node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"NodeShallowing/","text":"Class: NodeShallowing The opposite of node deepening URI: kgcl:NodeShallowing Parents is_a: NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes Referenced by class Attributes Own node shallowing\u279echange description OPT range: String Inherited from node move: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Examples: Example(value='changing a is-a c to a is-a b, where c is a subclass of b', description=None)","title":"Class: NodeShallowing"},{"location":"NodeShallowing/#class-nodeshallowing","text":"The opposite of node deepening URI: kgcl:NodeShallowing","title":"Class: NodeShallowing"},{"location":"NodeShallowing/#parents","text":"is_a: NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the edge label is preserved and the object/parent node changes","title":"Parents"},{"location":"NodeShallowing/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeShallowing/#attributes","text":"","title":"Attributes"},{"location":"NodeShallowing/#own","text":"node shallowing\u279echange description OPT range: String","title":"Own"},{"location":"NodeShallowing/#inherited-from-node-move","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node move:"},{"location":"NodeShallowing/#other-properties","text":"Examples: Example(value='changing a is-a c to a is-a b, where c is a subclass of b', description=None)","title":"Other properties"},{"location":"NodeSynonymChange/","text":"Class: NodeSynonymChange URI: kgcl:NodeSynonymChange Parents is_a: NodeChange - A simple change where the change is about a node Children NewSynonym - A node change where a de-novo synonym is created RemoveSynonym - A node change where a synonym is deleted SynonymReplacement - A node change where the text of a synonym is changed Referenced by class Attributes Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NodeSynonymChange"},{"location":"NodeSynonymChange/#class-nodesynonymchange","text":"URI: kgcl:NodeSynonymChange","title":"Class: NodeSynonymChange"},{"location":"NodeSynonymChange/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeSynonymChange/#children","text":"NewSynonym - A node change where a de-novo synonym is created RemoveSynonym - A node change where a synonym is deleted SynonymReplacement - A node change where the text of a synonym is changed","title":"Children"},{"location":"NodeSynonymChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeSynonymChange/#attributes","text":"","title":"Attributes"},{"location":"NodeSynonymChange/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"NodeTextDefinitionChange/","text":"Class: NodeTextDefinitionChange A node change where the text definition is changed URI: kgcl:NodeTextDefinitionChange Parents is_a: NodeChange - A simple change where the change is about a node Children NewTextDefinition - A node change where a de-novo text definition is created RemoveTextDefinition - A node change where a text definition is deleted TextDefinitionReplacement - A node change where a text definition is modified Referenced by class Attributes Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NodeTextDefinitionChange"},{"location":"NodeTextDefinitionChange/#class-nodetextdefinitionchange","text":"A node change where the text definition is changed URI: kgcl:NodeTextDefinitionChange","title":"Class: NodeTextDefinitionChange"},{"location":"NodeTextDefinitionChange/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeTextDefinitionChange/#children","text":"NewTextDefinition - A node change where a de-novo text definition is created RemoveTextDefinition - A node change where a text definition is deleted TextDefinitionReplacement - A node change where a text definition is modified","title":"Children"},{"location":"NodeTextDefinitionChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeTextDefinitionChange/#attributes","text":"","title":"Attributes"},{"location":"NodeTextDefinitionChange/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"NodeUnobsoletion/","text":"Class: NodeUnobsoletion unobsoletion of a node deprecates usage of that node. Rarely applied. URI: kgcl:NodeUnobsoletion Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: Unobsoletion - Opposite operation of obsoletion. Rarely performed. Referenced by class Attributes Own node unobsoletion\u279echange description OPT range: String node unobsoletion\u279econsider OPT range: Node node unobsoletion\u279ereplaced by OPT range: Node Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Aliases: node undeprecation class unobsoletion term unobsoletion concept unobsoletion See also: http://wiki.geneontology.org/index.php/Restoring_an_Obsolete_Ontology_Term","title":"Class: NodeUnobsoletion"},{"location":"NodeUnobsoletion/#class-nodeunobsoletion","text":"unobsoletion of a node deprecates usage of that node. Rarely applied. URI: kgcl:NodeUnobsoletion","title":"Class: NodeUnobsoletion"},{"location":"NodeUnobsoletion/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeUnobsoletion/#uses-mixins","text":"mixin: Unobsoletion - Opposite operation of obsoletion. Rarely performed.","title":"Uses Mixins"},{"location":"NodeUnobsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeUnobsoletion/#attributes","text":"","title":"Attributes"},{"location":"NodeUnobsoletion/#own","text":"node unobsoletion\u279echange description OPT range: String node unobsoletion\u279econsider OPT range: Node node unobsoletion\u279ereplaced by OPT range: Node","title":"Own"},{"location":"NodeUnobsoletion/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"NodeUnobsoletion/#other-properties","text":"Aliases: node undeprecation class unobsoletion term unobsoletion concept unobsoletion See also: http://wiki.geneontology.org/index.php/Restoring_an_Obsolete_Ontology_Term","title":"Other properties"},{"location":"Obsoletion/","text":"Class: Obsoletion Obsoletion of an element deprecates usage of that element, but does not delete that element. URI: kgcl:Obsoletion Parents is_a: ChangeMixin - root class for all change mixins Mixin for EdgeObsoletion (mixin) - An edge change in which an edge is obsoleted. NodeObsoletion (mixin) - Obsoletion of a node deprecates usage of that node, but does not delete it. Referenced by class Attributes Other properties See also: http://wiki.geneontology.org/index.php/Obsoleting_an_Existing_Ontology_Term","title":"Class: Obsoletion"},{"location":"Obsoletion/#class-obsoletion","text":"Obsoletion of an element deprecates usage of that element, but does not delete that element. URI: kgcl:Obsoletion","title":"Class: Obsoletion"},{"location":"Obsoletion/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"Obsoletion/#mixin-for","text":"EdgeObsoletion (mixin) - An edge change in which an edge is obsoleted. NodeObsoletion (mixin) - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Mixin for"},{"location":"Obsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Obsoletion/#attributes","text":"","title":"Attributes"},{"location":"Obsoletion/#other-properties","text":"See also: http://wiki.geneontology.org/index.php/Obsoleting_an_Existing_Ontology_Term","title":"Other properties"},{"location":"OntologyElement/","text":"Class: OntologyElement Any component of an ontology or knowledge graph URI: kgcl:OntologyElement Children Edge - A relationship between two nodes. We assume owlstar or similar for existential restrictions LogicalDefinition Node - Any named entity in an ontology. May be a class, individual, property PropertyValue - a property-value pair Subset Referenced by class Attributes","title":"Class: OntologyElement"},{"location":"OntologyElement/#class-ontologyelement","text":"Any component of an ontology or knowledge graph URI: kgcl:OntologyElement","title":"Class: OntologyElement"},{"location":"OntologyElement/#children","text":"Edge - A relationship between two nodes. We assume owlstar or similar for existential restrictions LogicalDefinition Node - Any named entity in an ontology. May be a class, individual, property PropertyValue - a property-value pair Subset","title":"Children"},{"location":"OntologyElement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OntologyElement/#attributes","text":"","title":"Attributes"},{"location":"PropertyValue/","text":"Class: PropertyValue a property-value pair URI: kgcl:PropertyValue Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Children Annotation - owl annotations. Not to be confused with annotations sensu GO Referenced by class ChangeSetSummaryStatistic change set summary statistic\u279eproperty value set 0.. PropertyValue * None property value set 0.. PropertyValue * Attributes Own filler OPT range: String property OPT range: Node","title":"Class: PropertyValue"},{"location":"PropertyValue/#class-propertyvalue","text":"a property-value pair URI: kgcl:PropertyValue","title":"Class: PropertyValue"},{"location":"PropertyValue/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"PropertyValue/#children","text":"Annotation - owl annotations. Not to be confused with annotations sensu GO","title":"Children"},{"location":"PropertyValue/#referenced-by-class","text":"ChangeSetSummaryStatistic change set summary statistic\u279eproperty value set 0.. PropertyValue * None property value set 0.. PropertyValue *","title":"Referenced by class"},{"location":"PropertyValue/#attributes","text":"","title":"Attributes"},{"location":"PropertyValue/#own","text":"filler OPT range: String property OPT range: Node","title":"Own"},{"location":"RemoveFromSubset/","text":"Class: RemoveFromSubset removing an element from a subset URI: kgcl:RemoveFromSubset Parents is_a: ChangeMixin - root class for all change mixins Mixin for RemovedNodeFromSubset (mixin) - Removes a node from a subset, by removing an annotation Referenced by class Attributes Own remove from subset\u279ein subset OPT Description: subset that the element is being removed from range: Subset","title":"Class: RemoveFromSubset"},{"location":"RemoveFromSubset/#class-removefromsubset","text":"removing an element from a subset URI: kgcl:RemoveFromSubset","title":"Class: RemoveFromSubset"},{"location":"RemoveFromSubset/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"RemoveFromSubset/#mixin-for","text":"RemovedNodeFromSubset (mixin) - Removes a node from a subset, by removing an annotation","title":"Mixin for"},{"location":"RemoveFromSubset/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RemoveFromSubset/#attributes","text":"","title":"Attributes"},{"location":"RemoveFromSubset/#own","text":"remove from subset\u279ein subset OPT Description: subset that the element is being removed from range: Subset","title":"Own"},{"location":"RemoveSynonym/","text":"Class: RemoveSynonym A node change where a synonym is deleted URI: kgcl:RemoveSynonym Parents is_a: NodeSynonymChange Attributes Own old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node synonym change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Class: RemoveSynonym"},{"location":"RemoveSynonym/#class-removesynonym","text":"A node change where a synonym is deleted URI: kgcl:RemoveSynonym","title":"Class: RemoveSynonym"},{"location":"RemoveSynonym/#parents","text":"is_a: NodeSynonymChange","title":"Parents"},{"location":"RemoveSynonym/#attributes","text":"","title":"Attributes"},{"location":"RemoveSynonym/#own","text":"old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"RemoveSynonym/#inherited-from-node-synonym-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Inherited from node synonym change:"},{"location":"RemoveTextDefinition/","text":"Class: RemoveTextDefinition A node change where a text definition is deleted URI: kgcl:RemoveTextDefinition Parents is_a: NodeTextDefinitionChange - A node change where the text definition is changed Attributes Own old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node text definition change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Class: RemoveTextDefinition"},{"location":"RemoveTextDefinition/#class-removetextdefinition","text":"A node change where a text definition is deleted URI: kgcl:RemoveTextDefinition","title":"Class: RemoveTextDefinition"},{"location":"RemoveTextDefinition/#parents","text":"is_a: NodeTextDefinitionChange - A node change where the text definition is changed","title":"Parents"},{"location":"RemoveTextDefinition/#attributes","text":"","title":"Attributes"},{"location":"RemoveTextDefinition/#own","text":"old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"RemoveTextDefinition/#inherited-from-node-text-definition-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Inherited from node text definition change:"},{"location":"RemovedNodeFromSubset/","text":"Class: RemovedNodeFromSubset Removes a node from a subset, by removing an annotation URI: kgcl:RemovedNodeFromSubset Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: RemoveFromSubset - removing an element from a subset Attributes Inherited from node change: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Mixed in from remove from subset: remove from subset\u279ein subset OPT Description: subset that the element is being removed from range: Subset Other properties Aliases: remove term from slim","title":"Class: RemovedNodeFromSubset"},{"location":"RemovedNodeFromSubset/#class-removednodefromsubset","text":"Removes a node from a subset, by removing an annotation URI: kgcl:RemovedNodeFromSubset","title":"Class: RemovedNodeFromSubset"},{"location":"RemovedNodeFromSubset/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"RemovedNodeFromSubset/#uses-mixins","text":"mixin: RemoveFromSubset - removing an element from a subset","title":"Uses Mixins"},{"location":"RemovedNodeFromSubset/#attributes","text":"","title":"Attributes"},{"location":"RemovedNodeFromSubset/#inherited-from-node-change","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node change:"},{"location":"RemovedNodeFromSubset/#mixed-in-from-remove-from-subset","text":"remove from subset\u279ein subset OPT Description: subset that the element is being removed from range: Subset","title":"Mixed in from remove from subset:"},{"location":"RemovedNodeFromSubset/#other-properties","text":"Aliases: remove term from slim","title":"Other properties"},{"location":"SimpleChange/","text":"Class: SimpleChange A change that is about a single ontology element URI: kgcl:SimpleChange Parents is_a: Change - Any change perform on an ontology or knowledge graph Children DatatypeChange EdgeChange - A change in which the entity changes is an edge NodeChange - A simple change where the change is about a node Referenced by class Attributes Own about OPT Description: The 'focus' entity on which the change operates range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from change: was generated by OPT range: Activity Other properties Aliases: atomic change","title":"Class: SimpleChange"},{"location":"SimpleChange/#class-simplechange","text":"A change that is about a single ontology element URI: kgcl:SimpleChange","title":"Class: SimpleChange"},{"location":"SimpleChange/#parents","text":"is_a: Change - Any change perform on an ontology or knowledge graph","title":"Parents"},{"location":"SimpleChange/#children","text":"DatatypeChange EdgeChange - A change in which the entity changes is an edge NodeChange - A simple change where the change is about a node","title":"Children"},{"location":"SimpleChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"SimpleChange/#attributes","text":"","title":"Attributes"},{"location":"SimpleChange/#own","text":"about OPT Description: The 'focus' entity on which the change operates range: String new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"SimpleChange/#inherited-from-change","text":"was generated by OPT range: Activity","title":"Inherited from change:"},{"location":"SimpleChange/#other-properties","text":"Aliases: atomic change","title":"Other properties"},{"location":"Subset/","text":"Class: Subset URI: kgcl:Subset Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Referenced by class AddToSubset add to subset\u279ein subset OPT Subset None in subset OPT Subset RemoveFromSubset remove from subset\u279ein subset OPT Subset Attributes","title":"Class: Subset"},{"location":"Subset/#class-subset","text":"URI: kgcl:Subset","title":"Class: Subset"},{"location":"Subset/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"Subset/#referenced-by-class","text":"AddToSubset add to subset\u279ein subset OPT Subset None in subset OPT Subset RemoveFromSubset remove from subset\u279ein subset OPT Subset","title":"Referenced by class"},{"location":"Subset/#attributes","text":"","title":"Attributes"},{"location":"SynonymReplacement/","text":"Class: SynonymReplacement A node change where the text of a synonym is changed URI: kgcl:SynonymReplacement Parents is_a: NodeSynonymChange Attributes Own has textual diff OPT Description: A representation of the diff in ascii text range: TextualDiff new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node synonym change: node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Class: SynonymReplacement"},{"location":"SynonymReplacement/#class-synonymreplacement","text":"A node change where the text of a synonym is changed URI: kgcl:SynonymReplacement","title":"Class: SynonymReplacement"},{"location":"SynonymReplacement/#parents","text":"is_a: NodeSynonymChange","title":"Parents"},{"location":"SynonymReplacement/#attributes","text":"","title":"Attributes"},{"location":"SynonymReplacement/#own","text":"has textual diff OPT Description: A representation of the diff in ascii text range: TextualDiff new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"SynonymReplacement/#inherited-from-node-synonym-change","text":"node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Inherited from node synonym change:"},{"location":"TextDefinitionReplacement/","text":"Class: TextDefinitionReplacement A node change where a text definition is modified URI: kgcl:TextDefinitionReplacement Parents is_a: NodeTextDefinitionChange - A node change where the text definition is changed Attributes Own has textual diff OPT Description: A representation of the diff in ascii text range: TextualDiff new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node text definition change: node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Class: TextDefinitionReplacement"},{"location":"TextDefinitionReplacement/#class-textdefinitionreplacement","text":"A node change where a text definition is modified URI: kgcl:TextDefinitionReplacement","title":"Class: TextDefinitionReplacement"},{"location":"TextDefinitionReplacement/#parents","text":"is_a: NodeTextDefinitionChange - A node change where the text definition is changed","title":"Parents"},{"location":"TextDefinitionReplacement/#attributes","text":"","title":"Attributes"},{"location":"TextDefinitionReplacement/#own","text":"has textual diff OPT Description: A representation of the diff in ascii text range: TextualDiff new value OPT Description: The value of a property held in the old instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"TextDefinitionReplacement/#inherited-from-node-text-definition-change","text":"node change\u279eabout OPT range: String was generated by OPT range: Activity","title":"Inherited from node text definition change:"},{"location":"TextualDiff/","text":"Class: TextualDiff A summarizing of a change on a piece of text. This could be rendered in a number of different ways URI: kgcl:TextualDiff Referenced by class Change has textual diff OPT TextualDiff Attributes","title":"Class: TextualDiff"},{"location":"TextualDiff/#class-textualdiff","text":"A summarizing of a change on a piece of text. This could be rendered in a number of different ways URI: kgcl:TextualDiff","title":"Class: TextualDiff"},{"location":"TextualDiff/#referenced-by-class","text":"Change has textual diff OPT TextualDiff","title":"Referenced by class"},{"location":"TextualDiff/#attributes","text":"","title":"Attributes"},{"location":"Transaction/","text":"Class: Transaction A unified set of changes. Could be a single change, or the results of an ontology diff URI: kgcl:Transaction Attributes Own change set 0..* Description: A collection of changes range: Change","title":"Class: Transaction"},{"location":"Transaction/#class-transaction","text":"A unified set of changes. Could be a single change, or the results of an ontology diff URI: kgcl:Transaction","title":"Class: Transaction"},{"location":"Transaction/#attributes","text":"","title":"Attributes"},{"location":"Transaction/#own","text":"change set 0..* Description: A collection of changes range: Change","title":"Own"},{"location":"Unobsoletion/","text":"Class: Unobsoletion Opposite operation of obsoletion. Rarely performed. URI: kgcl:Unobsoletion Parents is_a: ChangeMixin - root class for all change mixins Mixin for NodeUnobsoletion (mixin) - unobsoletion of a node deprecates usage of that node. Rarely applied. Referenced by class Attributes Other properties See also: http://wiki.geneontology.org/index.php/Restoring_an_Obsolete_Ontology_Term","title":"Class: Unobsoletion"},{"location":"Unobsoletion/#class-unobsoletion","text":"Opposite operation of obsoletion. Rarely performed. URI: kgcl:Unobsoletion","title":"Class: Unobsoletion"},{"location":"Unobsoletion/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"Unobsoletion/#mixin-for","text":"NodeUnobsoletion (mixin) - unobsoletion of a node deprecates usage of that node. Rarely applied.","title":"Mixin for"},{"location":"Unobsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Unobsoletion/#attributes","text":"","title":"Attributes"},{"location":"Unobsoletion/#other-properties","text":"See also: http://wiki.geneontology.org/index.php/Restoring_an_Obsolete_Ontology_Term","title":"Other properties"},{"location":"about/","text":"Slot: about The 'focus' entity on which the change operates URI: kgcl:about Domain and Range None -> OPT String Parents Children edge change\u279eabout node change\u279eabout Used by DatatypeChange SimpleChange","title":"Slot: about"},{"location":"about/#slot-about","text":"The 'focus' entity on which the change operates URI: kgcl:about","title":"Slot: about"},{"location":"about/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"about/#parents","text":"","title":"Parents"},{"location":"about/#children","text":"edge change\u279eabout node change\u279eabout","title":"Children"},{"location":"about/#used-by","text":"DatatypeChange SimpleChange","title":"Used by"},{"location":"acted_on_behalf_of/","text":"Slot: acted_on_behalf_of URI: kgcl:acted_on_behalf_of Domain and Range None -> OPT Agent Parents Children Used by Agent Other properties Mappings: prov:actedOnBehalfOf","title":"Slot: acted_on_behalf_of"},{"location":"acted_on_behalf_of/#slot-acted_on_behalf_of","text":"URI: kgcl:acted_on_behalf_of","title":"Slot: acted_on_behalf_of"},{"location":"acted_on_behalf_of/#domain-and-range","text":"None -> OPT Agent","title":"Domain and Range"},{"location":"acted_on_behalf_of/#parents","text":"","title":"Parents"},{"location":"acted_on_behalf_of/#children","text":"","title":"Children"},{"location":"acted_on_behalf_of/#used-by","text":"Agent","title":"Used by"},{"location":"acted_on_behalf_of/#other-properties","text":"Mappings: prov:actedOnBehalfOf","title":"Other properties"},{"location":"activity_id/","text":"Slot: activity_id URI: kgcl:activity_id Domain and Range None -> REQ String Parents Children Used by Activity","title":"Slot: activity_id"},{"location":"activity_id/#slot-activity_id","text":"URI: kgcl:activity_id","title":"Slot: activity_id"},{"location":"activity_id/#domain-and-range","text":"None -> REQ String","title":"Domain and Range"},{"location":"activity_id/#parents","text":"","title":"Parents"},{"location":"activity_id/#children","text":"","title":"Children"},{"location":"activity_id/#used-by","text":"Activity","title":"Used by"},{"location":"add_to_subset_in_subset/","text":"Slot: add_to_subset_in_subset subset that the element is being placed inside. URI: kgcl:add_to_subset_in_subset Domain and Range AddToSubset -> OPT Subset Parents is_a: in subset Children Used by AddNodeToSubset AddToSubset","title":"Slot: add_to_subset_in_subset"},{"location":"add_to_subset_in_subset/#slot-add_to_subset_in_subset","text":"subset that the element is being placed inside. URI: kgcl:add_to_subset_in_subset","title":"Slot: add_to_subset_in_subset"},{"location":"add_to_subset_in_subset/#domain-and-range","text":"AddToSubset -> OPT Subset","title":"Domain and Range"},{"location":"add_to_subset_in_subset/#parents","text":"is_a: in subset","title":"Parents"},{"location":"add_to_subset_in_subset/#children","text":"","title":"Children"},{"location":"add_to_subset_in_subset/#used-by","text":"AddNodeToSubset AddToSubset","title":"Used by"},{"location":"annotation_set/","text":"Slot: annotation_set URI: kgcl:annotation_set Domain and Range None -> OPT Annotation Parents Children Used by Annotation ClassNode Edge EdgeCreation EdgeDeletion EdgeObsoletion InstanceNode Node NodeCreation","title":"Slot: annotation_set"},{"location":"annotation_set/#slot-annotation_set","text":"URI: kgcl:annotation_set","title":"Slot: annotation_set"},{"location":"annotation_set/#domain-and-range","text":"None -> OPT Annotation","title":"Domain and Range"},{"location":"annotation_set/#parents","text":"","title":"Parents"},{"location":"annotation_set/#children","text":"","title":"Children"},{"location":"annotation_set/#used-by","text":"Annotation ClassNode Edge EdgeCreation EdgeDeletion EdgeObsoletion InstanceNode Node NodeCreation","title":"Used by"},{"location":"associated_change_set/","text":"Slot: associated_change_set All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D URI: kgcl:associated_change_set Domain and Range None -> 0..* Change Parents is_a: change set Children Used by","title":"Slot: associated_change_set"},{"location":"associated_change_set/#slot-associated_change_set","text":"All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D URI: kgcl:associated_change_set","title":"Slot: associated_change_set"},{"location":"associated_change_set/#domain-and-range","text":"None -> 0..* Change","title":"Domain and Range"},{"location":"associated_change_set/#parents","text":"is_a: change set","title":"Parents"},{"location":"associated_change_set/#children","text":"","title":"Children"},{"location":"associated_change_set/#used-by","text":"","title":"Used by"},{"location":"change_1/","text":"Slot: change_1 URI: kgcl:change_1 Domain and Range None -> OPT NodeRename Parents Children name becomes synonym\u279echange 1 Used by","title":"Slot: change_1"},{"location":"change_1/#slot-change_1","text":"URI: kgcl:change_1","title":"Slot: change_1"},{"location":"change_1/#domain-and-range","text":"None -> OPT NodeRename","title":"Domain and Range"},{"location":"change_1/#parents","text":"","title":"Parents"},{"location":"change_1/#children","text":"name becomes synonym\u279echange 1","title":"Children"},{"location":"change_1/#used-by","text":"","title":"Used by"},{"location":"change_2/","text":"Slot: change_2 URI: kgcl:change_2 Domain and Range None -> OPT NewSynonym Parents Children name becomes synonym\u279echange 2 Used by","title":"Slot: change_2"},{"location":"change_2/#slot-change_2","text":"URI: kgcl:change_2","title":"Slot: change_2"},{"location":"change_2/#domain-and-range","text":"None -> OPT NewSynonym","title":"Domain and Range"},{"location":"change_2/#parents","text":"","title":"Parents"},{"location":"change_2/#children","text":"name becomes synonym\u279echange 2","title":"Children"},{"location":"change_2/#used-by","text":"","title":"Used by"},{"location":"change_description/","text":"Slot: change_description A string serialization of the change URI: kgcl:change_description Domain and Range None -> OPT String Parents Children edge creation\u279echange description edge deletion\u279echange description edge label change\u279echange description edge obsoletion\u279echange description multi node obsoletion\u279echange description node creation\u279echange description node deletion\u279echange description node move\u279echange description node obsoletion\u279echange description node rename\u279echange description node unobsoletion\u279echange description Used by","title":"Slot: change_description"},{"location":"change_description/#slot-change_description","text":"A string serialization of the change URI: kgcl:change_description","title":"Slot: change_description"},{"location":"change_description/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"change_description/#parents","text":"","title":"Parents"},{"location":"change_description/#children","text":"edge creation\u279echange description edge deletion\u279echange description edge label change\u279echange description edge obsoletion\u279echange description multi node obsoletion\u279echange description node creation\u279echange description node deletion\u279echange description node move\u279echange description node obsoletion\u279echange description node rename\u279echange description node unobsoletion\u279echange description","title":"Children"},{"location":"change_description/#used-by","text":"","title":"Used by"},{"location":"change_set/","text":"Slot: change_set A collection of changes URI: kgcl:change_set Domain and Range None -> 0..* Change Parents Children associated change set multi node obsoletion\u279eassociated change set multi node obsoletion\u279echange set node obsoletion\u279eassociated change set Used by ComplexChange NameBecomesSynonym Transaction","title":"Slot: change_set"},{"location":"change_set/#slot-change_set","text":"A collection of changes URI: kgcl:change_set","title":"Slot: change_set"},{"location":"change_set/#domain-and-range","text":"None -> 0..* Change","title":"Domain and Range"},{"location":"change_set/#parents","text":"","title":"Parents"},{"location":"change_set/#children","text":"associated change set multi node obsoletion\u279eassociated change set multi node obsoletion\u279echange set node obsoletion\u279eassociated change set","title":"Children"},{"location":"change_set/#used-by","text":"ComplexChange NameBecomesSynonym Transaction","title":"Used by"},{"location":"change_set_summary_statistic_change_type/","text":"Slot: change_set_summary_statistic_change_type URI: kgcl:change_set_summary_statistic_change_type Domain and Range ChangeSetSummaryStatistic -> OPT ChangeClassType Parents is_a: change type Children Used by ChangeSetSummaryStatistic","title":"Slot: change_set_summary_statistic_change_type"},{"location":"change_set_summary_statistic_change_type/#slot-change_set_summary_statistic_change_type","text":"URI: kgcl:change_set_summary_statistic_change_type","title":"Slot: change_set_summary_statistic_change_type"},{"location":"change_set_summary_statistic_change_type/#domain-and-range","text":"ChangeSetSummaryStatistic -> OPT ChangeClassType","title":"Domain and Range"},{"location":"change_set_summary_statistic_change_type/#parents","text":"is_a: change type","title":"Parents"},{"location":"change_set_summary_statistic_change_type/#children","text":"","title":"Children"},{"location":"change_set_summary_statistic_change_type/#used-by","text":"ChangeSetSummaryStatistic","title":"Used by"},{"location":"change_set_summary_statistic_count/","text":"Slot: change_set_summary_statistic_count URI: kgcl:change_set_summary_statistic_count Domain and Range ChangeSetSummaryStatistic -> OPT Integer Parents is_a: count Children Used by ChangeSetSummaryStatistic","title":"Slot: change_set_summary_statistic_count"},{"location":"change_set_summary_statistic_count/#slot-change_set_summary_statistic_count","text":"URI: kgcl:change_set_summary_statistic_count","title":"Slot: change_set_summary_statistic_count"},{"location":"change_set_summary_statistic_count/#domain-and-range","text":"ChangeSetSummaryStatistic -> OPT Integer","title":"Domain and Range"},{"location":"change_set_summary_statistic_count/#parents","text":"is_a: count","title":"Parents"},{"location":"change_set_summary_statistic_count/#children","text":"","title":"Children"},{"location":"change_set_summary_statistic_count/#used-by","text":"ChangeSetSummaryStatistic","title":"Used by"},{"location":"change_set_summary_statistic_property_value_set/","text":"Slot: change_set_summary_statistic_property_value_set Summary statistic is grouped by these constraints URI: kgcl:change_set_summary_statistic_property_value_set Domain and Range ChangeSetSummaryStatistic -> 0..* PropertyValue Parents is_a: property value set Children Used by ChangeSetSummaryStatistic","title":"Slot: change_set_summary_statistic_property_value_set"},{"location":"change_set_summary_statistic_property_value_set/#slot-change_set_summary_statistic_property_value_set","text":"Summary statistic is grouped by these constraints URI: kgcl:change_set_summary_statistic_property_value_set","title":"Slot: change_set_summary_statistic_property_value_set"},{"location":"change_set_summary_statistic_property_value_set/#domain-and-range","text":"ChangeSetSummaryStatistic -> 0..* PropertyValue","title":"Domain and Range"},{"location":"change_set_summary_statistic_property_value_set/#parents","text":"is_a: property value set","title":"Parents"},{"location":"change_set_summary_statistic_property_value_set/#children","text":"","title":"Children"},{"location":"change_set_summary_statistic_property_value_set/#used-by","text":"ChangeSetSummaryStatistic","title":"Used by"},{"location":"change_type/","text":"Slot: change_type URI: kgcl:change_type Domain and Range None -> OPT ChangeClassType Parents Children change set summary statistic\u279echange type Used by","title":"Slot: change_type"},{"location":"change_type/#slot-change_type","text":"URI: kgcl:change_type","title":"Slot: change_type"},{"location":"change_type/#domain-and-range","text":"None -> OPT ChangeClassType","title":"Domain and Range"},{"location":"change_type/#parents","text":"","title":"Parents"},{"location":"change_type/#children","text":"change set summary statistic\u279echange type","title":"Children"},{"location":"change_type/#used-by","text":"","title":"Used by"},{"location":"consider/","text":"Slot: consider URI: kgcl:consider Domain and Range None -> OPT Node Parents Children node obsoletion\u279econsider node unobsoletion\u279econsider Used by Other properties Exact Mappings: oio:consider","title":"Slot: consider"},{"location":"consider/#slot-consider","text":"URI: kgcl:consider","title":"Slot: consider"},{"location":"consider/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"consider/#parents","text":"","title":"Parents"},{"location":"consider/#children","text":"node obsoletion\u279econsider node unobsoletion\u279econsider","title":"Children"},{"location":"consider/#used-by","text":"","title":"Used by"},{"location":"consider/#other-properties","text":"Exact Mappings: oio:consider","title":"Other properties"},{"location":"count/","text":"Slot: count URI: kgcl:count Domain and Range None -> OPT Integer Parents Children change set summary statistic\u279ecount Used by","title":"Slot: count"},{"location":"count/#slot-count","text":"URI: kgcl:count","title":"Slot: count"},{"location":"count/#domain-and-range","text":"None -> OPT Integer","title":"Domain and Range"},{"location":"count/#parents","text":"","title":"Parents"},{"location":"count/#children","text":"change set summary statistic\u279ecount","title":"Children"},{"location":"count/#used-by","text":"","title":"Used by"},{"location":"credits/","text":"Credits this project was made using the LinkML framework","title":"Credits"},{"location":"credits/#credits","text":"this project was made using the LinkML framework","title":"Credits"},{"location":"edge_change_about/","text":"Slot: edge_change_about URI: kgcl:edge_change_about Domain and Range EdgeChange -> OPT String Parents is_a: about Children Used by EdgeChange EdgeCreation EdgeDeletion EdgeLabelChange EdgeLogicalInterpretationChange EdgeObsoletion NodeDeepening NodeMove NodeShallowing","title":"Slot: edge_change_about"},{"location":"edge_change_about/#slot-edge_change_about","text":"URI: kgcl:edge_change_about","title":"Slot: edge_change_about"},{"location":"edge_change_about/#domain-and-range","text":"EdgeChange -> OPT String","title":"Domain and Range"},{"location":"edge_change_about/#parents","text":"is_a: about","title":"Parents"},{"location":"edge_change_about/#children","text":"","title":"Children"},{"location":"edge_change_about/#used-by","text":"EdgeChange EdgeCreation EdgeDeletion EdgeLabelChange EdgeLogicalInterpretationChange EdgeObsoletion NodeDeepening NodeMove NodeShallowing","title":"Used by"},{"location":"edge_creation_change_description/","text":"Slot: edge_creation_change_description URI: kgcl:edge_creation_change_description Domain and Range EdgeCreation -> OPT String Parents is_a: change description Children Used by EdgeCreation","title":"Slot: edge_creation_change_description"},{"location":"edge_creation_change_description/#slot-edge_creation_change_description","text":"URI: kgcl:edge_creation_change_description","title":"Slot: edge_creation_change_description"},{"location":"edge_creation_change_description/#domain-and-range","text":"EdgeCreation -> OPT String","title":"Domain and Range"},{"location":"edge_creation_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"edge_creation_change_description/#children","text":"","title":"Children"},{"location":"edge_creation_change_description/#used-by","text":"EdgeCreation","title":"Used by"},{"location":"edge_deletion_change_description/","text":"Slot: edge_deletion_change_description URI: kgcl:edge_deletion_change_description Domain and Range EdgeDeletion -> OPT String Parents is_a: change description Children Used by EdgeDeletion","title":"Slot: edge_deletion_change_description"},{"location":"edge_deletion_change_description/#slot-edge_deletion_change_description","text":"URI: kgcl:edge_deletion_change_description","title":"Slot: edge_deletion_change_description"},{"location":"edge_deletion_change_description/#domain-and-range","text":"EdgeDeletion -> OPT String","title":"Domain and Range"},{"location":"edge_deletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"edge_deletion_change_description/#children","text":"","title":"Children"},{"location":"edge_deletion_change_description/#used-by","text":"EdgeDeletion","title":"Used by"},{"location":"edge_label/","text":"Slot: edge_label URI: kgcl:edge_label Domain and Range None -> OPT Node Parents Children Used by Edge EdgeCreation EdgeDeletion EdgeObsoletion","title":"Slot: edge_label"},{"location":"edge_label/#slot-edge_label","text":"URI: kgcl:edge_label","title":"Slot: edge_label"},{"location":"edge_label/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"edge_label/#parents","text":"","title":"Parents"},{"location":"edge_label/#children","text":"","title":"Children"},{"location":"edge_label/#used-by","text":"Edge EdgeCreation EdgeDeletion EdgeObsoletion","title":"Used by"},{"location":"edge_label_change_change_description/","text":"Slot: edge_label_change_change_description URI: kgcl:edge_label_change_change_description Domain and Range EdgeLabelChange -> OPT String Parents is_a: change description Children Used by EdgeLabelChange","title":"Slot: edge_label_change_change_description"},{"location":"edge_label_change_change_description/#slot-edge_label_change_change_description","text":"URI: kgcl:edge_label_change_change_description","title":"Slot: edge_label_change_change_description"},{"location":"edge_label_change_change_description/#domain-and-range","text":"EdgeLabelChange -> OPT String","title":"Domain and Range"},{"location":"edge_label_change_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"edge_label_change_change_description/#children","text":"","title":"Children"},{"location":"edge_label_change_change_description/#used-by","text":"EdgeLabelChange","title":"Used by"},{"location":"edge_obsoletion_change_description/","text":"Slot: edge_obsoletion_change_description URI: kgcl:edge_obsoletion_change_description Domain and Range EdgeObsoletion -> OPT String Parents is_a: change description Children Used by EdgeObsoletion","title":"Slot: edge_obsoletion_change_description"},{"location":"edge_obsoletion_change_description/#slot-edge_obsoletion_change_description","text":"URI: kgcl:edge_obsoletion_change_description","title":"Slot: edge_obsoletion_change_description"},{"location":"edge_obsoletion_change_description/#domain-and-range","text":"EdgeObsoletion -> OPT String","title":"Domain and Range"},{"location":"edge_obsoletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"edge_obsoletion_change_description/#children","text":"","title":"Children"},{"location":"edge_obsoletion_change_description/#used-by","text":"EdgeObsoletion","title":"Used by"},{"location":"ended_at_time/","text":"Slot: ended_at_time URI: kgcl:ended_at_time Domain and Range None -> OPT String Parents Children Used by Activity Other properties Mappings: prov:endedAtTime","title":"Slot: ended_at_time"},{"location":"ended_at_time/#slot-ended_at_time","text":"URI: kgcl:ended_at_time","title":"Slot: ended_at_time"},{"location":"ended_at_time/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"ended_at_time/#parents","text":"","title":"Parents"},{"location":"ended_at_time/#children","text":"","title":"Children"},{"location":"ended_at_time/#used-by","text":"Activity","title":"Used by"},{"location":"ended_at_time/#other-properties","text":"Mappings: prov:endedAtTime","title":"Other properties"},{"location":"filler/","text":"Slot: filler URI: kgcl:filler Domain and Range None -> OPT String Parents Children Used by Annotation PropertyValue","title":"Slot: filler"},{"location":"filler/#slot-filler","text":"URI: kgcl:filler","title":"Slot: filler"},{"location":"filler/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"filler/#parents","text":"","title":"Parents"},{"location":"filler/#children","text":"","title":"Children"},{"location":"filler/#used-by","text":"Annotation PropertyValue","title":"Used by"},{"location":"foobar/","text":"TEST foo","title":"Foobar"},{"location":"foobar/#test","text":"foo","title":"TEST"},{"location":"has_textual_diff/","text":"Slot: has_textual_diff A representation of the diff in ascii text URI: kgcl:has_textual_diff Domain and Range Change -> OPT TextualDiff Parents Children Used by NodeRename SynonymReplacement TextDefinitionReplacement","title":"Slot: has_textual_diff"},{"location":"has_textual_diff/#slot-has_textual_diff","text":"A representation of the diff in ascii text URI: kgcl:has_textual_diff","title":"Slot: has_textual_diff"},{"location":"has_textual_diff/#domain-and-range","text":"Change -> OPT TextualDiff","title":"Domain and Range"},{"location":"has_textual_diff/#parents","text":"","title":"Parents"},{"location":"has_textual_diff/#children","text":"","title":"Children"},{"location":"has_textual_diff/#used-by","text":"NodeRename SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"home/","text":"Introduction Browse Schema The goal of this project is to define a high level language and data model that can be used to describe changes in ontologies and more generally, \"knowledge graphs\". The language should be a higher level of abstraction than a low-level owl or rdf diff. For example, conceptually, changing the parent of a class in ontology is a single event, which can be broken down into a delete and add operation. The goal is to provide both a data model and a syntax for describing changes. This can be used in two directions: Generate: given two ontologies O1 and O2, generate a list of changes C Parse: Given a list of changes C, apply to ontology O1 to generate O2 The Parse operation is anticipated to be useful in a number of ways Authoring operations in a file then calling a proposed new command robot apply Killer app: A user authoring drive-by edits into a github ticket (\u201ccreate a term X, place X under Y\u201d; \u201cobsolete Z\u201d), with an agent/bot taking care of creating a Pull Request Standard protocol for Term Brokers The Generate operation may be non-deterministic as there may be multiple solutions to reducing a list of primitive diff operations to higher level operations The overall idea is laid out in: this google doc Schema Source The linkml source yaml can be found here: src/schema The source is in LinkML. The best way to browse this is via the generated markdown An example class is kgcl:NodeRename classes: node rename: is_a: node change description: >- A node change where the name (aka rdfs:label) of the node changes slots: - old value - new value - has textual diff slot_usage: old value: multivalued: false new value: multivalued: false change description: string_serialization: \"renaming {about} from {old value} to {new value}\" Derived Artefacts jsonschema python dataclasses shex graphql owl Python Classes python dataclasses Example code: from kgcl import NodeRename change = NodeRename(about=\"UBERON:1234567\", old_value=\"limb skin\", new_value=\"skin of limb\") JSON Schema jsonschema Example snippet: \"NodeRename\": { \"additionalProperties\": false, \"description\": \"A node change where the name (aka rdfs:label) of the node changes\", \"properties\": { \"about\": { \"type\": \"string\" }, \"change_description\": { \"type\": \"string\" }, \"has_textual_diff\": { \"$ref\": \"#/definitions/TextualDiff\" }, \"new_value\": { \"type\": \"string\" }, \"old_value\": { \"type\": \"string\" }, \"was_generated_by\": { \"type\": \"string\" } }, \"required\": [], \"title\": \"NodeRename\", \"type\": \"object\" }, Implementation Currently this is just a schema, no implementation. It is likely we will bind this into owl-diff so compilation to scala traits likely in future. Note that transactions can themselves be represented in RDF. This can be either JSON-LD following the schema above or native. The ShEx Schema constrains the shape of the RDF graph.","title":"Home"},{"location":"home/#introduction","text":"Browse Schema The goal of this project is to define a high level language and data model that can be used to describe changes in ontologies and more generally, \"knowledge graphs\". The language should be a higher level of abstraction than a low-level owl or rdf diff. For example, conceptually, changing the parent of a class in ontology is a single event, which can be broken down into a delete and add operation. The goal is to provide both a data model and a syntax for describing changes. This can be used in two directions: Generate: given two ontologies O1 and O2, generate a list of changes C Parse: Given a list of changes C, apply to ontology O1 to generate O2 The Parse operation is anticipated to be useful in a number of ways Authoring operations in a file then calling a proposed new command robot apply Killer app: A user authoring drive-by edits into a github ticket (\u201ccreate a term X, place X under Y\u201d; \u201cobsolete Z\u201d), with an agent/bot taking care of creating a Pull Request Standard protocol for Term Brokers The Generate operation may be non-deterministic as there may be multiple solutions to reducing a list of primitive diff operations to higher level operations The overall idea is laid out in: this google doc","title":"Introduction"},{"location":"home/#schema-source","text":"The linkml source yaml can be found here: src/schema The source is in LinkML. The best way to browse this is via the generated markdown An example class is kgcl:NodeRename classes: node rename: is_a: node change description: >- A node change where the name (aka rdfs:label) of the node changes slots: - old value - new value - has textual diff slot_usage: old value: multivalued: false new value: multivalued: false change description: string_serialization: \"renaming {about} from {old value} to {new value}\"","title":"Schema Source"},{"location":"home/#derived-artefacts","text":"jsonschema python dataclasses shex graphql owl","title":"Derived Artefacts"},{"location":"home/#python-classes","text":"python dataclasses Example code: from kgcl import NodeRename change = NodeRename(about=\"UBERON:1234567\", old_value=\"limb skin\", new_value=\"skin of limb\")","title":"Python Classes"},{"location":"home/#json-schema","text":"jsonschema Example snippet: \"NodeRename\": { \"additionalProperties\": false, \"description\": \"A node change where the name (aka rdfs:label) of the node changes\", \"properties\": { \"about\": { \"type\": \"string\" }, \"change_description\": { \"type\": \"string\" }, \"has_textual_diff\": { \"$ref\": \"#/definitions/TextualDiff\" }, \"new_value\": { \"type\": \"string\" }, \"old_value\": { \"type\": \"string\" }, \"was_generated_by\": { \"type\": \"string\" } }, \"required\": [], \"title\": \"NodeRename\", \"type\": \"object\" },","title":"JSON Schema"},{"location":"home/#implementation","text":"Currently this is just a schema, no implementation. It is likely we will bind this into owl-diff so compilation to scala traits likely in future. Note that transactions can themselves be represented in RDF. This can be either JSON-LD following the schema above or native. The ShEx Schema constrains the shape of the RDF graph.","title":"Implementation"},{"location":"id/","text":"Slot: id CURIE or URI URI: kgcl:id Domain and Range None -> REQ String Parents Children Used by ClassNode InstanceNode Node NodeCreation","title":"Slot: id"},{"location":"id/#slot-id","text":"CURIE or URI URI: kgcl:id","title":"Slot: id"},{"location":"id/#domain-and-range","text":"None -> REQ String","title":"Domain and Range"},{"location":"id/#parents","text":"","title":"Parents"},{"location":"id/#children","text":"","title":"Children"},{"location":"id/#used-by","text":"ClassNode InstanceNode Node NodeCreation","title":"Used by"},{"location":"in_subset/","text":"Slot: in_subset subset that the element is being placed inside. URI: kgcl:in_subset Domain and Range None -> OPT Subset Parents Children add to subset\u279ein subset remove from subset\u279ein subset Used by","title":"Slot: in_subset"},{"location":"in_subset/#slot-in_subset","text":"subset that the element is being placed inside. URI: kgcl:in_subset","title":"Slot: in_subset"},{"location":"in_subset/#domain-and-range","text":"None -> OPT Subset","title":"Domain and Range"},{"location":"in_subset/#parents","text":"","title":"Parents"},{"location":"in_subset/#children","text":"add to subset\u279ein subset remove from subset\u279ein subset","title":"Children"},{"location":"in_subset/#used-by","text":"","title":"Used by"},{"location":"multi_node_obsoletion_associated_change_set/","text":"Slot: multi_node_obsoletion_associated_change_set All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D URI: kgcl:multi_node_obsoletion_associated_change_set Domain and Range MultiNodeObsoletion -> 0..* Change Parents is_a: change set Children Used by MultiNodeObsoletion","title":"Slot: multi_node_obsoletion_associated_change_set"},{"location":"multi_node_obsoletion_associated_change_set/#slot-multi_node_obsoletion_associated_change_set","text":"All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D URI: kgcl:multi_node_obsoletion_associated_change_set","title":"Slot: multi_node_obsoletion_associated_change_set"},{"location":"multi_node_obsoletion_associated_change_set/#domain-and-range","text":"MultiNodeObsoletion -> 0..* Change","title":"Domain and Range"},{"location":"multi_node_obsoletion_associated_change_set/#parents","text":"is_a: change set","title":"Parents"},{"location":"multi_node_obsoletion_associated_change_set/#children","text":"","title":"Children"},{"location":"multi_node_obsoletion_associated_change_set/#used-by","text":"MultiNodeObsoletion","title":"Used by"},{"location":"multi_node_obsoletion_change_description/","text":"Slot: multi_node_obsoletion_change_description URI: kgcl:multi_node_obsoletion_change_description Domain and Range MultiNodeObsoletion -> OPT String Parents is_a: change description Children Used by MultiNodeObsoletion","title":"Slot: multi_node_obsoletion_change_description"},{"location":"multi_node_obsoletion_change_description/#slot-multi_node_obsoletion_change_description","text":"URI: kgcl:multi_node_obsoletion_change_description","title":"Slot: multi_node_obsoletion_change_description"},{"location":"multi_node_obsoletion_change_description/#domain-and-range","text":"MultiNodeObsoletion -> OPT String","title":"Domain and Range"},{"location":"multi_node_obsoletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"multi_node_obsoletion_change_description/#children","text":"","title":"Children"},{"location":"multi_node_obsoletion_change_description/#used-by","text":"MultiNodeObsoletion","title":"Used by"},{"location":"multi_node_obsoletion_change_set/","text":"Slot: multi_node_obsoletion_change_set URI: kgcl:multi_node_obsoletion_change_set Domain and Range MultiNodeObsoletion -> 0..* NodeObsoletion Parents is_a: change set Children Used by MultiNodeObsoletion","title":"Slot: multi_node_obsoletion_change_set"},{"location":"multi_node_obsoletion_change_set/#slot-multi_node_obsoletion_change_set","text":"URI: kgcl:multi_node_obsoletion_change_set","title":"Slot: multi_node_obsoletion_change_set"},{"location":"multi_node_obsoletion_change_set/#domain-and-range","text":"MultiNodeObsoletion -> 0..* NodeObsoletion","title":"Domain and Range"},{"location":"multi_node_obsoletion_change_set/#parents","text":"is_a: change set","title":"Parents"},{"location":"multi_node_obsoletion_change_set/#children","text":"","title":"Children"},{"location":"multi_node_obsoletion_change_set/#used-by","text":"MultiNodeObsoletion","title":"Used by"},{"location":"name/","text":"Slot: name URI: kgcl:name Domain and Range None -> OPT String Parents Children Used by ClassNode InstanceNode Node NodeCreation","title":"Slot: name"},{"location":"name/#slot-name","text":"URI: kgcl:name","title":"Slot: name"},{"location":"name/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"name/#parents","text":"","title":"Parents"},{"location":"name/#children","text":"","title":"Children"},{"location":"name/#used-by","text":"ClassNode InstanceNode Node NodeCreation","title":"Used by"},{"location":"name_becomes_synonym_change_1/","text":"Slot: name_becomes_synonym_change_1 URI: kgcl:name_becomes_synonym_change_1 Domain and Range NameBecomesSynonym -> OPT NodeRename Parents is_a: change 1 Children Used by NameBecomesSynonym","title":"Slot: name_becomes_synonym_change_1"},{"location":"name_becomes_synonym_change_1/#slot-name_becomes_synonym_change_1","text":"URI: kgcl:name_becomes_synonym_change_1","title":"Slot: name_becomes_synonym_change_1"},{"location":"name_becomes_synonym_change_1/#domain-and-range","text":"NameBecomesSynonym -> OPT NodeRename","title":"Domain and Range"},{"location":"name_becomes_synonym_change_1/#parents","text":"is_a: change 1","title":"Parents"},{"location":"name_becomes_synonym_change_1/#children","text":"","title":"Children"},{"location":"name_becomes_synonym_change_1/#used-by","text":"NameBecomesSynonym","title":"Used by"},{"location":"name_becomes_synonym_change_2/","text":"Slot: name_becomes_synonym_change_2 URI: kgcl:name_becomes_synonym_change_2 Domain and Range NameBecomesSynonym -> OPT NewSynonym Parents is_a: change 2 Children Used by NameBecomesSynonym","title":"Slot: name_becomes_synonym_change_2"},{"location":"name_becomes_synonym_change_2/#slot-name_becomes_synonym_change_2","text":"URI: kgcl:name_becomes_synonym_change_2","title":"Slot: name_becomes_synonym_change_2"},{"location":"name_becomes_synonym_change_2/#domain-and-range","text":"NameBecomesSynonym -> OPT NewSynonym","title":"Domain and Range"},{"location":"name_becomes_synonym_change_2/#parents","text":"is_a: change 2","title":"Parents"},{"location":"name_becomes_synonym_change_2/#children","text":"","title":"Children"},{"location":"name_becomes_synonym_change_2/#used-by","text":"NameBecomesSynonym","title":"Used by"},{"location":"name_becomes_synonym_name_change/","text":"Type: name becomes synonym_name change URI: kgcl:name_becomes_synonym_name_change Domain and Range NameBecomesSynonym -> OPT NodeRename Parents is_a: name change Children Used by NameBecomesSynonym","title":"Type: name becomes synonym_name change"},{"location":"name_becomes_synonym_name_change/#type-name-becomes-synonym_name-change","text":"URI: kgcl:name_becomes_synonym_name_change","title":"Type: name becomes synonym_name change"},{"location":"name_becomes_synonym_name_change/#domain-and-range","text":"NameBecomesSynonym -> OPT NodeRename","title":"Domain and Range"},{"location":"name_becomes_synonym_name_change/#parents","text":"is_a: name change","title":"Parents"},{"location":"name_becomes_synonym_name_change/#children","text":"","title":"Children"},{"location":"name_becomes_synonym_name_change/#used-by","text":"NameBecomesSynonym","title":"Used by"},{"location":"name_change/","text":"Type: name change URI: kgcl:name_change Domain and Range None -> OPT NodeRename Parents Children name becomes synonym\u279ename change Used by","title":"Type: name change"},{"location":"name_change/#type-name-change","text":"URI: kgcl:name_change","title":"Type: name change"},{"location":"name_change/#domain-and-range","text":"None -> OPT NodeRename","title":"Domain and Range"},{"location":"name_change/#parents","text":"","title":"Parents"},{"location":"name_change/#children","text":"name becomes synonym\u279ename change","title":"Children"},{"location":"name_change/#used-by","text":"","title":"Used by"},{"location":"new_value/","text":"Slot: new_value The value of a property held in the old instance of the ontology URI: kgcl:new_value Domain and Range None -> OPT String Parents Children node rename\u279enew value Used by AddNodeToSubset DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLabelChange EdgeLogicalInterpretationChange EdgeObsoletion NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeMove NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymReplacement TextDefinitionReplacement","title":"Slot: new_value"},{"location":"new_value/#slot-new_value","text":"The value of a property held in the old instance of the ontology URI: kgcl:new_value","title":"Slot: new_value"},{"location":"new_value/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"new_value/#parents","text":"","title":"Parents"},{"location":"new_value/#children","text":"node rename\u279enew value","title":"Children"},{"location":"new_value/#used-by","text":"AddNodeToSubset DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLabelChange EdgeLogicalInterpretationChange EdgeObsoletion NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeMove NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"node_change_about/","text":"Slot: node_change_about URI: kgcl:node_change_about Domain and Range NodeChange -> OPT String Parents is_a: about Children node obsoletion with merge\u279eabout Used by AddNodeToSubset NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeletion NodeObsoletion NodeObsoletionWithSplit NodeRename NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SynonymReplacement TextDefinitionReplacement","title":"Slot: node_change_about"},{"location":"node_change_about/#slot-node_change_about","text":"URI: kgcl:node_change_about","title":"Slot: node_change_about"},{"location":"node_change_about/#domain-and-range","text":"NodeChange -> OPT String","title":"Domain and Range"},{"location":"node_change_about/#parents","text":"is_a: about","title":"Parents"},{"location":"node_change_about/#children","text":"node obsoletion with merge\u279eabout","title":"Children"},{"location":"node_change_about/#used-by","text":"AddNodeToSubset NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeletion NodeObsoletion NodeObsoletionWithSplit NodeRename NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"node_creation_change_description/","text":"Slot: node_creation_change_description URI: kgcl:node_creation_change_description Domain and Range NodeCreation -> OPT String Parents is_a: change description Children Used by NodeCreation","title":"Slot: node_creation_change_description"},{"location":"node_creation_change_description/#slot-node_creation_change_description","text":"URI: kgcl:node_creation_change_description","title":"Slot: node_creation_change_description"},{"location":"node_creation_change_description/#domain-and-range","text":"NodeCreation -> OPT String","title":"Domain and Range"},{"location":"node_creation_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_creation_change_description/#children","text":"","title":"Children"},{"location":"node_creation_change_description/#used-by","text":"NodeCreation","title":"Used by"},{"location":"node_deepening_change_description/","text":"Slot: node_deepening_change_description URI: kgcl:node_deepening_change_description Domain and Range NodeDeepening -> OPT String Parents is_a: node move\u279echange description Children Used by NodeDeepening","title":"Slot: node_deepening_change_description"},{"location":"node_deepening_change_description/#slot-node_deepening_change_description","text":"URI: kgcl:node_deepening_change_description","title":"Slot: node_deepening_change_description"},{"location":"node_deepening_change_description/#domain-and-range","text":"NodeDeepening -> OPT String","title":"Domain and Range"},{"location":"node_deepening_change_description/#parents","text":"is_a: node move\u279echange description","title":"Parents"},{"location":"node_deepening_change_description/#children","text":"","title":"Children"},{"location":"node_deepening_change_description/#used-by","text":"NodeDeepening","title":"Used by"},{"location":"node_deletion_change_description/","text":"Slot: node_deletion_change_description URI: kgcl:node_deletion_change_description Domain and Range NodeDeletion -> OPT String Parents is_a: change description Children Used by NodeDeletion","title":"Slot: node_deletion_change_description"},{"location":"node_deletion_change_description/#slot-node_deletion_change_description","text":"URI: kgcl:node_deletion_change_description","title":"Slot: node_deletion_change_description"},{"location":"node_deletion_change_description/#domain-and-range","text":"NodeDeletion -> OPT String","title":"Domain and Range"},{"location":"node_deletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_deletion_change_description/#children","text":"","title":"Children"},{"location":"node_deletion_change_description/#used-by","text":"NodeDeletion","title":"Used by"},{"location":"node_move_change_description/","text":"Slot: node_move_change_description URI: kgcl:node_move_change_description Domain and Range NodeMove -> OPT String Parents is_a: change description Children node deepening\u279echange description node shallowing\u279echange description Used by NodeMove","title":"Slot: node_move_change_description"},{"location":"node_move_change_description/#slot-node_move_change_description","text":"URI: kgcl:node_move_change_description","title":"Slot: node_move_change_description"},{"location":"node_move_change_description/#domain-and-range","text":"NodeMove -> OPT String","title":"Domain and Range"},{"location":"node_move_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_move_change_description/#children","text":"node deepening\u279echange description node shallowing\u279echange description","title":"Children"},{"location":"node_move_change_description/#used-by","text":"NodeMove","title":"Used by"},{"location":"node_obsoletion_associated_change_set/","text":"Slot: node_obsoletion_associated_change_set All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere URI: kgcl:node_obsoletion_associated_change_set Domain and Range NodeObsoletion -> 0..* Change Parents is_a: change set Children Used by NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit","title":"Slot: node_obsoletion_associated_change_set"},{"location":"node_obsoletion_associated_change_set/#slot-node_obsoletion_associated_change_set","text":"All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere URI: kgcl:node_obsoletion_associated_change_set","title":"Slot: node_obsoletion_associated_change_set"},{"location":"node_obsoletion_associated_change_set/#domain-and-range","text":"NodeObsoletion -> 0..* Change","title":"Domain and Range"},{"location":"node_obsoletion_associated_change_set/#parents","text":"is_a: change set","title":"Parents"},{"location":"node_obsoletion_associated_change_set/#children","text":"","title":"Children"},{"location":"node_obsoletion_associated_change_set/#used-by","text":"NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit","title":"Used by"},{"location":"node_obsoletion_change_description/","text":"Slot: node_obsoletion_change_description URI: kgcl:node_obsoletion_change_description Domain and Range NodeObsoletion -> OPT String Parents is_a: change description Children node obsoletion with merge\u279echange description node obsoletion with split\u279echange description Used by NodeObsoletion","title":"Slot: node_obsoletion_change_description"},{"location":"node_obsoletion_change_description/#slot-node_obsoletion_change_description","text":"URI: kgcl:node_obsoletion_change_description","title":"Slot: node_obsoletion_change_description"},{"location":"node_obsoletion_change_description/#domain-and-range","text":"NodeObsoletion -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_obsoletion_change_description/#children","text":"node obsoletion with merge\u279echange description node obsoletion with split\u279echange description","title":"Children"},{"location":"node_obsoletion_change_description/#used-by","text":"NodeObsoletion","title":"Used by"},{"location":"node_obsoletion_consider/","text":"Slot: node_obsoletion_consider URI: kgcl:node_obsoletion_consider Domain and Range NodeObsoletion -> OPT Node Parents is_a: consider Children Used by NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit Other properties Exact Mappings: oio:consider","title":"Slot: node_obsoletion_consider"},{"location":"node_obsoletion_consider/#slot-node_obsoletion_consider","text":"URI: kgcl:node_obsoletion_consider","title":"Slot: node_obsoletion_consider"},{"location":"node_obsoletion_consider/#domain-and-range","text":"NodeObsoletion -> OPT Node","title":"Domain and Range"},{"location":"node_obsoletion_consider/#parents","text":"is_a: consider","title":"Parents"},{"location":"node_obsoletion_consider/#children","text":"","title":"Children"},{"location":"node_obsoletion_consider/#used-by","text":"NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit","title":"Used by"},{"location":"node_obsoletion_consider/#other-properties","text":"Exact Mappings: oio:consider","title":"Other properties"},{"location":"node_obsoletion_replaced_by/","text":"Slot: node_obsoletion_replaced_by When this is present, the node obsoletion MAY be associated with automated rewiring changes URI: kgcl:node_obsoletion_replaced_by Domain and Range NodeObsoletion -> OPT Node Parents is_a: replaced by Children Used by NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit Other properties Exact Mappings: IAO:0100001","title":"Slot: node_obsoletion_replaced_by"},{"location":"node_obsoletion_replaced_by/#slot-node_obsoletion_replaced_by","text":"When this is present, the node obsoletion MAY be associated with automated rewiring changes URI: kgcl:node_obsoletion_replaced_by","title":"Slot: node_obsoletion_replaced_by"},{"location":"node_obsoletion_replaced_by/#domain-and-range","text":"NodeObsoletion -> OPT Node","title":"Domain and Range"},{"location":"node_obsoletion_replaced_by/#parents","text":"is_a: replaced by","title":"Parents"},{"location":"node_obsoletion_replaced_by/#children","text":"","title":"Children"},{"location":"node_obsoletion_replaced_by/#used-by","text":"NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit","title":"Used by"},{"location":"node_obsoletion_replaced_by/#other-properties","text":"Exact Mappings: IAO:0100001","title":"Other properties"},{"location":"node_obsoletion_with_merge_about/","text":"Slot: node_obsoletion_with_merge_about URI: kgcl:node_obsoletion_with_merge_about Domain and Range NodeObsoletionWithMerge -> OPT String Parents is_a: node change\u279eabout Children Used by NodeObsoletionWithMerge Other properties Aliases: alt_id","title":"Slot: node_obsoletion_with_merge_about"},{"location":"node_obsoletion_with_merge_about/#slot-node_obsoletion_with_merge_about","text":"URI: kgcl:node_obsoletion_with_merge_about","title":"Slot: node_obsoletion_with_merge_about"},{"location":"node_obsoletion_with_merge_about/#domain-and-range","text":"NodeObsoletionWithMerge -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_merge_about/#parents","text":"is_a: node change\u279eabout","title":"Parents"},{"location":"node_obsoletion_with_merge_about/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_merge_about/#used-by","text":"NodeObsoletionWithMerge","title":"Used by"},{"location":"node_obsoletion_with_merge_about/#other-properties","text":"Aliases: alt_id","title":"Other properties"},{"location":"node_obsoletion_with_merge_change_description/","text":"Slot: node_obsoletion_with_merge_change_description URI: kgcl:node_obsoletion_with_merge_change_description Domain and Range NodeObsoletionWithMerge -> OPT String Parents is_a: node obsoletion\u279echange description Children Used by NodeObsoletionWithMerge","title":"Slot: node_obsoletion_with_merge_change_description"},{"location":"node_obsoletion_with_merge_change_description/#slot-node_obsoletion_with_merge_change_description","text":"URI: kgcl:node_obsoletion_with_merge_change_description","title":"Slot: node_obsoletion_with_merge_change_description"},{"location":"node_obsoletion_with_merge_change_description/#domain-and-range","text":"NodeObsoletionWithMerge -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_merge_change_description/#parents","text":"is_a: node obsoletion\u279echange description","title":"Parents"},{"location":"node_obsoletion_with_merge_change_description/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_merge_change_description/#used-by","text":"NodeObsoletionWithMerge","title":"Used by"},{"location":"node_obsoletion_with_merge_target/","text":"Slot: node_obsoletion_with_merge_target URI: kgcl:node_obsoletion_with_merge_target Domain and Range NodeObsoletionWithMerge -> OPT String Parents is_a: target Children Used by NodeObsoletionWithMerge","title":"Slot: node_obsoletion_with_merge_target"},{"location":"node_obsoletion_with_merge_target/#slot-node_obsoletion_with_merge_target","text":"URI: kgcl:node_obsoletion_with_merge_target","title":"Slot: node_obsoletion_with_merge_target"},{"location":"node_obsoletion_with_merge_target/#domain-and-range","text":"NodeObsoletionWithMerge -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_merge_target/#parents","text":"is_a: target","title":"Parents"},{"location":"node_obsoletion_with_merge_target/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_merge_target/#used-by","text":"NodeObsoletionWithMerge","title":"Used by"},{"location":"node_obsoletion_with_split_change_description/","text":"Slot: node_obsoletion_with_split_change_description URI: kgcl:node_obsoletion_with_split_change_description Domain and Range NodeObsoletionWithSplit -> OPT String Parents is_a: node obsoletion\u279echange description Children Used by NodeObsoletionWithSplit","title":"Slot: node_obsoletion_with_split_change_description"},{"location":"node_obsoletion_with_split_change_description/#slot-node_obsoletion_with_split_change_description","text":"URI: kgcl:node_obsoletion_with_split_change_description","title":"Slot: node_obsoletion_with_split_change_description"},{"location":"node_obsoletion_with_split_change_description/#domain-and-range","text":"NodeObsoletionWithSplit -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_split_change_description/#parents","text":"is_a: node obsoletion\u279echange description","title":"Parents"},{"location":"node_obsoletion_with_split_change_description/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_split_change_description/#used-by","text":"NodeObsoletionWithSplit","title":"Used by"},{"location":"node_obsoletion_with_split_target/","text":"Slot: node_obsoletion_with_split_target URI: kgcl:node_obsoletion_with_split_target Domain and Range NodeObsoletionWithSplit -> 0..* String Parents is_a: target Children Used by NodeObsoletionWithSplit","title":"Slot: node_obsoletion_with_split_target"},{"location":"node_obsoletion_with_split_target/#slot-node_obsoletion_with_split_target","text":"URI: kgcl:node_obsoletion_with_split_target","title":"Slot: node_obsoletion_with_split_target"},{"location":"node_obsoletion_with_split_target/#domain-and-range","text":"NodeObsoletionWithSplit -> 0..* String","title":"Domain and Range"},{"location":"node_obsoletion_with_split_target/#parents","text":"is_a: target","title":"Parents"},{"location":"node_obsoletion_with_split_target/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_split_target/#used-by","text":"NodeObsoletionWithSplit","title":"Used by"},{"location":"node_rename_change_description/","text":"Slot: node_rename_change_description URI: kgcl:node_rename_change_description Domain and Range NodeRename -> OPT String Parents is_a: change description Children Used by NodeRename","title":"Slot: node_rename_change_description"},{"location":"node_rename_change_description/#slot-node_rename_change_description","text":"URI: kgcl:node_rename_change_description","title":"Slot: node_rename_change_description"},{"location":"node_rename_change_description/#domain-and-range","text":"NodeRename -> OPT String","title":"Domain and Range"},{"location":"node_rename_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_rename_change_description/#children","text":"","title":"Children"},{"location":"node_rename_change_description/#used-by","text":"NodeRename","title":"Used by"},{"location":"node_rename_new_value/","text":"Slot: node_rename_new_value URI: kgcl:node_rename_new_value Domain and Range NodeRename -> OPT String Parents is_a: new value Children Used by NodeRename","title":"Slot: node_rename_new_value"},{"location":"node_rename_new_value/#slot-node_rename_new_value","text":"URI: kgcl:node_rename_new_value","title":"Slot: node_rename_new_value"},{"location":"node_rename_new_value/#domain-and-range","text":"NodeRename -> OPT String","title":"Domain and Range"},{"location":"node_rename_new_value/#parents","text":"is_a: new value","title":"Parents"},{"location":"node_rename_new_value/#children","text":"","title":"Children"},{"location":"node_rename_new_value/#used-by","text":"NodeRename","title":"Used by"},{"location":"node_rename_old_value/","text":"Slot: node_rename_old_value URI: kgcl:node_rename_old_value Domain and Range NodeRename -> OPT String Parents is_a: old value Children Used by NodeRename","title":"Slot: node_rename_old_value"},{"location":"node_rename_old_value/#slot-node_rename_old_value","text":"URI: kgcl:node_rename_old_value","title":"Slot: node_rename_old_value"},{"location":"node_rename_old_value/#domain-and-range","text":"NodeRename -> OPT String","title":"Domain and Range"},{"location":"node_rename_old_value/#parents","text":"is_a: old value","title":"Parents"},{"location":"node_rename_old_value/#children","text":"","title":"Children"},{"location":"node_rename_old_value/#used-by","text":"NodeRename","title":"Used by"},{"location":"node_shallowing_change_description/","text":"Slot: node_shallowing_change_description URI: kgcl:node_shallowing_change_description Domain and Range NodeShallowing -> OPT String Parents is_a: node move\u279echange description Children Used by NodeShallowing","title":"Slot: node_shallowing_change_description"},{"location":"node_shallowing_change_description/#slot-node_shallowing_change_description","text":"URI: kgcl:node_shallowing_change_description","title":"Slot: node_shallowing_change_description"},{"location":"node_shallowing_change_description/#domain-and-range","text":"NodeShallowing -> OPT String","title":"Domain and Range"},{"location":"node_shallowing_change_description/#parents","text":"is_a: node move\u279echange description","title":"Parents"},{"location":"node_shallowing_change_description/#children","text":"","title":"Children"},{"location":"node_shallowing_change_description/#used-by","text":"NodeShallowing","title":"Used by"},{"location":"node_unobsoletion_change_description/","text":"Slot: node_unobsoletion_change_description URI: kgcl:node_unobsoletion_change_description Domain and Range NodeUnobsoletion -> OPT String Parents is_a: change description Children Used by NodeUnobsoletion","title":"Slot: node_unobsoletion_change_description"},{"location":"node_unobsoletion_change_description/#slot-node_unobsoletion_change_description","text":"URI: kgcl:node_unobsoletion_change_description","title":"Slot: node_unobsoletion_change_description"},{"location":"node_unobsoletion_change_description/#domain-and-range","text":"NodeUnobsoletion -> OPT String","title":"Domain and Range"},{"location":"node_unobsoletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_unobsoletion_change_description/#children","text":"","title":"Children"},{"location":"node_unobsoletion_change_description/#used-by","text":"NodeUnobsoletion","title":"Used by"},{"location":"node_unobsoletion_consider/","text":"Slot: node_unobsoletion_consider URI: kgcl:node_unobsoletion_consider Domain and Range NodeUnobsoletion -> OPT Node Parents is_a: consider Children Used by NodeUnobsoletion","title":"Slot: node_unobsoletion_consider"},{"location":"node_unobsoletion_consider/#slot-node_unobsoletion_consider","text":"URI: kgcl:node_unobsoletion_consider","title":"Slot: node_unobsoletion_consider"},{"location":"node_unobsoletion_consider/#domain-and-range","text":"NodeUnobsoletion -> OPT Node","title":"Domain and Range"},{"location":"node_unobsoletion_consider/#parents","text":"is_a: consider","title":"Parents"},{"location":"node_unobsoletion_consider/#children","text":"","title":"Children"},{"location":"node_unobsoletion_consider/#used-by","text":"NodeUnobsoletion","title":"Used by"},{"location":"node_unobsoletion_replaced_by/","text":"Slot: node_unobsoletion_replaced_by URI: kgcl:node_unobsoletion_replaced_by Domain and Range NodeUnobsoletion -> OPT Node Parents is_a: replaced by Children Used by NodeUnobsoletion","title":"Slot: node_unobsoletion_replaced_by"},{"location":"node_unobsoletion_replaced_by/#slot-node_unobsoletion_replaced_by","text":"URI: kgcl:node_unobsoletion_replaced_by","title":"Slot: node_unobsoletion_replaced_by"},{"location":"node_unobsoletion_replaced_by/#domain-and-range","text":"NodeUnobsoletion -> OPT Node","title":"Domain and Range"},{"location":"node_unobsoletion_replaced_by/#parents","text":"is_a: replaced by","title":"Parents"},{"location":"node_unobsoletion_replaced_by/#children","text":"","title":"Children"},{"location":"node_unobsoletion_replaced_by/#used-by","text":"NodeUnobsoletion","title":"Used by"},{"location":"object/","text":"Slot: object URI: kgcl:object Domain and Range None -> OPT Node Parents Children Used by Edge EdgeCreation EdgeDeletion EdgeObsoletion","title":"Slot: object"},{"location":"object/#slot-object","text":"URI: kgcl:object","title":"Slot: object"},{"location":"object/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"object/#parents","text":"","title":"Parents"},{"location":"object/#children","text":"","title":"Children"},{"location":"object/#used-by","text":"Edge EdgeCreation EdgeDeletion EdgeObsoletion","title":"Used by"},{"location":"old_value/","text":"Slot: old_value The value of a property held in the old instance of the ontology URI: kgcl:old_value Domain and Range None -> OPT String Parents Children node rename\u279eold value Used by AddNodeToSubset DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLabelChange EdgeLogicalInterpretationChange EdgeObsoletion NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeMove NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymReplacement TextDefinitionReplacement","title":"Slot: old_value"},{"location":"old_value/#slot-old_value","text":"The value of a property held in the old instance of the ontology URI: kgcl:old_value","title":"Slot: old_value"},{"location":"old_value/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"old_value/#parents","text":"","title":"Parents"},{"location":"old_value/#children","text":"node rename\u279eold value","title":"Children"},{"location":"old_value/#used-by","text":"AddNodeToSubset DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLabelChange EdgeLogicalInterpretationChange EdgeObsoletion NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeMove NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"property/","text":"Slot: property URI: kgcl:property Domain and Range None -> OPT Node Parents Children Used by Annotation PropertyValue","title":"Slot: property"},{"location":"property/#slot-property","text":"URI: kgcl:property","title":"Slot: property"},{"location":"property/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"property/#parents","text":"","title":"Parents"},{"location":"property/#children","text":"","title":"Children"},{"location":"property/#used-by","text":"Annotation PropertyValue","title":"Used by"},{"location":"property_value_set/","text":"Slot: property_value_set URI: kgcl:property_value_set Domain and Range None -> 0..* PropertyValue Parents Children change set summary statistic\u279eproperty value set Used by","title":"Slot: property_value_set"},{"location":"property_value_set/#slot-property_value_set","text":"URI: kgcl:property_value_set","title":"Slot: property_value_set"},{"location":"property_value_set/#domain-and-range","text":"None -> 0..* PropertyValue","title":"Domain and Range"},{"location":"property_value_set/#parents","text":"","title":"Parents"},{"location":"property_value_set/#children","text":"change set summary statistic\u279eproperty value set","title":"Children"},{"location":"property_value_set/#used-by","text":"","title":"Used by"},{"location":"remove_from_subset_in_subset/","text":"Slot: remove_from_subset_in_subset subset that the element is being removed from URI: kgcl:remove_from_subset_in_subset Domain and Range RemoveFromSubset -> OPT Subset Parents is_a: in subset Children Used by RemoveFromSubset RemovedNodeFromSubset","title":"Slot: remove_from_subset_in_subset"},{"location":"remove_from_subset_in_subset/#slot-remove_from_subset_in_subset","text":"subset that the element is being removed from URI: kgcl:remove_from_subset_in_subset","title":"Slot: remove_from_subset_in_subset"},{"location":"remove_from_subset_in_subset/#domain-and-range","text":"RemoveFromSubset -> OPT Subset","title":"Domain and Range"},{"location":"remove_from_subset_in_subset/#parents","text":"is_a: in subset","title":"Parents"},{"location":"remove_from_subset_in_subset/#children","text":"","title":"Children"},{"location":"remove_from_subset_in_subset/#used-by","text":"RemoveFromSubset RemovedNodeFromSubset","title":"Used by"},{"location":"replaced_by/","text":"Slot: replaced_by When this is present, the node obsoletion MAY be associated with automated rewiring changes URI: kgcl:replaced_by Domain and Range None -> OPT Node Parents Children node obsoletion\u279ereplaced by node unobsoletion\u279ereplaced by Used by Other properties Exact Mappings: IAO:0100001","title":"Slot: replaced_by"},{"location":"replaced_by/#slot-replaced_by","text":"When this is present, the node obsoletion MAY be associated with automated rewiring changes URI: kgcl:replaced_by","title":"Slot: replaced_by"},{"location":"replaced_by/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"replaced_by/#parents","text":"","title":"Parents"},{"location":"replaced_by/#children","text":"node obsoletion\u279ereplaced by node unobsoletion\u279ereplaced by","title":"Children"},{"location":"replaced_by/#used-by","text":"","title":"Used by"},{"location":"replaced_by/#other-properties","text":"Exact Mappings: IAO:0100001","title":"Other properties"},{"location":"started_at_time/","text":"Slot: started_at_time URI: kgcl:started_at_time Domain and Range None -> OPT String Parents Children Used by Activity Other properties Mappings: prov:startedAtTime","title":"Slot: started_at_time"},{"location":"started_at_time/#slot-started_at_time","text":"URI: kgcl:started_at_time","title":"Slot: started_at_time"},{"location":"started_at_time/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"started_at_time/#parents","text":"","title":"Parents"},{"location":"started_at_time/#children","text":"","title":"Children"},{"location":"started_at_time/#used-by","text":"Activity","title":"Used by"},{"location":"started_at_time/#other-properties","text":"Mappings: prov:startedAtTime","title":"Other properties"},{"location":"subject/","text":"Slot: subject URI: kgcl:subject Domain and Range None -> OPT Node Parents Children Used by Edge EdgeCreation EdgeDeletion EdgeObsoletion","title":"Slot: subject"},{"location":"subject/#slot-subject","text":"URI: kgcl:subject","title":"Slot: subject"},{"location":"subject/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"subject/#parents","text":"","title":"Parents"},{"location":"subject/#children","text":"","title":"Children"},{"location":"subject/#used-by","text":"Edge EdgeCreation EdgeDeletion EdgeObsoletion","title":"Used by"},{"location":"target/","text":"Slot: target The secondary entity on which the change operates URI: kgcl:target Domain and Range None -> OPT String Parents Children node obsoletion with merge\u279etarget node obsoletion with split\u279etarget Used by","title":"Slot: target"},{"location":"target/#slot-target","text":"The secondary entity on which the change operates URI: kgcl:target","title":"Slot: target"},{"location":"target/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"target/#parents","text":"","title":"Parents"},{"location":"target/#children","text":"node obsoletion with merge\u279etarget node obsoletion with split\u279etarget","title":"Children"},{"location":"target/#used-by","text":"","title":"Used by"},{"location":"used/","text":"Slot: used URI: kgcl:used Domain and Range Activity -> OPT String Parents Children Used by Activity Other properties Mappings: prov:used","title":"Slot: used"},{"location":"used/#slot-used","text":"URI: kgcl:used","title":"Slot: used"},{"location":"used/#domain-and-range","text":"Activity -> OPT String","title":"Domain and Range"},{"location":"used/#parents","text":"","title":"Parents"},{"location":"used/#children","text":"","title":"Children"},{"location":"used/#used-by","text":"Activity","title":"Used by"},{"location":"used/#other-properties","text":"Mappings: prov:used","title":"Other properties"},{"location":"was_associated_with/","text":"Slot: was_associated_with URI: kgcl:was_associated_with Domain and Range None -> OPT Agent Parents Children Used by Activity Other properties Mappings: prov:wasAssociatedWith","title":"Slot: was_associated_with"},{"location":"was_associated_with/#slot-was_associated_with","text":"URI: kgcl:was_associated_with","title":"Slot: was_associated_with"},{"location":"was_associated_with/#domain-and-range","text":"None -> OPT Agent","title":"Domain and Range"},{"location":"was_associated_with/#parents","text":"","title":"Parents"},{"location":"was_associated_with/#children","text":"","title":"Children"},{"location":"was_associated_with/#used-by","text":"Activity","title":"Used by"},{"location":"was_associated_with/#other-properties","text":"Mappings: prov:wasAssociatedWith","title":"Other properties"},{"location":"was_generated_by/","text":"Slot: was_generated_by URI: kgcl:was_generated_by Domain and Range None -> OPT Activity Parents Children Used by AddNodeToSubset Change ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLabelChange EdgeLogicalInterpretationChange EdgeObsoletion MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeMove NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymReplacement TextDefinitionReplacement Other properties Mappings: prov:wasGeneratedBy","title":"Slot: was_generated_by"},{"location":"was_generated_by/#slot-was_generated_by","text":"URI: kgcl:was_generated_by","title":"Slot: was_generated_by"},{"location":"was_generated_by/#domain-and-range","text":"None -> OPT Activity","title":"Domain and Range"},{"location":"was_generated_by/#parents","text":"","title":"Parents"},{"location":"was_generated_by/#children","text":"","title":"Children"},{"location":"was_generated_by/#used-by","text":"AddNodeToSubset Change ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLabelChange EdgeLogicalInterpretationChange EdgeObsoletion MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeMove NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"was_generated_by/#other-properties","text":"Mappings: prov:wasGeneratedBy","title":"Other properties"},{"location":"was_informed_by/","text":"Slot: was_informed_by URI: kgcl:was_informed_by Domain and Range None -> OPT Activity Parents Children Used by Activity Agent Other properties Mappings: prov:wasInformedBy","title":"Slot: was_informed_by"},{"location":"was_informed_by/#slot-was_informed_by","text":"URI: kgcl:was_informed_by","title":"Slot: was_informed_by"},{"location":"was_informed_by/#domain-and-range","text":"None -> OPT Activity","title":"Domain and Range"},{"location":"was_informed_by/#parents","text":"","title":"Parents"},{"location":"was_informed_by/#children","text":"","title":"Children"},{"location":"was_informed_by/#used-by","text":"Activity Agent","title":"Used by"},{"location":"was_informed_by/#other-properties","text":"Mappings: prov:wasInformedBy","title":"Other properties"},{"location":"types/Boolean/","text":"Type: Boolean A binary (true or false) value URI: metatype:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"types/Boolean/#type-boolean","text":"A binary (true or false) value URI: metatype:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"types/ChangeClassType/","text":"Type: ChangeClassType CURIE for a class within this datamodel. E.g. kgcl:NodeObsoletion URI: kgcl:ChangeClassType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: ChangeClassType"},{"location":"types/ChangeClassType/#type-changeclasstype","text":"CURIE for a class within this datamodel. E.g. kgcl:NodeObsoletion URI: kgcl:ChangeClassType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: ChangeClassType"},{"location":"types/Date/","text":"Type: Date a date (year, month and day) in an idealized calendar URI: metatype:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"types/Date/#type-date","text":"a date (year, month and day) in an idealized calendar URI: metatype:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"types/Datetime/","text":"Type: Datetime The combination of a date and time URI: metatype:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"types/Datetime/#type-datetime","text":"The combination of a date and time URI: metatype:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"types/Decimal/","text":"Type: Decimal A real number with arbitrary precision that conforms to the xsd:decimal specification URI: metatype:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"types/Decimal/#type-decimal","text":"A real number with arbitrary precision that conforms to the xsd:decimal specification URI: metatype:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"types/Double/","text":"Type: Double A real number that conforms to the xsd:double specification URI: metatype:Double Root (builtin) type float","title":"Type: Double"},{"location":"types/Double/#type-double","text":"A real number that conforms to the xsd:double specification URI: metatype:Double Root (builtin) type float","title":"Type: Double"},{"location":"types/Float/","text":"Type: Float A real number that conforms to the xsd:float specification URI: metatype:Float Root (builtin) type float","title":"Type: Float"},{"location":"types/Float/#type-float","text":"A real number that conforms to the xsd:float specification URI: metatype:Float Root (builtin) type float","title":"Type: Float"},{"location":"types/Integer/","text":"Type: Integer An integer URI: metatype:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"types/Integer/#type-integer","text":"An integer URI: metatype:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"types/Ncname/","text":"Type: Ncname Prefix part of CURIE URI: metatype:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"types/Ncname/#type-ncname","text":"Prefix part of CURIE URI: metatype:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"types/Nodeidentifier/","text":"Type: Nodeidentifier A URI, CURIE or BNODE that represents a node in a model. URI: metatype:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"types/Nodeidentifier/#type-nodeidentifier","text":"A URI, CURIE or BNODE that represents a node in a model. URI: metatype:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"types/Objectidentifier/","text":"Type: Objectidentifier A URI or CURIE that represents an object in the model. URI: metatype:Objectidentifier Root (builtin) type ElementIdentifier Representation str Other properties Comments: Used for inheritence and type checking","title":"Type: Objectidentifier"},{"location":"types/Objectidentifier/#type-objectidentifier","text":"A URI or CURIE that represents an object in the model. URI: metatype:Objectidentifier Root (builtin) type ElementIdentifier Representation str","title":"Type: Objectidentifier"},{"location":"types/Objectidentifier/#other-properties","text":"Comments: Used for inheritence and type checking","title":"Other properties"},{"location":"types/String/","text":"Type: String A character string URI: metatype:String Root (builtin) type str","title":"Type: String"},{"location":"types/String/#type-string","text":"A character string URI: metatype:String Root (builtin) type str","title":"Type: String"},{"location":"types/Time/","text":"Type: Time A time object represents a (local) time of day, independent of any particular day URI: metatype:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"types/Time/#type-time","text":"A time object represents a (local) time of day, independent of any particular day URI: metatype:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"types/Uri/","text":"Type: Uri a complete URI URI: metatype:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"types/Uri/#type-uri","text":"a complete URI URI: metatype:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"types/Uriorcurie/","text":"Type: Uriorcurie a URI or a CURIE URI: metatype:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"},{"location":"types/Uriorcurie/#type-uriorcurie","text":"a URI or a CURIE URI: metatype:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"}]}