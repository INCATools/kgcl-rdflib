{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kgcl schema A data model for describing change operations at a high level on an ontology or ontology-like artefact, such as a Knowledge Graph. See https://github.com/cmungall/knowledge-graph-change-language Classes Activity - a provence-generating activity Agent - a provence-generating agent Change - Any change perform on an ontology or knowledge graph ComplexChange - A change that is is a composition of other changes MultiNodeObsoletion - A complex change consisting of multiple obsoletions. SimpleChange - A change that is about a single ontology element DatatypeChange EdgeChange - A change in which the element that is the focus of the change is an edge. EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. PlaceUnder - An edge creation where the predicate is owl:subClassOf EdgeDeletion - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. EdgeLogicalInterpretationChange - An edge change where the subjet, object, and predicate are unchanged, but the logical interpretation changes EdgeObsoletion - An edge change in which an edge is obsoleted. EdgeRewiring - An edge change where one node is replaced with another, as in the case of obsoletion with replacement NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes NodeDeepening - A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any predicate in the relational graph NodeShallowing - The opposite of node deepening PredicateChange - An edge change where the predicate (relationship type) is modified. LogicalAxiomChange - A simple change where a logical axiom is changed, where the logical axiom cannot be represented as an edge NodeChange - A simple change where the change is about a node AddNodeToSubset - Places a node inside a subset, by annotating that node NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO NodeAnnotationReplacement - A node annotation change where the change replaces a particular property value. TODO NodeCreation - a node change in which a new node is created ClassCreation - A node creation where the owl type is 'class' NodeDeletion - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. NodeDirectMerge - An obsoletion change in which all metadata (including name/label) from the source node is deleted and added to the target node, and edges can automatically be rewired to point to the target node NodeObsoletionWithDirectReplacement - An obsoletion change in which information from the obsoleted node is selectively copied to a single target, and edges can automatically be rewired to point to the target node NodeObsoletionWithNoDirectReplacement - An obsoletion change in which there is no direct replacement NodeRename - A node change where the name (aka rdfs:label) of the node changes NodeSynonymChange NameBecomesSynonym - A node synonym where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym NewSynonym - A node synonym change where a de-novo synonym is created RemoveSynonym - A node synonym change where a synonym is deleted SynonymPredicateChange - A node synonym change where the predicate of a synonym is changed. Background: synonyms can be represented by a variety of predicates. For example, many OBO ontologies make use of predicates such as oio:hasExactSynonym, oio:hasRelatedSynonym, etc SynonymReplacement - A node synonym change where the text of a synonym is changed NodeTextDefinitionChange - A node change where the text definition is changed NewTextDefinition - A node change where a de-novo text definition is created RemoveTextDefinition - A node change where a text definition is deleted TextDefinitionReplacement - A node change where a text definition is modified NodeUnobsoletion - unobsoletion of a node deprecates usage of that node. Rarely applied. RemovedNodeFromSubset - Removes a node from a subset, by removing an annotation Transaction - A change that is a composition of a set of changes, where those changes are treated as a single unit. Could be a single change, or the results of an ontology diff ChangeSetSummaryStatistic - A summary statistic for a set of changes of the same type, grouped by zero or more node properties Configuration - The meaning of operations can be configured OntologyElement - Any component of an ontology or knowledge graph Edge - A relationship between two nodes. We assume owlstar or similar for existential restrictions LogicalDefinition Node - Any named entity in an ontology. May be a class, individual, property ClassNode - A node that is a class InstanceNode - A node that is an individual OntologySubset PropertyValue - a property-value pair Annotation - owl annotations. Not to be confused with annotations sensu GO Session - A session consists of a set of change sets bundled with the activities that generated those change sets TextualDiff - A summarizing of a change on a piece of text. This could be rendered in a number of different ways Mixins AddToSubset - placing an element inside a subset AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target ChangeMixin - root class for all change mixins Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view) AddToSubset - placing an element inside a subset RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed. Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target RemoveFromSubset - removing an element from a subset SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view) AddToSubset - placing an element inside a subset RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed. Slots about - The 'focus' entity on which the change operates edge change\u279eabout node change\u279eabout node direct merge\u279eabout removed node from subset\u279eabout - The node that is removed from the subset obsoletion\u279eabout - The element that is obsoleted by this change. acted on behalf of activity set agent set annotation set change 1 name becomes synonym\u279echange 1 change 2 name becomes synonym\u279echange 2 change date change\u279echange date change description - A string serialization of the change. This should be both human-readable, and parseable. edge creation\u279echange description edge deletion\u279echange description edge obsoletion\u279echange description multi node obsoletion\u279echange description name becomes synonym\u279echange description node creation\u279echange description node deletion\u279echange description node move\u279echange description node deepening\u279echange description node shallowing\u279echange description node obsoletion\u279echange description node direct merge\u279echange description node obsoletion with direct replacement\u279echange description node obsoletion with no direct replacement\u279echange description node rename\u279echange description node unobsoletion\u279echange description predicate change\u279echange description removed node from subset\u279echange description change set - A collection of changes associated change set - All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: multi node obsoletion\u279eassociated change set - All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: multi node obsoletion\u279echange set node obsoletion\u279eassociated change set - All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere change type change set summary statistic\u279echange type \u279econtributor predicate \u279ecreator predicate \u279edefinition predicate \u279emain synonym predicate \u279ename predicate \u279eobsoletion policy \u279eobsoletion workflow \u279esynonym predicates consider node unobsoletion\u279econsider contributor count change set summary statistic\u279ecount creator change\u279ecreator description ended at time filler has direct replacement - An obsoletion replacement where it IS valid to automatically update annotations/edges pointing at the node with its direct replacement node direct merge\u279ehas direct replacement node obsoletion with direct replacement\u279ehas direct replacement has nondirect replacement - An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement node obsoletion with no direct replacement\u279ehas nondirect replacement has textual diff - A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. has undo - A change that reverses this change creation\u279ehas undo obsoletion\u279ehas undo remove from subset\u279ehas undo unobsoletion\u279ehas undo id in subset - The subset that pertains to this change add to subset\u279ein subset - subset that the element is being placed inside. remove from subset\u279ein subset - subset that the element is being removed from name new value - The value of a property held in the new instance of the ontology node rename\u279enew value node id - id of a node to be created object old value - The value of a property held in the old instance of the ontology node rename\u279eold value owl type predicate property property value set change set summary statistic\u279eproperty value set - Summary statistic is grouped by these constraints pull request change\u279epull request replaced by node unobsoletion\u279ereplaced by see also change\u279esee also started at time subject edge change\u279esubject subset - The subset from which the node is to be removed removed node from subset\u279esubset superclass target - The secondary entity on which the change operates has replacement - A single node obsoletion event may be accompanied by one or more suggested replacement nodes used was associated with was generated by change\u279ewas generated by was informed by Enums owl_type_enum Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value ChangeClassType ( Uriorcurie ) - CURIE for a class within this datamodel. E.g. kgcl:NodeObsoletion Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer Ncname ( NCName ) - Prefix part of CURIE Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Index"},{"location":"#kgcl-schema","text":"A data model for describing change operations at a high level on an ontology or ontology-like artefact, such as a Knowledge Graph. See https://github.com/cmungall/knowledge-graph-change-language","title":"Kgcl schema"},{"location":"#classes","text":"Activity - a provence-generating activity Agent - a provence-generating agent Change - Any change perform on an ontology or knowledge graph ComplexChange - A change that is is a composition of other changes MultiNodeObsoletion - A complex change consisting of multiple obsoletions. SimpleChange - A change that is about a single ontology element DatatypeChange EdgeChange - A change in which the element that is the focus of the change is an edge. EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. PlaceUnder - An edge creation where the predicate is owl:subClassOf EdgeDeletion - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. EdgeLogicalInterpretationChange - An edge change where the subjet, object, and predicate are unchanged, but the logical interpretation changes EdgeObsoletion - An edge change in which an edge is obsoleted. EdgeRewiring - An edge change where one node is replaced with another, as in the case of obsoletion with replacement NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes NodeDeepening - A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any predicate in the relational graph NodeShallowing - The opposite of node deepening PredicateChange - An edge change where the predicate (relationship type) is modified. LogicalAxiomChange - A simple change where a logical axiom is changed, where the logical axiom cannot be represented as an edge NodeChange - A simple change where the change is about a node AddNodeToSubset - Places a node inside a subset, by annotating that node NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO NodeAnnotationReplacement - A node annotation change where the change replaces a particular property value. TODO NodeCreation - a node change in which a new node is created ClassCreation - A node creation where the owl type is 'class' NodeDeletion - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. NodeDirectMerge - An obsoletion change in which all metadata (including name/label) from the source node is deleted and added to the target node, and edges can automatically be rewired to point to the target node NodeObsoletionWithDirectReplacement - An obsoletion change in which information from the obsoleted node is selectively copied to a single target, and edges can automatically be rewired to point to the target node NodeObsoletionWithNoDirectReplacement - An obsoletion change in which there is no direct replacement NodeRename - A node change where the name (aka rdfs:label) of the node changes NodeSynonymChange NameBecomesSynonym - A node synonym where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym NewSynonym - A node synonym change where a de-novo synonym is created RemoveSynonym - A node synonym change where a synonym is deleted SynonymPredicateChange - A node synonym change where the predicate of a synonym is changed. Background: synonyms can be represented by a variety of predicates. For example, many OBO ontologies make use of predicates such as oio:hasExactSynonym, oio:hasRelatedSynonym, etc SynonymReplacement - A node synonym change where the text of a synonym is changed NodeTextDefinitionChange - A node change where the text definition is changed NewTextDefinition - A node change where a de-novo text definition is created RemoveTextDefinition - A node change where a text definition is deleted TextDefinitionReplacement - A node change where a text definition is modified NodeUnobsoletion - unobsoletion of a node deprecates usage of that node. Rarely applied. RemovedNodeFromSubset - Removes a node from a subset, by removing an annotation Transaction - A change that is a composition of a set of changes, where those changes are treated as a single unit. Could be a single change, or the results of an ontology diff ChangeSetSummaryStatistic - A summary statistic for a set of changes of the same type, grouped by zero or more node properties Configuration - The meaning of operations can be configured OntologyElement - Any component of an ontology or knowledge graph Edge - A relationship between two nodes. We assume owlstar or similar for existential restrictions LogicalDefinition Node - Any named entity in an ontology. May be a class, individual, property ClassNode - A node that is a class InstanceNode - A node that is an individual OntologySubset PropertyValue - a property-value pair Annotation - owl annotations. Not to be confused with annotations sensu GO Session - A session consists of a set of change sets bundled with the activities that generated those change sets TextualDiff - A summarizing of a change on a piece of text. This could be rendered in a number of different ways","title":"Classes"},{"location":"#mixins","text":"AddToSubset - placing an element inside a subset AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target ChangeMixin - root class for all change mixins Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view) AddToSubset - placing an element inside a subset RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed. Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target RemoveFromSubset - removing an element from a subset SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view) AddToSubset - placing an element inside a subset RemoveFromSubset - removing an element from a subset Unobsoletion - Opposite operation of obsoletion. Rarely performed.","title":"Mixins"},{"location":"#slots","text":"about - The 'focus' entity on which the change operates edge change\u279eabout node change\u279eabout node direct merge\u279eabout removed node from subset\u279eabout - The node that is removed from the subset obsoletion\u279eabout - The element that is obsoleted by this change. acted on behalf of activity set agent set annotation set change 1 name becomes synonym\u279echange 1 change 2 name becomes synonym\u279echange 2 change date change\u279echange date change description - A string serialization of the change. This should be both human-readable, and parseable. edge creation\u279echange description edge deletion\u279echange description edge obsoletion\u279echange description multi node obsoletion\u279echange description name becomes synonym\u279echange description node creation\u279echange description node deletion\u279echange description node move\u279echange description node deepening\u279echange description node shallowing\u279echange description node obsoletion\u279echange description node direct merge\u279echange description node obsoletion with direct replacement\u279echange description node obsoletion with no direct replacement\u279echange description node rename\u279echange description node unobsoletion\u279echange description predicate change\u279echange description removed node from subset\u279echange description change set - A collection of changes associated change set - All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: multi node obsoletion\u279eassociated change set - All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: multi node obsoletion\u279echange set node obsoletion\u279eassociated change set - All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere change type change set summary statistic\u279echange type \u279econtributor predicate \u279ecreator predicate \u279edefinition predicate \u279emain synonym predicate \u279ename predicate \u279eobsoletion policy \u279eobsoletion workflow \u279esynonym predicates consider node unobsoletion\u279econsider contributor count change set summary statistic\u279ecount creator change\u279ecreator description ended at time filler has direct replacement - An obsoletion replacement where it IS valid to automatically update annotations/edges pointing at the node with its direct replacement node direct merge\u279ehas direct replacement node obsoletion with direct replacement\u279ehas direct replacement has nondirect replacement - An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement node obsoletion with no direct replacement\u279ehas nondirect replacement has textual diff - A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. has undo - A change that reverses this change creation\u279ehas undo obsoletion\u279ehas undo remove from subset\u279ehas undo unobsoletion\u279ehas undo id in subset - The subset that pertains to this change add to subset\u279ein subset - subset that the element is being placed inside. remove from subset\u279ein subset - subset that the element is being removed from name new value - The value of a property held in the new instance of the ontology node rename\u279enew value node id - id of a node to be created object old value - The value of a property held in the old instance of the ontology node rename\u279eold value owl type predicate property property value set change set summary statistic\u279eproperty value set - Summary statistic is grouped by these constraints pull request change\u279epull request replaced by node unobsoletion\u279ereplaced by see also change\u279esee also started at time subject edge change\u279esubject subset - The subset from which the node is to be removed removed node from subset\u279esubset superclass target - The secondary entity on which the change operates has replacement - A single node obsoletion event may be accompanied by one or more suggested replacement nodes used was associated with was generated by change\u279ewas generated by was informed by","title":"Slots"},{"location":"#enums","text":"owl_type_enum","title":"Enums"},{"location":"#types","text":"","title":"Types"},{"location":"#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"#defined","text":"Boolean ( Bool ) - A binary (true or false) value ChangeClassType ( Uriorcurie ) - CURIE for a class within this datamodel. E.g. kgcl:NodeObsoletion Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer Ncname ( NCName ) - Prefix part of CURIE Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"Activity/","text":"Class: Activity a provence-generating activity URI: kgcl:Activity Referenced by class None activity set 0.. Activity * Change change\u279ewas generated by OPT Activity None was generated by OPT Activity None was informed by OPT Activity Attributes Own description OPT range: String ended at time OPT range: String id REQ range: String started at time OPT range: String used OPT range: String was associated with OPT range: Agent was informed by OPT range: Activity Other properties Mappings: prov:Activity","title":"Class: Activity"},{"location":"Activity/#class-activity","text":"a provence-generating activity URI: kgcl:Activity","title":"Class: Activity"},{"location":"Activity/#referenced-by-class","text":"None activity set 0.. Activity * Change change\u279ewas generated by OPT Activity None was generated by OPT Activity None was informed by OPT Activity","title":"Referenced by class"},{"location":"Activity/#attributes","text":"","title":"Attributes"},{"location":"Activity/#own","text":"description OPT range: String ended at time OPT range: String id REQ range: String started at time OPT range: String used OPT range: String was associated with OPT range: Agent was informed by OPT range: Activity","title":"Own"},{"location":"Activity/#other-properties","text":"Mappings: prov:Activity","title":"Other properties"},{"location":"AddNodeToSubset/","text":"Class: AddNodeToSubset Places a node inside a subset, by annotating that node URI: kgcl:AddNodeToSubset Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: AddToSubset - placing an element inside a subset Attributes Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Mixed in from add to subset: add to subset\u279ein subset OPT Description: subset that the element is being placed inside. range: OntologySubset Other properties Aliases: add term to slim See also: http://wiki.geneontology.org/index.php/Adding_a_Term_to_a_GO_Subset_(Slim)","title":"Class: AddNodeToSubset"},{"location":"AddNodeToSubset/#class-addnodetosubset","text":"Places a node inside a subset, by annotating that node URI: kgcl:AddNodeToSubset","title":"Class: AddNodeToSubset"},{"location":"AddNodeToSubset/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"AddNodeToSubset/#uses-mixins","text":"mixin: AddToSubset - placing an element inside a subset","title":"Uses Mixins"},{"location":"AddNodeToSubset/#attributes","text":"","title":"Attributes"},{"location":"AddNodeToSubset/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"AddNodeToSubset/#mixed-in-from-add-to-subset","text":"add to subset\u279ein subset OPT Description: subset that the element is being placed inside. range: OntologySubset","title":"Mixed in from add to subset:"},{"location":"AddNodeToSubset/#other-properties","text":"Aliases: add term to slim See also: http://wiki.geneontology.org/index.php/Adding_a_Term_to_a_GO_Subset_(Slim)","title":"Other properties"},{"location":"AddToSubset/","text":"Class: AddToSubset placing an element inside a subset URI: kgcl:AddToSubset Parents is_a: SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view) Mixin for AddNodeToSubset (mixin) - Places a node inside a subset, by annotating that node Referenced by class RemoveFromSubset remove from subset\u279ehas undo OPT AddToSubset Attributes Own add to subset\u279ein subset OPT Description: subset that the element is being placed inside. range: OntologySubset","title":"Class: AddToSubset"},{"location":"AddToSubset/#class-addtosubset","text":"placing an element inside a subset URI: kgcl:AddToSubset","title":"Class: AddToSubset"},{"location":"AddToSubset/#parents","text":"is_a: SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view)","title":"Parents"},{"location":"AddToSubset/#mixin-for","text":"AddNodeToSubset (mixin) - Places a node inside a subset, by annotating that node","title":"Mixin for"},{"location":"AddToSubset/#referenced-by-class","text":"RemoveFromSubset remove from subset\u279ehas undo OPT AddToSubset","title":"Referenced by class"},{"location":"AddToSubset/#attributes","text":"","title":"Attributes"},{"location":"AddToSubset/#own","text":"add to subset\u279ein subset OPT Description: subset that the element is being placed inside. range: OntologySubset","title":"Own"},{"location":"Agent/","text":"Class: Agent a provence-generating agent URI: kgcl:Agent Referenced by class None acted on behalf of OPT Agent None agent set 0.. Agent * None was associated with OPT Agent Attributes Own acted on behalf of OPT range: Agent id REQ range: String was informed by OPT range: Activity Other properties Mappings: prov:Agent","title":"Class: Agent"},{"location":"Agent/#class-agent","text":"a provence-generating agent URI: kgcl:Agent","title":"Class: Agent"},{"location":"Agent/#referenced-by-class","text":"None acted on behalf of OPT Agent None agent set 0.. Agent * None was associated with OPT Agent","title":"Referenced by class"},{"location":"Agent/#attributes","text":"","title":"Attributes"},{"location":"Agent/#own","text":"acted on behalf of OPT range: Agent id REQ range: String was informed by OPT range: Activity","title":"Own"},{"location":"Agent/#other-properties","text":"Mappings: prov:Agent","title":"Other properties"},{"location":"AllowsAutomaticReplacementOfEdges/","text":"Class: AllowsAutomaticReplacementOfEdges Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target URI: kgcl:AllowsAutomaticReplacementOfEdges Parents is_a: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. Mixin for NodeDirectMerge (mixin) - An obsoletion change in which all metadata (including name/label) from the source node is deleted and added to the target node, and edges can automatically be rewired to point to the target node NodeObsoletionWithDirectReplacement (mixin) - An obsoletion change in which information from the obsoleted node is selectively copied to a single target, and edges can automatically be rewired to point to the target node Referenced by class Attributes Inherited from obsoletion: obsoletion\u279eabout OPT Description: The element that is obsoleted by this change. range: String obsoletion\u279ehas undo OPT range: Obsoletion","title":"Class: AllowsAutomaticReplacementOfEdges"},{"location":"AllowsAutomaticReplacementOfEdges/#class-allowsautomaticreplacementofedges","text":"Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target URI: kgcl:AllowsAutomaticReplacementOfEdges","title":"Class: AllowsAutomaticReplacementOfEdges"},{"location":"AllowsAutomaticReplacementOfEdges/#parents","text":"is_a: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element.","title":"Parents"},{"location":"AllowsAutomaticReplacementOfEdges/#mixin-for","text":"NodeDirectMerge (mixin) - An obsoletion change in which all metadata (including name/label) from the source node is deleted and added to the target node, and edges can automatically be rewired to point to the target node NodeObsoletionWithDirectReplacement (mixin) - An obsoletion change in which information from the obsoleted node is selectively copied to a single target, and edges can automatically be rewired to point to the target node","title":"Mixin for"},{"location":"AllowsAutomaticReplacementOfEdges/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"AllowsAutomaticReplacementOfEdges/#attributes","text":"","title":"Attributes"},{"location":"AllowsAutomaticReplacementOfEdges/#inherited-from-obsoletion","text":"obsoletion\u279eabout OPT Description: The element that is obsoleted by this change. range: String obsoletion\u279ehas undo OPT range: Obsoletion","title":"Inherited from obsoletion:"},{"location":"Annotation/","text":"Class: Annotation owl annotations. Not to be confused with annotations sensu GO URI: kgcl:Annotation Parents is_a: PropertyValue - a property-value pair Referenced by class None annotation set OPT Annotation Attributes Own annotation set OPT range: Annotation filler OPT range: String property OPT range: Node Other properties Mappings: owl:Annotation","title":"Class: Annotation"},{"location":"Annotation/#class-annotation","text":"owl annotations. Not to be confused with annotations sensu GO URI: kgcl:Annotation","title":"Class: Annotation"},{"location":"Annotation/#parents","text":"is_a: PropertyValue - a property-value pair","title":"Parents"},{"location":"Annotation/#referenced-by-class","text":"None annotation set OPT Annotation","title":"Referenced by class"},{"location":"Annotation/#attributes","text":"","title":"Attributes"},{"location":"Annotation/#own","text":"annotation set OPT range: Annotation filler OPT range: String property OPT range: Node","title":"Own"},{"location":"Annotation/#other-properties","text":"Mappings: owl:Annotation","title":"Other properties"},{"location":"Change/","text":"Class: Change Any change perform on an ontology or knowledge graph URI: kgcl:Change Children ComplexChange - A change that is is a composition of other changes SimpleChange - A change that is about a single ontology element Transaction - A change that is a composition of a set of changes, where those changes are treated as a single unit. Could be a single change, or the results of an ontology diff Referenced by class None associated change set 0.. Change * None change set 0.. Change * Change has undo OPT Change MultiNodeObsoletion multi node obsoletion\u279eassociated change set 0.. Change * NodeObsoletion node obsoletion\u279eassociated change set 0.. Change * Attributes Own change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String","title":"Class: Change"},{"location":"Change/#class-change","text":"Any change perform on an ontology or knowledge graph URI: kgcl:Change","title":"Class: Change"},{"location":"Change/#children","text":"ComplexChange - A change that is is a composition of other changes SimpleChange - A change that is about a single ontology element Transaction - A change that is a composition of a set of changes, where those changes are treated as a single unit. Could be a single change, or the results of an ontology diff","title":"Children"},{"location":"Change/#referenced-by-class","text":"None associated change set 0.. Change * None change set 0.. Change * Change has undo OPT Change MultiNodeObsoletion multi node obsoletion\u279eassociated change set 0.. Change * NodeObsoletion node obsoletion\u279eassociated change set 0.. Change *","title":"Referenced by class"},{"location":"Change/#attributes","text":"","title":"Attributes"},{"location":"Change/#own","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String","title":"Own"},{"location":"ChangeMixin/","text":"Class: ChangeMixin root class for all change mixins URI: kgcl:ChangeMixin Children Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view) Unobsoletion - Opposite operation of obsoletion. Rarely performed. Referenced by class Attributes","title":"Class: ChangeMixin"},{"location":"ChangeMixin/#class-changemixin","text":"root class for all change mixins URI: kgcl:ChangeMixin","title":"Class: ChangeMixin"},{"location":"ChangeMixin/#children","text":"Creation - Creation of an element. Deletion - Removal of an element. Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view) Unobsoletion - Opposite operation of obsoletion. Rarely performed.","title":"Children"},{"location":"ChangeMixin/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ChangeMixin/#attributes","text":"","title":"Attributes"},{"location":"ChangeSetSummaryStatistic/","text":"Class: ChangeSetSummaryStatistic A summary statistic for a set of changes of the same type, grouped by zero or more node properties URI: kgcl:ChangeSetSummaryStatistic Referenced by class Attributes Own change set summary statistic\u279echange type OPT range: ChangeClassType change set summary statistic\u279ecount OPT range: Integer change set summary statistic\u279eproperty value set 0..* Description: Summary statistic is grouped by these constraints range: PropertyValue","title":"Class: ChangeSetSummaryStatistic"},{"location":"ChangeSetSummaryStatistic/#class-changesetsummarystatistic","text":"A summary statistic for a set of changes of the same type, grouped by zero or more node properties URI: kgcl:ChangeSetSummaryStatistic","title":"Class: ChangeSetSummaryStatistic"},{"location":"ChangeSetSummaryStatistic/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ChangeSetSummaryStatistic/#attributes","text":"","title":"Attributes"},{"location":"ChangeSetSummaryStatistic/#own","text":"change set summary statistic\u279echange type OPT range: ChangeClassType change set summary statistic\u279ecount OPT range: Integer change set summary statistic\u279eproperty value set 0..* Description: Summary statistic is grouped by these constraints range: PropertyValue","title":"Own"},{"location":"ClassCreation/","text":"Class: ClassCreation A node creation where the owl type is 'class' URI: kgcl:ClassCreation Parents is_a: NodeCreation - a node change in which a new node is created Attributes Own superclass OPT range: Node Inherited from node creation: annotation set OPT range: Annotation change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String name OPT range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String node creation\u279echange description OPT range: String node id OPT Description: id of a node to be created range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String owl type OPT range: owl_type_enum","title":"Class: ClassCreation"},{"location":"ClassCreation/#class-classcreation","text":"A node creation where the owl type is 'class' URI: kgcl:ClassCreation","title":"Class: ClassCreation"},{"location":"ClassCreation/#parents","text":"is_a: NodeCreation - a node change in which a new node is created","title":"Parents"},{"location":"ClassCreation/#attributes","text":"","title":"Attributes"},{"location":"ClassCreation/#own","text":"superclass OPT range: Node","title":"Own"},{"location":"ClassCreation/#inherited-from-node-creation","text":"annotation set OPT range: Annotation change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String name OPT range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String node creation\u279echange description OPT range: String node id OPT Description: id of a node to be created range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String owl type OPT range: owl_type_enum","title":"Inherited from node creation:"},{"location":"ClassNode/","text":"Class: ClassNode A node that is a class URI: kgcl:ClassNode Parents is_a: Node - Any named entity in an ontology. May be a class, individual, property Attributes Inherited from node: annotation set OPT range: Annotation id REQ range: String name OPT range: String owl type OPT range: owl_type_enum Other properties Aliases: concept Mappings: owl:Class","title":"Class: ClassNode"},{"location":"ClassNode/#class-classnode","text":"A node that is a class URI: kgcl:ClassNode","title":"Class: ClassNode"},{"location":"ClassNode/#parents","text":"is_a: Node - Any named entity in an ontology. May be a class, individual, property","title":"Parents"},{"location":"ClassNode/#attributes","text":"","title":"Attributes"},{"location":"ClassNode/#inherited-from-node","text":"annotation set OPT range: Annotation id REQ range: String name OPT range: String owl type OPT range: owl_type_enum","title":"Inherited from node:"},{"location":"ClassNode/#other-properties","text":"Aliases: concept Mappings: owl:Class","title":"Other properties"},{"location":"ComplexChange/","text":"Class: ComplexChange A change that is is a composition of other changes URI: kgcl:ComplexChange Parents is_a: Change - Any change perform on an ontology or knowledge graph Children MultiNodeObsoletion - A complex change consisting of multiple obsoletions. Referenced by class Attributes Own change set 0..* Description: A collection of changes range: Change Inherited from change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String","title":"Class: ComplexChange"},{"location":"ComplexChange/#class-complexchange","text":"A change that is is a composition of other changes URI: kgcl:ComplexChange","title":"Class: ComplexChange"},{"location":"ComplexChange/#parents","text":"is_a: Change - Any change perform on an ontology or knowledge graph","title":"Parents"},{"location":"ComplexChange/#children","text":"MultiNodeObsoletion - A complex change consisting of multiple obsoletions.","title":"Children"},{"location":"ComplexChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ComplexChange/#attributes","text":"","title":"Attributes"},{"location":"ComplexChange/#own","text":"change set 0..* Description: A collection of changes range: Change","title":"Own"},{"location":"ComplexChange/#inherited-from-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String","title":"Inherited from change:"},{"location":"Configuration/","text":"Class: Configuration The meaning of operations can be configured URI: kgcl:Configuration Attributes Own \u279econtributor predicate OPT range: String \u279ecreator predicate OPT range: String \u279edefinition predicate OPT range: String \u279emain synonym predicate OPT range: String \u279ename predicate OPT range: String \u279eobsoletion policy OPT range: String \u279eobsoletion workflow OPT range: String \u279esynonym predicates OPT range: String","title":"Class: Configuration"},{"location":"Configuration/#class-configuration","text":"The meaning of operations can be configured URI: kgcl:Configuration","title":"Class: Configuration"},{"location":"Configuration/#attributes","text":"","title":"Attributes"},{"location":"Configuration/#own","text":"\u279econtributor predicate OPT range: String \u279ecreator predicate OPT range: String \u279edefinition predicate OPT range: String \u279emain synonym predicate OPT range: String \u279ename predicate OPT range: String \u279eobsoletion policy OPT range: String \u279eobsoletion workflow OPT range: String \u279esynonym predicates OPT range: String","title":"Own"},{"location":"Creation/","text":"Class: Creation Creation of an element. URI: kgcl:Creation Parents is_a: ChangeMixin - root class for all change mixins Mixin for EdgeCreation (mixin) - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. NodeCreation (mixin) - a node change in which a new node is created Referenced by class Attributes Own creation\u279ehas undo OPT range: Deletion","title":"Class: Creation"},{"location":"Creation/#class-creation","text":"Creation of an element. URI: kgcl:Creation","title":"Class: Creation"},{"location":"Creation/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"Creation/#mixin-for","text":"EdgeCreation (mixin) - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. NodeCreation (mixin) - a node change in which a new node is created","title":"Mixin for"},{"location":"Creation/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Creation/#attributes","text":"","title":"Attributes"},{"location":"Creation/#own","text":"creation\u279ehas undo OPT range: Deletion","title":"Own"},{"location":"DatatypeChange/","text":"Class: DatatypeChange URI: kgcl:DatatypeChange Parents is_a: SimpleChange - A change that is about a single ontology element Attributes Inherited from simple change: about OPT Description: The 'focus' entity on which the change operates range: String change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: DatatypeChange"},{"location":"DatatypeChange/#class-datatypechange","text":"URI: kgcl:DatatypeChange","title":"Class: DatatypeChange"},{"location":"DatatypeChange/#parents","text":"is_a: SimpleChange - A change that is about a single ontology element","title":"Parents"},{"location":"DatatypeChange/#attributes","text":"","title":"Attributes"},{"location":"DatatypeChange/#inherited-from-simple-change","text":"about OPT Description: The 'focus' entity on which the change operates range: String change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from simple change:"},{"location":"Deletion/","text":"Class: Deletion Removal of an element. URI: kgcl:Deletion Parents is_a: ChangeMixin - root class for all change mixins Mixin for EdgeDeletion (mixin) - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. NodeDeletion (mixin) - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise Referenced by class Creation creation\u279ehas undo OPT Deletion Attributes Other properties Comments: In general, for OBO ontologies, node elements should never be deleted, always obsolete. However, edge deletion is more common.","title":"Class: Deletion"},{"location":"Deletion/#class-deletion","text":"Removal of an element. URI: kgcl:Deletion","title":"Class: Deletion"},{"location":"Deletion/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"Deletion/#mixin-for","text":"EdgeDeletion (mixin) - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. NodeDeletion (mixin) - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise","title":"Mixin for"},{"location":"Deletion/#referenced-by-class","text":"Creation creation\u279ehas undo OPT Deletion","title":"Referenced by class"},{"location":"Deletion/#attributes","text":"","title":"Attributes"},{"location":"Deletion/#other-properties","text":"Comments: In general, for OBO ontologies, node elements should never be deleted, always obsolete. However, edge deletion is more common.","title":"Other properties"},{"location":"Edge/","text":"Class: Edge A relationship between two nodes. We assume owlstar or similar for existential restrictions URI: kgcl:Edge Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Attributes Own annotation set OPT range: Annotation object OPT range: Node predicate OPT range: Node subject OPT range: Node Other properties Aliases: triple axiom relationship Mappings: owl:Axiom rdf:Statement","title":"Class: Edge"},{"location":"Edge/#class-edge","text":"A relationship between two nodes. We assume owlstar or similar for existential restrictions URI: kgcl:Edge","title":"Class: Edge"},{"location":"Edge/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"Edge/#attributes","text":"","title":"Attributes"},{"location":"Edge/#own","text":"annotation set OPT range: Annotation object OPT range: Node predicate OPT range: Node subject OPT range: Node","title":"Own"},{"location":"Edge/#other-properties","text":"Aliases: triple axiom relationship Mappings: owl:Axiom rdf:Statement","title":"Other properties"},{"location":"EdgeChange/","text":"Class: EdgeChange A change in which the element that is the focus of the change is an edge. URI: kgcl:EdgeChange Parents is_a: SimpleChange - A change that is about a single ontology element Children EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. EdgeDeletion - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. EdgeLogicalInterpretationChange - An edge change where the subjet, object, and predicate are unchanged, but the logical interpretation changes EdgeObsoletion - An edge change in which an edge is obsoleted. EdgeRewiring - An edge change where one node is replaced with another, as in the case of obsoletion with replacement NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes PredicateChange - An edge change where the predicate (relationship type) is modified. Referenced by class Attributes Own edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node Inherited from simple change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Aliases: axiom change triple change","title":"Class: EdgeChange"},{"location":"EdgeChange/#class-edgechange","text":"A change in which the element that is the focus of the change is an edge. URI: kgcl:EdgeChange","title":"Class: EdgeChange"},{"location":"EdgeChange/#parents","text":"is_a: SimpleChange - A change that is about a single ontology element","title":"Parents"},{"location":"EdgeChange/#children","text":"EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. EdgeDeletion - An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. EdgeLogicalInterpretationChange - An edge change where the subjet, object, and predicate are unchanged, but the logical interpretation changes EdgeObsoletion - An edge change in which an edge is obsoleted. EdgeRewiring - An edge change where one node is replaced with another, as in the case of obsoletion with replacement NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes PredicateChange - An edge change where the predicate (relationship type) is modified.","title":"Children"},{"location":"EdgeChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeChange/#attributes","text":"","title":"Attributes"},{"location":"EdgeChange/#own","text":"edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node","title":"Own"},{"location":"EdgeChange/#inherited-from-simple-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from simple change:"},{"location":"EdgeChange/#other-properties","text":"Aliases: axiom change triple change","title":"Other properties"},{"location":"EdgeCreation/","text":"Class: EdgeCreation An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. URI: kgcl:EdgeCreation Parents is_a: EdgeChange - A change in which the element that is the focus of the change is an edge. Uses Mixins mixin: Creation - Creation of an element. Children PlaceUnder - An edge creation where the predicate is owl:subClassOf Referenced by class Attributes Own annotation set OPT range: Annotation edge creation\u279echange description OPT range: String object OPT range: Node predicate OPT range: Node subject OPT range: Node Inherited from edge change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Aliases: relationship creation See also: http://wiki.geneontology.org/index.php/Guidelines_for_creating_relationships_between_terms","title":"Class: EdgeCreation"},{"location":"EdgeCreation/#class-edgecreation","text":"An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. URI: kgcl:EdgeCreation","title":"Class: EdgeCreation"},{"location":"EdgeCreation/#parents","text":"is_a: EdgeChange - A change in which the element that is the focus of the change is an edge.","title":"Parents"},{"location":"EdgeCreation/#uses-mixins","text":"mixin: Creation - Creation of an element.","title":"Uses Mixins"},{"location":"EdgeCreation/#children","text":"PlaceUnder - An edge creation where the predicate is owl:subClassOf","title":"Children"},{"location":"EdgeCreation/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeCreation/#attributes","text":"","title":"Attributes"},{"location":"EdgeCreation/#own","text":"annotation set OPT range: Annotation edge creation\u279echange description OPT range: String object OPT range: Node predicate OPT range: Node subject OPT range: Node","title":"Own"},{"location":"EdgeCreation/#inherited-from-edge-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from edge change:"},{"location":"EdgeCreation/#other-properties","text":"Aliases: relationship creation See also: http://wiki.geneontology.org/index.php/Guidelines_for_creating_relationships_between_terms","title":"Other properties"},{"location":"EdgeDeletion/","text":"Class: EdgeDeletion An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. URI: kgcl:EdgeDeletion Parents is_a: EdgeChange - A change in which the element that is the focus of the change is an edge. Uses Mixins mixin: Deletion - Removal of an element. Referenced by class Attributes Own annotation set OPT range: Annotation edge deletion\u279echange description OPT range: String object OPT range: Node predicate OPT range: Node subject OPT range: Node Inherited from edge change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Aliases: relationship deletion","title":"Class: EdgeDeletion"},{"location":"EdgeDeletion/#class-edgedeletion","text":"An edge change in which an edge is removed. All edge annotations/properies are removed in the same action. URI: kgcl:EdgeDeletion","title":"Class: EdgeDeletion"},{"location":"EdgeDeletion/#parents","text":"is_a: EdgeChange - A change in which the element that is the focus of the change is an edge.","title":"Parents"},{"location":"EdgeDeletion/#uses-mixins","text":"mixin: Deletion - Removal of an element.","title":"Uses Mixins"},{"location":"EdgeDeletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeDeletion/#attributes","text":"","title":"Attributes"},{"location":"EdgeDeletion/#own","text":"annotation set OPT range: Annotation edge deletion\u279echange description OPT range: String object OPT range: Node predicate OPT range: Node subject OPT range: Node","title":"Own"},{"location":"EdgeDeletion/#inherited-from-edge-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from edge change:"},{"location":"EdgeDeletion/#other-properties","text":"Aliases: relationship deletion","title":"Other properties"},{"location":"EdgeLabelChange/","text":"Class: EdgeLabelChange An edge change where the edge label (relationship type) is modified. URI: kgcl:EdgeLabelChange Parents is_a: EdgeChange - A change in which the entity changes is an edge Referenced by class Attributes Own edge label change\u279echange description OPT range: String Inherited from edge change: edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties Examples: Example(value='changing a is-a b to a part-of b', description=None)","title":"Class: EdgeLabelChange"},{"location":"EdgeLabelChange/#class-edgelabelchange","text":"An edge change where the edge label (relationship type) is modified. URI: kgcl:EdgeLabelChange","title":"Class: EdgeLabelChange"},{"location":"EdgeLabelChange/#parents","text":"is_a: EdgeChange - A change in which the entity changes is an edge","title":"Parents"},{"location":"EdgeLabelChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeLabelChange/#attributes","text":"","title":"Attributes"},{"location":"EdgeLabelChange/#own","text":"edge label change\u279echange description OPT range: String","title":"Own"},{"location":"EdgeLabelChange/#inherited-from-edge-change","text":"edge change\u279eabout OPT range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from edge change:"},{"location":"EdgeLabelChange/#other-properties","text":"Examples: Example(value='changing a is-a b to a part-of b', description=None)","title":"Other properties"},{"location":"EdgeLogicalInterpretationChange/","text":"Class: EdgeLogicalInterpretationChange An edge change where the subjet, object, and predicate are unchanged, but the logical interpretation changes URI: kgcl:EdgeLogicalInterpretationChange Parents is_a: EdgeChange - A change in which the element that is the focus of the change is an edge. Attributes Inherited from edge change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Examples: Example(value='changing a SubClassOf r some b to a subClassOf r only b', description=None)","title":"Class: EdgeLogicalInterpretationChange"},{"location":"EdgeLogicalInterpretationChange/#class-edgelogicalinterpretationchange","text":"An edge change where the subjet, object, and predicate are unchanged, but the logical interpretation changes URI: kgcl:EdgeLogicalInterpretationChange","title":"Class: EdgeLogicalInterpretationChange"},{"location":"EdgeLogicalInterpretationChange/#parents","text":"is_a: EdgeChange - A change in which the element that is the focus of the change is an edge.","title":"Parents"},{"location":"EdgeLogicalInterpretationChange/#attributes","text":"","title":"Attributes"},{"location":"EdgeLogicalInterpretationChange/#inherited-from-edge-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from edge change:"},{"location":"EdgeLogicalInterpretationChange/#other-properties","text":"Examples: Example(value='changing a SubClassOf r some b to a subClassOf r only b', description=None)","title":"Other properties"},{"location":"EdgeObsoletion/","text":"Class: EdgeObsoletion An edge change in which an edge is obsoleted. URI: kgcl:EdgeObsoletion Parents is_a: EdgeChange - A change in which the element that is the focus of the change is an edge. Uses Mixins mixin: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. Referenced by class Attributes Own annotation set OPT range: Annotation edge obsoletion\u279echange description OPT range: String object OPT range: Node predicate OPT range: Node subject OPT range: Node Inherited from edge change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Aliases: relationship obsoletion Comments: Note there is not yet consensus in how this should be done in rdf/owl implementations. Simply marking the edge deprecated with render it visible to most clients. Care must be taken because simply adding a deprecation tag to an axiom does not silence it -- it is still asserted. It is therefore more common to obsolete an edge by shadowing the axiom as an annotation. See the Mondo docs for example See also: https://mondo.readthedocs.io/en/latest/editors-guide/g-logical-axioms/#excluded-subclassof","title":"Class: EdgeObsoletion"},{"location":"EdgeObsoletion/#class-edgeobsoletion","text":"An edge change in which an edge is obsoleted. URI: kgcl:EdgeObsoletion","title":"Class: EdgeObsoletion"},{"location":"EdgeObsoletion/#parents","text":"is_a: EdgeChange - A change in which the element that is the focus of the change is an edge.","title":"Parents"},{"location":"EdgeObsoletion/#uses-mixins","text":"mixin: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element.","title":"Uses Mixins"},{"location":"EdgeObsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EdgeObsoletion/#attributes","text":"","title":"Attributes"},{"location":"EdgeObsoletion/#own","text":"annotation set OPT range: Annotation edge obsoletion\u279echange description OPT range: String object OPT range: Node predicate OPT range: Node subject OPT range: Node","title":"Own"},{"location":"EdgeObsoletion/#inherited-from-edge-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from edge change:"},{"location":"EdgeObsoletion/#other-properties","text":"Aliases: relationship obsoletion Comments: Note there is not yet consensus in how this should be done in rdf/owl implementations. Simply marking the edge deprecated with render it visible to most clients. Care must be taken because simply adding a deprecation tag to an axiom does not silence it -- it is still asserted. It is therefore more common to obsolete an edge by shadowing the axiom as an annotation. See the Mondo docs for example See also: https://mondo.readthedocs.io/en/latest/editors-guide/g-logical-axioms/#excluded-subclassof","title":"Other properties"},{"location":"EdgeRewiring/","text":"Class: EdgeRewiring An edge change where one node is replaced with another, as in the case of obsoletion with replacement URI: kgcl:EdgeRewiring Parents is_a: EdgeChange - A change in which the element that is the focus of the change is an edge. Attributes Inherited from edge change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Examples: Example(value='changing G1 annotated-to T1 to G1 annotated-to T2, after obsoletion of T1 and replacement with T2', description=None)","title":"Class: EdgeRewiring"},{"location":"EdgeRewiring/#class-edgerewiring","text":"An edge change where one node is replaced with another, as in the case of obsoletion with replacement URI: kgcl:EdgeRewiring","title":"Class: EdgeRewiring"},{"location":"EdgeRewiring/#parents","text":"is_a: EdgeChange - A change in which the element that is the focus of the change is an edge.","title":"Parents"},{"location":"EdgeRewiring/#attributes","text":"","title":"Attributes"},{"location":"EdgeRewiring/#inherited-from-edge-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from edge change:"},{"location":"EdgeRewiring/#other-properties","text":"Examples: Example(value='changing G1 annotated-to T1 to G1 annotated-to T2, after obsoletion of T1 and replacement with T2', description=None)","title":"Other properties"},{"location":"InstanceNode/","text":"Class: InstanceNode A node that is an individual URI: kgcl:InstanceNode Parents is_a: Node - Any named entity in an ontology. May be a class, individual, property Attributes Inherited from node: annotation set OPT range: Annotation id REQ range: String name OPT range: String owl type OPT range: owl_type_enum Other properties Aliases: named individual Mappings: owl:NamedIndividual","title":"Class: InstanceNode"},{"location":"InstanceNode/#class-instancenode","text":"A node that is an individual URI: kgcl:InstanceNode","title":"Class: InstanceNode"},{"location":"InstanceNode/#parents","text":"is_a: Node - Any named entity in an ontology. May be a class, individual, property","title":"Parents"},{"location":"InstanceNode/#attributes","text":"","title":"Attributes"},{"location":"InstanceNode/#inherited-from-node","text":"annotation set OPT range: Annotation id REQ range: String name OPT range: String owl type OPT range: owl_type_enum","title":"Inherited from node:"},{"location":"InstanceNode/#other-properties","text":"Aliases: named individual Mappings: owl:NamedIndividual","title":"Other properties"},{"location":"LogicalAxiomChange/","text":"Class: LogicalAxiomChange A simple change where a logical axiom is changed, where the logical axiom cannot be represented as an edge URI: kgcl:LogicalAxiomChange Parents is_a: SimpleChange - A change that is about a single ontology element Attributes Inherited from simple change: about OPT Description: The 'focus' entity on which the change operates range: String change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: LogicalAxiomChange"},{"location":"LogicalAxiomChange/#class-logicalaxiomchange","text":"A simple change where a logical axiom is changed, where the logical axiom cannot be represented as an edge URI: kgcl:LogicalAxiomChange","title":"Class: LogicalAxiomChange"},{"location":"LogicalAxiomChange/#parents","text":"is_a: SimpleChange - A change that is about a single ontology element","title":"Parents"},{"location":"LogicalAxiomChange/#attributes","text":"","title":"Attributes"},{"location":"LogicalAxiomChange/#inherited-from-simple-change","text":"about OPT Description: The 'focus' entity on which the change operates range: String change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from simple change:"},{"location":"LogicalDefinition/","text":"Class: LogicalDefinition URI: kgcl:LogicalDefinition Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Attributes","title":"Class: LogicalDefinition"},{"location":"LogicalDefinition/#class-logicaldefinition","text":"URI: kgcl:LogicalDefinition","title":"Class: LogicalDefinition"},{"location":"LogicalDefinition/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"LogicalDefinition/#attributes","text":"","title":"Attributes"},{"location":"MultiNodeObsoletion/","text":"Class: MultiNodeObsoletion A complex change consisting of multiple obsoletions. URI: kgcl:MultiNodeObsoletion Parents is_a: ComplexChange - A change that is is a composition of other changes Referenced by class Attributes Own multi node obsoletion\u279eassociated change set 0..* Description: All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D range: Change multi node obsoletion\u279echange description OPT range: String multi node obsoletion\u279echange set 0..* range: NodeObsoletion Inherited from complex change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String Other properties Aliases: multi node deprecation multi class obsoletion multi term obsoletion multi concept obsoletion See also: https://github.com/cmungall/obo-scripts/blob/master/obo-obsoletify.pl","title":"Class: MultiNodeObsoletion"},{"location":"MultiNodeObsoletion/#class-multinodeobsoletion","text":"A complex change consisting of multiple obsoletions. URI: kgcl:MultiNodeObsoletion","title":"Class: MultiNodeObsoletion"},{"location":"MultiNodeObsoletion/#parents","text":"is_a: ComplexChange - A change that is is a composition of other changes","title":"Parents"},{"location":"MultiNodeObsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"MultiNodeObsoletion/#attributes","text":"","title":"Attributes"},{"location":"MultiNodeObsoletion/#own","text":"multi node obsoletion\u279eassociated change set 0..* Description: All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D range: Change multi node obsoletion\u279echange description OPT range: String multi node obsoletion\u279echange set 0..* range: NodeObsoletion","title":"Own"},{"location":"MultiNodeObsoletion/#inherited-from-complex-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String","title":"Inherited from complex change:"},{"location":"MultiNodeObsoletion/#other-properties","text":"Aliases: multi node deprecation multi class obsoletion multi term obsoletion multi concept obsoletion See also: https://github.com/cmungall/obo-scripts/blob/master/obo-obsoletify.pl","title":"Other properties"},{"location":"NameBecomesSynonym/","text":"Class: NameBecomesSynonym A node synonym where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym URI: kgcl:NameBecomesSynonym Parents is_a: NodeSynonymChange Referenced by class Attributes Own name becomes synonym\u279echange 1 OPT range: NodeRename name becomes synonym\u279echange 2 OPT range: NewSynonym name becomes synonym\u279echange description OPT range: String Inherited from node synonym change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NameBecomesSynonym"},{"location":"NameBecomesSynonym/#class-namebecomessynonym","text":"A node synonym where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym URI: kgcl:NameBecomesSynonym","title":"Class: NameBecomesSynonym"},{"location":"NameBecomesSynonym/#parents","text":"is_a: NodeSynonymChange","title":"Parents"},{"location":"NameBecomesSynonym/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NameBecomesSynonym/#attributes","text":"","title":"Attributes"},{"location":"NameBecomesSynonym/#own","text":"name becomes synonym\u279echange 1 OPT range: NodeRename name becomes synonym\u279echange 2 OPT range: NewSynonym name becomes synonym\u279echange description OPT range: String","title":"Own"},{"location":"NameBecomesSynonym/#inherited-from-node-synonym-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node synonym change:"},{"location":"NewSynonym/","text":"Class: NewSynonym A node synonym change where a de-novo synonym is created URI: kgcl:NewSynonym Parents is_a: NodeSynonymChange Referenced by class None change 2 OPT NewSynonym NameBecomesSynonym name becomes synonym\u279echange 2 OPT NewSynonym Attributes Own new value OPT Description: The value of a property held in the new instance of the ontology range: String Inherited from node synonym change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NewSynonym"},{"location":"NewSynonym/#class-newsynonym","text":"A node synonym change where a de-novo synonym is created URI: kgcl:NewSynonym","title":"Class: NewSynonym"},{"location":"NewSynonym/#parents","text":"is_a: NodeSynonymChange","title":"Parents"},{"location":"NewSynonym/#referenced-by-class","text":"None change 2 OPT NewSynonym NameBecomesSynonym name becomes synonym\u279echange 2 OPT NewSynonym","title":"Referenced by class"},{"location":"NewSynonym/#attributes","text":"","title":"Attributes"},{"location":"NewSynonym/#own","text":"new value OPT Description: The value of a property held in the new instance of the ontology range: String","title":"Own"},{"location":"NewSynonym/#inherited-from-node-synonym-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node synonym change:"},{"location":"NewTextDefinition/","text":"Class: NewTextDefinition A node change where a de-novo text definition is created URI: kgcl:NewTextDefinition Parents is_a: NodeTextDefinitionChange - A node change where the text definition is changed Attributes Own new value OPT Description: The value of a property held in the new instance of the ontology range: String Inherited from node text definition change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NewTextDefinition"},{"location":"NewTextDefinition/#class-newtextdefinition","text":"A node change where a de-novo text definition is created URI: kgcl:NewTextDefinition","title":"Class: NewTextDefinition"},{"location":"NewTextDefinition/#parents","text":"is_a: NodeTextDefinitionChange - A node change where the text definition is changed","title":"Parents"},{"location":"NewTextDefinition/#attributes","text":"","title":"Attributes"},{"location":"NewTextDefinition/#own","text":"new value OPT Description: The value of a property held in the new instance of the ontology range: String","title":"Own"},{"location":"NewTextDefinition/#inherited-from-node-text-definition-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node text definition change:"},{"location":"Node/","text":"Class: Node Any named entity in an ontology. May be a class, individual, property URI: kgcl:Node Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Children ClassNode - A node that is a class InstanceNode - A node that is an individual Referenced by class None consider OPT Node EdgeChange edge change\u279esubject OPT Node None has direct replacement OPT Node None has nondirect replacement 0.. Node * NodeObsoletion has replacement OPT Node NodeDirectMerge node direct merge\u279ehas direct replacement REQ Node None node id OPT Node NodeObsoletionWithDirectReplacement node obsoletion with direct replacement\u279ehas direct replacement REQ Node NodeObsoletionWithNoDirectReplacement node obsoletion with no direct replacement\u279ehas nondirect replacement 1.. Node * NodeUnobsoletion node unobsoletion\u279econsider OPT Node NodeUnobsoletion node unobsoletion\u279ereplaced by OPT Node None object OPT Node None predicate OPT Node None property OPT Node None replaced by OPT Node None subject OPT Node None superclass OPT Node Attributes Own annotation set OPT range: Annotation id REQ range: String name OPT range: String owl type OPT range: owl_type_enum Other properties Aliases: entity term","title":"Class: Node"},{"location":"Node/#class-node","text":"Any named entity in an ontology. May be a class, individual, property URI: kgcl:Node","title":"Class: Node"},{"location":"Node/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"Node/#children","text":"ClassNode - A node that is a class InstanceNode - A node that is an individual","title":"Children"},{"location":"Node/#referenced-by-class","text":"None consider OPT Node EdgeChange edge change\u279esubject OPT Node None has direct replacement OPT Node None has nondirect replacement 0.. Node * NodeObsoletion has replacement OPT Node NodeDirectMerge node direct merge\u279ehas direct replacement REQ Node None node id OPT Node NodeObsoletionWithDirectReplacement node obsoletion with direct replacement\u279ehas direct replacement REQ Node NodeObsoletionWithNoDirectReplacement node obsoletion with no direct replacement\u279ehas nondirect replacement 1.. Node * NodeUnobsoletion node unobsoletion\u279econsider OPT Node NodeUnobsoletion node unobsoletion\u279ereplaced by OPT Node None object OPT Node None predicate OPT Node None property OPT Node None replaced by OPT Node None subject OPT Node None superclass OPT Node","title":"Referenced by class"},{"location":"Node/#attributes","text":"","title":"Attributes"},{"location":"Node/#own","text":"annotation set OPT range: Annotation id REQ range: String name OPT range: String owl type OPT range: owl_type_enum","title":"Own"},{"location":"Node/#other-properties","text":"Aliases: entity term","title":"Other properties"},{"location":"NodeAnnotationChange/","text":"Class: NodeAnnotationChange A node change where the change alters node properties/annotations. TODO URI: kgcl:NodeAnnotationChange Parents is_a: NodeChange - A simple change where the change is about a node Children NodeAnnotationReplacement - A node annotation change where the change replaces a particular property value. TODO Referenced by class Attributes Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NodeAnnotationChange"},{"location":"NodeAnnotationChange/#class-nodeannotationchange","text":"A node change where the change alters node properties/annotations. TODO URI: kgcl:NodeAnnotationChange","title":"Class: NodeAnnotationChange"},{"location":"NodeAnnotationChange/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeAnnotationChange/#children","text":"NodeAnnotationReplacement - A node annotation change where the change replaces a particular property value. TODO","title":"Children"},{"location":"NodeAnnotationChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeAnnotationChange/#attributes","text":"","title":"Attributes"},{"location":"NodeAnnotationChange/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"NodeAnnotationReplacement/","text":"Class: NodeAnnotationReplacement A node annotation change where the change replaces a particular property value. TODO URI: kgcl:NodeAnnotationReplacement Parents is_a: NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO Attributes Inherited from node annotation change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NodeAnnotationReplacement"},{"location":"NodeAnnotationReplacement/#class-nodeannotationreplacement","text":"A node annotation change where the change replaces a particular property value. TODO URI: kgcl:NodeAnnotationReplacement","title":"Class: NodeAnnotationReplacement"},{"location":"NodeAnnotationReplacement/#parents","text":"is_a: NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO","title":"Parents"},{"location":"NodeAnnotationReplacement/#attributes","text":"","title":"Attributes"},{"location":"NodeAnnotationReplacement/#inherited-from-node-annotation-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node annotation change:"},{"location":"NodeChange/","text":"Class: NodeChange A simple change where the change is about a node URI: kgcl:NodeChange Parents is_a: SimpleChange - A change that is about a single ontology element Children AddNodeToSubset - Places a node inside a subset, by annotating that node NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO NodeCreation - a node change in which a new node is created NodeDeletion - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. NodeRename - A node change where the name (aka rdfs:label) of the node changes NodeSynonymChange NodeTextDefinitionChange - A node change where the text definition is changed NodeUnobsoletion - unobsoletion of a node deprecates usage of that node. Rarely applied. RemovedNodeFromSubset - Removes a node from a subset, by removing an annotation Referenced by class Attributes Own node change\u279eabout OPT range: String Inherited from simple change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NodeChange"},{"location":"NodeChange/#class-nodechange","text":"A simple change where the change is about a node URI: kgcl:NodeChange","title":"Class: NodeChange"},{"location":"NodeChange/#parents","text":"is_a: SimpleChange - A change that is about a single ontology element","title":"Parents"},{"location":"NodeChange/#children","text":"AddNodeToSubset - Places a node inside a subset, by annotating that node NodeAnnotationChange - A node change where the change alters node properties/annotations. TODO NodeCreation - a node change in which a new node is created NodeDeletion - Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. NodeRename - A node change where the name (aka rdfs:label) of the node changes NodeSynonymChange NodeTextDefinitionChange - A node change where the text definition is changed NodeUnobsoletion - unobsoletion of a node deprecates usage of that node. Rarely applied. RemovedNodeFromSubset - Removes a node from a subset, by removing an annotation","title":"Children"},{"location":"NodeChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeChange/#attributes","text":"","title":"Attributes"},{"location":"NodeChange/#own","text":"node change\u279eabout OPT range: String","title":"Own"},{"location":"NodeChange/#inherited-from-simple-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from simple change:"},{"location":"NodeCreation/","text":"Class: NodeCreation a node change in which a new node is created URI: kgcl:NodeCreation Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: Creation - Creation of an element. Children ClassCreation - A node creation where the owl type is 'class' Referenced by class Attributes Own annotation set OPT range: Annotation name OPT range: String node creation\u279echange description OPT range: String node id OPT Description: id of a node to be created range: Node owl type OPT range: owl_type_enum Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties See also: http://wiki.geneontology.org/index.php/Guidelines_for_creating_a_GO_term","title":"Class: NodeCreation"},{"location":"NodeCreation/#class-nodecreation","text":"a node change in which a new node is created URI: kgcl:NodeCreation","title":"Class: NodeCreation"},{"location":"NodeCreation/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeCreation/#uses-mixins","text":"mixin: Creation - Creation of an element.","title":"Uses Mixins"},{"location":"NodeCreation/#children","text":"ClassCreation - A node creation where the owl type is 'class'","title":"Children"},{"location":"NodeCreation/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeCreation/#attributes","text":"","title":"Attributes"},{"location":"NodeCreation/#own","text":"annotation set OPT range: Annotation name OPT range: String node creation\u279echange description OPT range: String node id OPT Description: id of a node to be created range: Node owl type OPT range: owl_type_enum","title":"Own"},{"location":"NodeCreation/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"NodeCreation/#other-properties","text":"See also: http://wiki.geneontology.org/index.php/Guidelines_for_creating_a_GO_term","title":"Other properties"},{"location":"NodeDeepening/","text":"Class: NodeDeepening A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any predicate in the relational graph URI: kgcl:NodeDeepening Parents is_a: NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes Referenced by class Attributes Own node deepening\u279echange description OPT range: String Inherited from node move: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Examples: Example(value='changing a is-a b to a is-a c, where c is a subclass of b', description=None)","title":"Class: NodeDeepening"},{"location":"NodeDeepening/#class-nodedeepening","text":"A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any predicate in the relational graph URI: kgcl:NodeDeepening","title":"Class: NodeDeepening"},{"location":"NodeDeepening/#parents","text":"is_a: NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes","title":"Parents"},{"location":"NodeDeepening/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeDeepening/#attributes","text":"","title":"Attributes"},{"location":"NodeDeepening/#own","text":"node deepening\u279echange description OPT range: String","title":"Own"},{"location":"NodeDeepening/#inherited-from-node-move","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node move:"},{"location":"NodeDeepening/#other-properties","text":"Examples: Example(value='changing a is-a b to a is-a c, where c is a subclass of b', description=None)","title":"Other properties"},{"location":"NodeDeletion/","text":"Class: NodeDeletion Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise URI: kgcl:NodeDeletion Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: Deletion - Removal of an element. Referenced by class Attributes Own node deletion\u279echange description OPT range: String Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NodeDeletion"},{"location":"NodeDeletion/#class-nodedeletion","text":"Deletion of a node from the graph. Note it is recommended nodes are obsoleted and never merged, but this operation exists to represent deletions in ontologies, accidental or otherwise URI: kgcl:NodeDeletion","title":"Class: NodeDeletion"},{"location":"NodeDeletion/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeDeletion/#uses-mixins","text":"mixin: Deletion - Removal of an element.","title":"Uses Mixins"},{"location":"NodeDeletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeDeletion/#attributes","text":"","title":"Attributes"},{"location":"NodeDeletion/#own","text":"node deletion\u279echange description OPT range: String","title":"Own"},{"location":"NodeDeletion/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"NodeDirectMerge/","text":"Class: NodeDirectMerge An obsoletion change in which all metadata (including name/label) from the source node is deleted and added to the target node, and edges can automatically be rewired to point to the target node URI: kgcl:NodeDirectMerge Parents is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. Uses Mixins mixin: AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target Referenced by class Attributes Own node direct merge\u279eabout OPT range: String node direct merge\u279echange description OPT range: String node direct merge\u279ehas direct replacement REQ range: Node Inherited from node obsoletion: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has nondirect replacement 0..* Description: An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Comments: In the OBO format serialization of the graph, the source node vanishes from the file as a distinct entry and is retained only as an alt_id See also: http://wiki.geneontology.org/index.php/Merging_Ontology_Terms http://wiki.geneontology.org/index.php/Principles_for_merging_terms","title":"Class: NodeDirectMerge"},{"location":"NodeDirectMerge/#class-nodedirectmerge","text":"An obsoletion change in which all metadata (including name/label) from the source node is deleted and added to the target node, and edges can automatically be rewired to point to the target node URI: kgcl:NodeDirectMerge","title":"Class: NodeDirectMerge"},{"location":"NodeDirectMerge/#parents","text":"is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Parents"},{"location":"NodeDirectMerge/#uses-mixins","text":"mixin: AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target","title":"Uses Mixins"},{"location":"NodeDirectMerge/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeDirectMerge/#attributes","text":"","title":"Attributes"},{"location":"NodeDirectMerge/#own","text":"node direct merge\u279eabout OPT range: String node direct merge\u279echange description OPT range: String node direct merge\u279ehas direct replacement REQ range: Node","title":"Own"},{"location":"NodeDirectMerge/#inherited-from-node-obsoletion","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has nondirect replacement 0..* Description: An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node obsoletion:"},{"location":"NodeDirectMerge/#other-properties","text":"Comments: In the OBO format serialization of the graph, the source node vanishes from the file as a distinct entry and is retained only as an alt_id See also: http://wiki.geneontology.org/index.php/Merging_Ontology_Terms http://wiki.geneontology.org/index.php/Principles_for_merging_terms","title":"Other properties"},{"location":"NodeMove/","text":"Class: NodeMove A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes URI: kgcl:NodeMove Parents is_a: EdgeChange - A change in which the element that is the focus of the change is an edge. Children NodeDeepening - A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any predicate in the relational graph NodeShallowing - The opposite of node deepening Referenced by class Attributes Own node move\u279echange description OPT range: String Inherited from edge change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Examples: Example(value='changing a is-a b to a is-a c', description=None)","title":"Class: NodeMove"},{"location":"NodeMove/#class-nodemove","text":"A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes URI: kgcl:NodeMove","title":"Class: NodeMove"},{"location":"NodeMove/#parents","text":"is_a: EdgeChange - A change in which the element that is the focus of the change is an edge.","title":"Parents"},{"location":"NodeMove/#children","text":"NodeDeepening - A node move in which a node where the destination is a proper descendant of the original location. Note that here descendant applied not just to subclass, but edges of any predicate in the relational graph NodeShallowing - The opposite of node deepening","title":"Children"},{"location":"NodeMove/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeMove/#attributes","text":"","title":"Attributes"},{"location":"NodeMove/#own","text":"node move\u279echange description OPT range: String","title":"Own"},{"location":"NodeMove/#inherited-from-edge-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from edge change:"},{"location":"NodeMove/#other-properties","text":"Examples: Example(value='changing a is-a b to a is-a c', description=None)","title":"Other properties"},{"location":"NodeObsoletion/","text":"Class: NodeObsoletion Obsoletion of a node deprecates usage of that node, but does not delete it. URI: kgcl:NodeObsoletion Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element. Children NodeDirectMerge - An obsoletion change in which all metadata (including name/label) from the source node is deleted and added to the target node, and edges can automatically be rewired to point to the target node NodeObsoletionWithDirectReplacement - An obsoletion change in which information from the obsoleted node is selectively copied to a single target, and edges can automatically be rewired to point to the target node NodeObsoletionWithNoDirectReplacement - An obsoletion change in which there is no direct replacement Referenced by class MultiNodeObsoletion multi node obsoletion\u279echange set 0.. NodeObsoletion * Attributes Own has direct replacement OPT Description: An obsoletion replacement where it IS valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node has nondirect replacement 0..* Description: An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279echange description OPT range: String Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Aliases: node deprecation class obsoletion term obsoletion concept obsoletion See also: http://wiki.geneontology.org/index.php/Obsoleting_an_Existing_Ontology_Term","title":"Class: NodeObsoletion"},{"location":"NodeObsoletion/#class-nodeobsoletion","text":"Obsoletion of a node deprecates usage of that node, but does not delete it. URI: kgcl:NodeObsoletion","title":"Class: NodeObsoletion"},{"location":"NodeObsoletion/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeObsoletion/#uses-mixins","text":"mixin: Obsoletion - Obsoletion of an element deprecates usage of that element, but does not delete that element.","title":"Uses Mixins"},{"location":"NodeObsoletion/#children","text":"NodeDirectMerge - An obsoletion change in which all metadata (including name/label) from the source node is deleted and added to the target node, and edges can automatically be rewired to point to the target node NodeObsoletionWithDirectReplacement - An obsoletion change in which information from the obsoleted node is selectively copied to a single target, and edges can automatically be rewired to point to the target node NodeObsoletionWithNoDirectReplacement - An obsoletion change in which there is no direct replacement","title":"Children"},{"location":"NodeObsoletion/#referenced-by-class","text":"MultiNodeObsoletion multi node obsoletion\u279echange set 0.. NodeObsoletion *","title":"Referenced by class"},{"location":"NodeObsoletion/#attributes","text":"","title":"Attributes"},{"location":"NodeObsoletion/#own","text":"has direct replacement OPT Description: An obsoletion replacement where it IS valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node has nondirect replacement 0..* Description: An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279echange description OPT range: String","title":"Own"},{"location":"NodeObsoletion/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"NodeObsoletion/#other-properties","text":"Aliases: node deprecation class obsoletion term obsoletion concept obsoletion See also: http://wiki.geneontology.org/index.php/Obsoleting_an_Existing_Ontology_Term","title":"Other properties"},{"location":"NodeObsoletionWithDirectReplacement/","text":"Class: NodeObsoletionWithDirectReplacement An obsoletion change in which information from the obsoleted node is selectively copied to a single target, and edges can automatically be rewired to point to the target node URI: kgcl:NodeObsoletionWithDirectReplacement Parents is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. Uses Mixins mixin: AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target Referenced by class Attributes Own node obsoletion with direct replacement\u279echange description OPT range: String node obsoletion with direct replacement\u279ehas direct replacement REQ range: Node Inherited from node obsoletion: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has nondirect replacement 0..* Description: An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties See also: http://wiki.geneontology.org/index.php/Merging_Ontology_Terms http://wiki.geneontology.org/index.php/Principles_for_merging_terms","title":"Class: NodeObsoletionWithDirectReplacement"},{"location":"NodeObsoletionWithDirectReplacement/#class-nodeobsoletionwithdirectreplacement","text":"An obsoletion change in which information from the obsoleted node is selectively copied to a single target, and edges can automatically be rewired to point to the target node URI: kgcl:NodeObsoletionWithDirectReplacement","title":"Class: NodeObsoletionWithDirectReplacement"},{"location":"NodeObsoletionWithDirectReplacement/#parents","text":"is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Parents"},{"location":"NodeObsoletionWithDirectReplacement/#uses-mixins","text":"mixin: AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target","title":"Uses Mixins"},{"location":"NodeObsoletionWithDirectReplacement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeObsoletionWithDirectReplacement/#attributes","text":"","title":"Attributes"},{"location":"NodeObsoletionWithDirectReplacement/#own","text":"node obsoletion with direct replacement\u279echange description OPT range: String node obsoletion with direct replacement\u279ehas direct replacement REQ range: Node","title":"Own"},{"location":"NodeObsoletionWithDirectReplacement/#inherited-from-node-obsoletion","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has nondirect replacement 0..* Description: An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node obsoletion:"},{"location":"NodeObsoletionWithDirectReplacement/#other-properties","text":"See also: http://wiki.geneontology.org/index.php/Merging_Ontology_Terms http://wiki.geneontology.org/index.php/Principles_for_merging_terms","title":"Other properties"},{"location":"NodeObsoletionWithMerge/","text":"Class: NodeObsoletionWithMerge An obsoletion change in which information from the obsoleted node is moved to a single target. URI: kgcl:NodeObsoletionWithMerge Parents is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. Referenced by class Attributes Own node obsoletion with merge\u279eabout OPT range: String node obsoletion with merge\u279echange description OPT range: String node obsoletion with merge\u279etarget OPT range: String Inherited from node obsoletion: new value OPT Description: The value of a property held in the old instance of the ontology range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity Other properties See also: http://wiki.geneontology.org/index.php/Merging_Ontology_Terms http://wiki.geneontology.org/index.php/Principles_for_merging_terms","title":"Class: NodeObsoletionWithMerge"},{"location":"NodeObsoletionWithMerge/#class-nodeobsoletionwithmerge","text":"An obsoletion change in which information from the obsoleted node is moved to a single target. URI: kgcl:NodeObsoletionWithMerge","title":"Class: NodeObsoletionWithMerge"},{"location":"NodeObsoletionWithMerge/#parents","text":"is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Parents"},{"location":"NodeObsoletionWithMerge/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeObsoletionWithMerge/#attributes","text":"","title":"Attributes"},{"location":"NodeObsoletionWithMerge/#own","text":"node obsoletion with merge\u279eabout OPT range: String node obsoletion with merge\u279echange description OPT range: String node obsoletion with merge\u279etarget OPT range: String","title":"Own"},{"location":"NodeObsoletionWithMerge/#inherited-from-node-obsoletion","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node obsoletion:"},{"location":"NodeObsoletionWithMerge/#other-properties","text":"See also: http://wiki.geneontology.org/index.php/Merging_Ontology_Terms http://wiki.geneontology.org/index.php/Principles_for_merging_terms","title":"Other properties"},{"location":"NodeObsoletionWithNoDirectReplacement/","text":"Class: NodeObsoletionWithNoDirectReplacement An obsoletion change in which there is no direct replacement URI: kgcl:NodeObsoletionWithNoDirectReplacement Parents is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. Referenced by class Attributes Own node obsoletion with no direct replacement\u279echange description OPT range: String node obsoletion with no direct replacement\u279ehas nondirect replacement 1..* range: Node Inherited from node obsoletion: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has direct replacement OPT Description: An obsoletion replacement where it IS valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NodeObsoletionWithNoDirectReplacement"},{"location":"NodeObsoletionWithNoDirectReplacement/#class-nodeobsoletionwithnodirectreplacement","text":"An obsoletion change in which there is no direct replacement URI: kgcl:NodeObsoletionWithNoDirectReplacement","title":"Class: NodeObsoletionWithNoDirectReplacement"},{"location":"NodeObsoletionWithNoDirectReplacement/#parents","text":"is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Parents"},{"location":"NodeObsoletionWithNoDirectReplacement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeObsoletionWithNoDirectReplacement/#attributes","text":"","title":"Attributes"},{"location":"NodeObsoletionWithNoDirectReplacement/#own","text":"node obsoletion with no direct replacement\u279echange description OPT range: String node obsoletion with no direct replacement\u279ehas nondirect replacement 1..* range: Node","title":"Own"},{"location":"NodeObsoletionWithNoDirectReplacement/#inherited-from-node-obsoletion","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has direct replacement OPT Description: An obsoletion replacement where it IS valid to automatically update annotations/edges pointing at the node with its direct replacement range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node obsoletion:"},{"location":"NodeObsoletionWithSplit/","text":"Class: NodeObsoletionWithSplit An obsoletion change in which information from the obsoleted node is moved selectively to multiple targets URI: kgcl:NodeObsoletionWithSplit Parents is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it. Referenced by class Attributes Own node obsoletion with split\u279echange description OPT range: String node obsoletion with split\u279etarget 0..* range: String Inherited from node obsoletion: new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Class: NodeObsoletionWithSplit"},{"location":"NodeObsoletionWithSplit/#class-nodeobsoletionwithsplit","text":"An obsoletion change in which information from the obsoleted node is moved selectively to multiple targets URI: kgcl:NodeObsoletionWithSplit","title":"Class: NodeObsoletionWithSplit"},{"location":"NodeObsoletionWithSplit/#parents","text":"is_a: NodeObsoletion - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Parents"},{"location":"NodeObsoletionWithSplit/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeObsoletionWithSplit/#attributes","text":"","title":"Attributes"},{"location":"NodeObsoletionWithSplit/#own","text":"node obsoletion with split\u279echange description OPT range: String node obsoletion with split\u279etarget 0..* range: String","title":"Own"},{"location":"NodeObsoletionWithSplit/#inherited-from-node-obsoletion","text":"new value OPT Description: The value of a property held in the old instance of the ontology range: String node change\u279eabout OPT range: String node obsoletion\u279eassociated change set 0..* Description: All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere range: Change node obsoletion\u279econsider OPT range: Node node obsoletion\u279ereplaced by OPT Description: When this is present, the node obsoletion MAY be associated with automated rewiring changes range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String was generated by OPT range: Activity","title":"Inherited from node obsoletion:"},{"location":"NodeRename/","text":"Class: NodeRename A node change where the name (aka rdfs:label) of the node changes URI: kgcl:NodeRename Parents is_a: NodeChange - A simple change where the change is about a node Referenced by class None change 1 OPT NodeRename NameBecomesSynonym name becomes synonym\u279echange 1 OPT NodeRename Attributes Own has textual diff OPT Description: A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. range: TextualDiff node rename\u279echange description OPT range: String node rename\u279enew value OPT range: String node rename\u279eold value OPT range: String Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String Other properties Examples: Example(value=\"rename UBERON:0002398 from 'manus' to 'hand'\", description=\"replacing the rdfs:label of 'manus' on an uberon class with the rdfs:label 'hand'\")","title":"Class: NodeRename"},{"location":"NodeRename/#class-noderename","text":"A node change where the name (aka rdfs:label) of the node changes URI: kgcl:NodeRename","title":"Class: NodeRename"},{"location":"NodeRename/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeRename/#referenced-by-class","text":"None change 1 OPT NodeRename NameBecomesSynonym name becomes synonym\u279echange 1 OPT NodeRename","title":"Referenced by class"},{"location":"NodeRename/#attributes","text":"","title":"Attributes"},{"location":"NodeRename/#own","text":"has textual diff OPT Description: A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. range: TextualDiff node rename\u279echange description OPT range: String node rename\u279enew value OPT range: String node rename\u279eold value OPT range: String","title":"Own"},{"location":"NodeRename/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String","title":"Inherited from node change:"},{"location":"NodeRename/#other-properties","text":"Examples: Example(value=\"rename UBERON:0002398 from 'manus' to 'hand'\", description=\"replacing the rdfs:label of 'manus' on an uberon class with the rdfs:label 'hand'\")","title":"Other properties"},{"location":"NodeShallowing/","text":"Class: NodeShallowing The opposite of node deepening URI: kgcl:NodeShallowing Parents is_a: NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes Referenced by class Attributes Own node shallowing\u279echange description OPT range: String Inherited from node move: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Examples: Example(value='changing a is-a c to a is-a b, where c is a subclass of b', description=None)","title":"Class: NodeShallowing"},{"location":"NodeShallowing/#class-nodeshallowing","text":"The opposite of node deepening URI: kgcl:NodeShallowing","title":"Class: NodeShallowing"},{"location":"NodeShallowing/#parents","text":"is_a: NodeMove - A node move is a combination of deleting a parent edge and adding a parent edge, where the predicate is preserved and the object/parent node changes","title":"Parents"},{"location":"NodeShallowing/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeShallowing/#attributes","text":"","title":"Attributes"},{"location":"NodeShallowing/#own","text":"node shallowing\u279echange description OPT range: String","title":"Own"},{"location":"NodeShallowing/#inherited-from-node-move","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node move:"},{"location":"NodeShallowing/#other-properties","text":"Examples: Example(value='changing a is-a c to a is-a b, where c is a subclass of b', description=None)","title":"Other properties"},{"location":"NodeSynonymChange/","text":"Class: NodeSynonymChange URI: kgcl:NodeSynonymChange Parents is_a: NodeChange - A simple change where the change is about a node Children NameBecomesSynonym - A node synonym where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym NewSynonym - A node synonym change where a de-novo synonym is created RemoveSynonym - A node synonym change where a synonym is deleted SynonymPredicateChange - A node synonym change where the predicate of a synonym is changed. Background: synonyms can be represented by a variety of predicates. For example, many OBO ontologies make use of predicates such as oio:hasExactSynonym, oio:hasRelatedSynonym, etc SynonymReplacement - A node synonym change where the text of a synonym is changed Referenced by class Attributes Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NodeSynonymChange"},{"location":"NodeSynonymChange/#class-nodesynonymchange","text":"URI: kgcl:NodeSynonymChange","title":"Class: NodeSynonymChange"},{"location":"NodeSynonymChange/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeSynonymChange/#children","text":"NameBecomesSynonym - A node synonym where the name NAME of an node NODE moves to a synonym, and NODE receives a new name. This change consists of compose of (1) a node rename where NAME is replaced by a different name (2) a new synonym NewSynonym - A node synonym change where a de-novo synonym is created RemoveSynonym - A node synonym change where a synonym is deleted SynonymPredicateChange - A node synonym change where the predicate of a synonym is changed. Background: synonyms can be represented by a variety of predicates. For example, many OBO ontologies make use of predicates such as oio:hasExactSynonym, oio:hasRelatedSynonym, etc SynonymReplacement - A node synonym change where the text of a synonym is changed","title":"Children"},{"location":"NodeSynonymChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeSynonymChange/#attributes","text":"","title":"Attributes"},{"location":"NodeSynonymChange/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"NodeTextDefinitionChange/","text":"Class: NodeTextDefinitionChange A node change where the text definition is changed URI: kgcl:NodeTextDefinitionChange Parents is_a: NodeChange - A simple change where the change is about a node Children NewTextDefinition - A node change where a de-novo text definition is created RemoveTextDefinition - A node change where a text definition is deleted TextDefinitionReplacement - A node change where a text definition is modified Referenced by class Attributes Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Class: NodeTextDefinitionChange"},{"location":"NodeTextDefinitionChange/#class-nodetextdefinitionchange","text":"A node change where the text definition is changed URI: kgcl:NodeTextDefinitionChange","title":"Class: NodeTextDefinitionChange"},{"location":"NodeTextDefinitionChange/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeTextDefinitionChange/#children","text":"NewTextDefinition - A node change where a de-novo text definition is created RemoveTextDefinition - A node change where a text definition is deleted TextDefinitionReplacement - A node change where a text definition is modified","title":"Children"},{"location":"NodeTextDefinitionChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeTextDefinitionChange/#attributes","text":"","title":"Attributes"},{"location":"NodeTextDefinitionChange/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"NodeUnobsoletion/","text":"Class: NodeUnobsoletion unobsoletion of a node deprecates usage of that node. Rarely applied. URI: kgcl:NodeUnobsoletion Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: Unobsoletion - Opposite operation of obsoletion. Rarely performed. Referenced by class Attributes Own node unobsoletion\u279echange description OPT range: String node unobsoletion\u279econsider OPT range: Node node unobsoletion\u279ereplaced by OPT range: Node Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Aliases: node undeprecation class unobsoletion term unobsoletion concept unobsoletion See also: http://wiki.geneontology.org/index.php/Restoring_an_Obsolete_Ontology_Term","title":"Class: NodeUnobsoletion"},{"location":"NodeUnobsoletion/#class-nodeunobsoletion","text":"unobsoletion of a node deprecates usage of that node. Rarely applied. URI: kgcl:NodeUnobsoletion","title":"Class: NodeUnobsoletion"},{"location":"NodeUnobsoletion/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"NodeUnobsoletion/#uses-mixins","text":"mixin: Unobsoletion - Opposite operation of obsoletion. Rarely performed.","title":"Uses Mixins"},{"location":"NodeUnobsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeUnobsoletion/#attributes","text":"","title":"Attributes"},{"location":"NodeUnobsoletion/#own","text":"node unobsoletion\u279echange description OPT range: String node unobsoletion\u279econsider OPT range: Node node unobsoletion\u279ereplaced by OPT range: Node","title":"Own"},{"location":"NodeUnobsoletion/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"NodeUnobsoletion/#other-properties","text":"Aliases: node undeprecation class unobsoletion term unobsoletion concept unobsoletion See also: http://wiki.geneontology.org/index.php/Restoring_an_Obsolete_Ontology_Term","title":"Other properties"},{"location":"Obsoletion/","text":"Class: Obsoletion Obsoletion of an element deprecates usage of that element, but does not delete that element. URI: kgcl:Obsoletion Parents is_a: ChangeMixin - root class for all change mixins Children AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target Mixin for EdgeObsoletion (mixin) - An edge change in which an edge is obsoleted. NodeObsoletion (mixin) - Obsoletion of a node deprecates usage of that node, but does not delete it. Referenced by class Obsoletion obsoletion\u279ehas undo OPT Obsoletion Unobsoletion unobsoletion\u279ehas undo OPT Obsoletion Attributes Own obsoletion\u279eabout OPT Description: The element that is obsoleted by this change. range: String obsoletion\u279ehas undo OPT range: Obsoletion Other properties Aliases: deprecation retiring Comments: In OWL, deprecation is handled by the deprecation axiom. In OBO, we use this, but place additional requirements and expectations on obsolete elements See also: http://wiki.geneontology.org/index.php/Obsoleting_an_Existing_Ontology_Term https://mondo.readthedocs.io/en/latest/editors-guide/merging-and-obsoleting/","title":"Class: Obsoletion"},{"location":"Obsoletion/#class-obsoletion","text":"Obsoletion of an element deprecates usage of that element, but does not delete that element. URI: kgcl:Obsoletion","title":"Class: Obsoletion"},{"location":"Obsoletion/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"Obsoletion/#children","text":"AllowsAutomaticReplacementOfEdges - Applies to an obsoletion in which annotations or edges pointing at the obsoleted node can be automatically rewired to point to a target","title":"Children"},{"location":"Obsoletion/#mixin-for","text":"EdgeObsoletion (mixin) - An edge change in which an edge is obsoleted. NodeObsoletion (mixin) - Obsoletion of a node deprecates usage of that node, but does not delete it.","title":"Mixin for"},{"location":"Obsoletion/#referenced-by-class","text":"Obsoletion obsoletion\u279ehas undo OPT Obsoletion Unobsoletion unobsoletion\u279ehas undo OPT Obsoletion","title":"Referenced by class"},{"location":"Obsoletion/#attributes","text":"","title":"Attributes"},{"location":"Obsoletion/#own","text":"obsoletion\u279eabout OPT Description: The element that is obsoleted by this change. range: String obsoletion\u279ehas undo OPT range: Obsoletion","title":"Own"},{"location":"Obsoletion/#other-properties","text":"Aliases: deprecation retiring Comments: In OWL, deprecation is handled by the deprecation axiom. In OBO, we use this, but place additional requirements and expectations on obsolete elements See also: http://wiki.geneontology.org/index.php/Obsoleting_an_Existing_Ontology_Term https://mondo.readthedocs.io/en/latest/editors-guide/merging-and-obsoleting/","title":"Other properties"},{"location":"OntologyElement/","text":"Class: OntologyElement Any component of an ontology or knowledge graph URI: kgcl:OntologyElement Children Edge - A relationship between two nodes. We assume owlstar or similar for existential restrictions LogicalDefinition Node - Any named entity in an ontology. May be a class, individual, property OntologySubset PropertyValue - a property-value pair Referenced by class Attributes Other properties Aliases: entity","title":"Class: OntologyElement"},{"location":"OntologyElement/#class-ontologyelement","text":"Any component of an ontology or knowledge graph URI: kgcl:OntologyElement","title":"Class: OntologyElement"},{"location":"OntologyElement/#children","text":"Edge - A relationship between two nodes. We assume owlstar or similar for existential restrictions LogicalDefinition Node - Any named entity in an ontology. May be a class, individual, property OntologySubset PropertyValue - a property-value pair","title":"Children"},{"location":"OntologyElement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OntologyElement/#attributes","text":"","title":"Attributes"},{"location":"OntologyElement/#other-properties","text":"Aliases: entity","title":"Other properties"},{"location":"OntologySubset/","text":"Class: OntologySubset URI: kgcl:OntologySubset Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Referenced by class AddToSubset add to subset\u279ein subset OPT OntologySubset None in subset OPT OntologySubset RemoveFromSubset remove from subset\u279ein subset OPT OntologySubset Attributes","title":"Class: OntologySubset"},{"location":"OntologySubset/#class-ontologysubset","text":"URI: kgcl:OntologySubset","title":"Class: OntologySubset"},{"location":"OntologySubset/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"OntologySubset/#referenced-by-class","text":"AddToSubset add to subset\u279ein subset OPT OntologySubset None in subset OPT OntologySubset RemoveFromSubset remove from subset\u279ein subset OPT OntologySubset","title":"Referenced by class"},{"location":"OntologySubset/#attributes","text":"","title":"Attributes"},{"location":"PlaceUnder/","text":"Class: PlaceUnder An edge creation where the predicate is owl:subClassOf URI: kgcl:PlaceUnder Parents is_a: EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action. Attributes Inherited from edge creation: annotation set OPT range: Annotation change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge creation\u279echange description OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String object OPT range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String predicate OPT range: Node subject OPT range: Node","title":"Class: PlaceUnder"},{"location":"PlaceUnder/#class-placeunder","text":"An edge creation where the predicate is owl:subClassOf URI: kgcl:PlaceUnder","title":"Class: PlaceUnder"},{"location":"PlaceUnder/#parents","text":"is_a: EdgeCreation - An edge change in which a de-novo edge is created. The edge is potentially annotated in the same action.","title":"Parents"},{"location":"PlaceUnder/#attributes","text":"","title":"Attributes"},{"location":"PlaceUnder/#inherited-from-edge-creation","text":"annotation set OPT range: Annotation change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge creation\u279echange description OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String object OPT range: Node old value OPT Description: The value of a property held in the old instance of the ontology range: String predicate OPT range: Node subject OPT range: Node","title":"Inherited from edge creation:"},{"location":"PredicateChange/","text":"Class: PredicateChange An edge change where the predicate (relationship type) is modified. URI: kgcl:PredicateChange Parents is_a: EdgeChange - A change in which the element that is the focus of the change is an edge. Referenced by class Attributes Own predicate change\u279echange description OPT range: String Inherited from edge change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Other properties Examples: Example(value='changing a is-a b to a part-of b', description=None)","title":"Class: PredicateChange"},{"location":"PredicateChange/#class-predicatechange","text":"An edge change where the predicate (relationship type) is modified. URI: kgcl:PredicateChange","title":"Class: PredicateChange"},{"location":"PredicateChange/#parents","text":"is_a: EdgeChange - A change in which the element that is the focus of the change is an edge.","title":"Parents"},{"location":"PredicateChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"PredicateChange/#attributes","text":"","title":"Attributes"},{"location":"PredicateChange/#own","text":"predicate change\u279echange description OPT range: String","title":"Own"},{"location":"PredicateChange/#inherited-from-edge-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String edge change\u279eabout OPT range: String edge change\u279esubject OPT range: Node has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from edge change:"},{"location":"PredicateChange/#other-properties","text":"Examples: Example(value='changing a is-a b to a part-of b', description=None)","title":"Other properties"},{"location":"PropertyValue/","text":"Class: PropertyValue a property-value pair URI: kgcl:PropertyValue Parents is_a: OntologyElement - Any component of an ontology or knowledge graph Children Annotation - owl annotations. Not to be confused with annotations sensu GO Referenced by class ChangeSetSummaryStatistic change set summary statistic\u279eproperty value set 0.. PropertyValue * None property value set 0.. PropertyValue * Attributes Own filler OPT range: String property OPT range: Node","title":"Class: PropertyValue"},{"location":"PropertyValue/#class-propertyvalue","text":"a property-value pair URI: kgcl:PropertyValue","title":"Class: PropertyValue"},{"location":"PropertyValue/#parents","text":"is_a: OntologyElement - Any component of an ontology or knowledge graph","title":"Parents"},{"location":"PropertyValue/#children","text":"Annotation - owl annotations. Not to be confused with annotations sensu GO","title":"Children"},{"location":"PropertyValue/#referenced-by-class","text":"ChangeSetSummaryStatistic change set summary statistic\u279eproperty value set 0.. PropertyValue * None property value set 0.. PropertyValue *","title":"Referenced by class"},{"location":"PropertyValue/#attributes","text":"","title":"Attributes"},{"location":"PropertyValue/#own","text":"filler OPT range: String property OPT range: Node","title":"Own"},{"location":"RemoveFromSubset/","text":"Class: RemoveFromSubset removing an element from a subset URI: kgcl:RemoveFromSubset Parents is_a: SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view) Mixin for RemovedNodeFromSubset (mixin) - Removes a node from a subset, by removing an annotation Referenced by class Attributes Own remove from subset\u279ehas undo OPT range: AddToSubset remove from subset\u279ein subset OPT Description: subset that the element is being removed from range: OntologySubset","title":"Class: RemoveFromSubset"},{"location":"RemoveFromSubset/#class-removefromsubset","text":"removing an element from a subset URI: kgcl:RemoveFromSubset","title":"Class: RemoveFromSubset"},{"location":"RemoveFromSubset/#parents","text":"is_a: SubsetMembershipChange - A change in the membership status of a node with respect to a subset (view)","title":"Parents"},{"location":"RemoveFromSubset/#mixin-for","text":"RemovedNodeFromSubset (mixin) - Removes a node from a subset, by removing an annotation","title":"Mixin for"},{"location":"RemoveFromSubset/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RemoveFromSubset/#attributes","text":"","title":"Attributes"},{"location":"RemoveFromSubset/#own","text":"remove from subset\u279ehas undo OPT range: AddToSubset remove from subset\u279ein subset OPT Description: subset that the element is being removed from range: OntologySubset","title":"Own"},{"location":"RemoveSynonym/","text":"Class: RemoveSynonym A node synonym change where a synonym is deleted URI: kgcl:RemoveSynonym Parents is_a: NodeSynonymChange Attributes Own old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node synonym change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String","title":"Class: RemoveSynonym"},{"location":"RemoveSynonym/#class-removesynonym","text":"A node synonym change where a synonym is deleted URI: kgcl:RemoveSynonym","title":"Class: RemoveSynonym"},{"location":"RemoveSynonym/#parents","text":"is_a: NodeSynonymChange","title":"Parents"},{"location":"RemoveSynonym/#attributes","text":"","title":"Attributes"},{"location":"RemoveSynonym/#own","text":"old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"RemoveSynonym/#inherited-from-node-synonym-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String","title":"Inherited from node synonym change:"},{"location":"RemoveTextDefinition/","text":"Class: RemoveTextDefinition A node change where a text definition is deleted URI: kgcl:RemoveTextDefinition Parents is_a: NodeTextDefinitionChange - A node change where the text definition is changed Attributes Own old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node text definition change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String","title":"Class: RemoveTextDefinition"},{"location":"RemoveTextDefinition/#class-removetextdefinition","text":"A node change where a text definition is deleted URI: kgcl:RemoveTextDefinition","title":"Class: RemoveTextDefinition"},{"location":"RemoveTextDefinition/#parents","text":"is_a: NodeTextDefinitionChange - A node change where the text definition is changed","title":"Parents"},{"location":"RemoveTextDefinition/#attributes","text":"","title":"Attributes"},{"location":"RemoveTextDefinition/#own","text":"old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"RemoveTextDefinition/#inherited-from-node-text-definition-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String node change\u279eabout OPT range: String","title":"Inherited from node text definition change:"},{"location":"RemovedNodeFromSubset/","text":"Class: RemovedNodeFromSubset Removes a node from a subset, by removing an annotation URI: kgcl:RemovedNodeFromSubset Parents is_a: NodeChange - A simple change where the change is about a node Uses Mixins mixin: RemoveFromSubset - removing an element from a subset Referenced by class Attributes Own removed node from subset\u279eabout OPT Description: The node that is removed from the subset range: String removed node from subset\u279echange description OPT range: String removed node from subset\u279esubset OPT Description: The subset from which the node is to be removed range: String Inherited from node change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Mixed in from remove from subset: remove from subset\u279ein subset OPT Description: subset that the element is being removed from range: OntologySubset Other properties Aliases: remove term from slim","title":"Class: RemovedNodeFromSubset"},{"location":"RemovedNodeFromSubset/#class-removednodefromsubset","text":"Removes a node from a subset, by removing an annotation URI: kgcl:RemovedNodeFromSubset","title":"Class: RemovedNodeFromSubset"},{"location":"RemovedNodeFromSubset/#parents","text":"is_a: NodeChange - A simple change where the change is about a node","title":"Parents"},{"location":"RemovedNodeFromSubset/#uses-mixins","text":"mixin: RemoveFromSubset - removing an element from a subset","title":"Uses Mixins"},{"location":"RemovedNodeFromSubset/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RemovedNodeFromSubset/#attributes","text":"","title":"Attributes"},{"location":"RemovedNodeFromSubset/#own","text":"removed node from subset\u279eabout OPT Description: The node that is removed from the subset range: String removed node from subset\u279echange description OPT range: String removed node from subset\u279esubset OPT Description: The subset from which the node is to be removed range: String","title":"Own"},{"location":"RemovedNodeFromSubset/#inherited-from-node-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Inherited from node change:"},{"location":"RemovedNodeFromSubset/#mixed-in-from-remove-from-subset","text":"remove from subset\u279ein subset OPT Description: subset that the element is being removed from range: OntologySubset","title":"Mixed in from remove from subset:"},{"location":"RemovedNodeFromSubset/#other-properties","text":"Aliases: remove term from slim","title":"Other properties"},{"location":"Session/","text":"Class: Session A session consists of a set of change sets bundled with the activities that generated those change sets URI: kgcl:Session Attributes Own activity set 0..* range: Activity change set 0..* Description: A collection of changes range: Change","title":"Class: Session"},{"location":"Session/#class-session","text":"A session consists of a set of change sets bundled with the activities that generated those change sets URI: kgcl:Session","title":"Class: Session"},{"location":"Session/#attributes","text":"","title":"Attributes"},{"location":"Session/#own","text":"activity set 0..* range: Activity change set 0..* Description: A collection of changes range: Change","title":"Own"},{"location":"SimpleChange/","text":"Class: SimpleChange A change that is about a single ontology element URI: kgcl:SimpleChange Parents is_a: Change - Any change perform on an ontology or knowledge graph Children DatatypeChange EdgeChange - A change in which the element that is the focus of the change is an edge. LogicalAxiomChange - A simple change where a logical axiom is changed, where the logical axiom cannot be represented as an edge NodeChange - A simple change where the change is about a node Referenced by class Attributes Own about OPT Description: The 'focus' entity on which the change operates range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String Other properties Aliases: atomic change","title":"Class: SimpleChange"},{"location":"SimpleChange/#class-simplechange","text":"A change that is about a single ontology element URI: kgcl:SimpleChange","title":"Class: SimpleChange"},{"location":"SimpleChange/#parents","text":"is_a: Change - Any change perform on an ontology or knowledge graph","title":"Parents"},{"location":"SimpleChange/#children","text":"DatatypeChange EdgeChange - A change in which the element that is the focus of the change is an edge. LogicalAxiomChange - A simple change where a logical axiom is changed, where the logical axiom cannot be represented as an edge NodeChange - A simple change where the change is about a node","title":"Children"},{"location":"SimpleChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"SimpleChange/#attributes","text":"","title":"Attributes"},{"location":"SimpleChange/#own","text":"about OPT Description: The 'focus' entity on which the change operates range: String new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"SimpleChange/#inherited-from-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String","title":"Inherited from change:"},{"location":"SimpleChange/#other-properties","text":"Aliases: atomic change","title":"Other properties"},{"location":"Subset/","text":"Slot: subset The subset from which the node is to be removed URI: kgcl:subset Domain and Range None -> OPT String Parents Children removed node from subset\u279esubset Used by","title":"Slot: subset"},{"location":"Subset/#slot-subset","text":"The subset from which the node is to be removed URI: kgcl:subset","title":"Slot: subset"},{"location":"Subset/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"Subset/#parents","text":"","title":"Parents"},{"location":"Subset/#children","text":"removed node from subset\u279esubset","title":"Children"},{"location":"Subset/#used-by","text":"","title":"Used by"},{"location":"SubsetMembershipChange/","text":"Class: SubsetMembershipChange A change in the membership status of a node with respect to a subset (view) URI: kgcl:SubsetMembershipChange Parents is_a: ChangeMixin - root class for all change mixins Children AddToSubset - placing an element inside a subset RemoveFromSubset - removing an element from a subset Referenced by class Attributes Own in subset OPT Description: The subset that pertains to this change range: OntologySubset","title":"Class: SubsetMembershipChange"},{"location":"SubsetMembershipChange/#class-subsetmembershipchange","text":"A change in the membership status of a node with respect to a subset (view) URI: kgcl:SubsetMembershipChange","title":"Class: SubsetMembershipChange"},{"location":"SubsetMembershipChange/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"SubsetMembershipChange/#children","text":"AddToSubset - placing an element inside a subset RemoveFromSubset - removing an element from a subset","title":"Children"},{"location":"SubsetMembershipChange/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"SubsetMembershipChange/#attributes","text":"","title":"Attributes"},{"location":"SubsetMembershipChange/#own","text":"in subset OPT Description: The subset that pertains to this change range: OntologySubset","title":"Own"},{"location":"SynonymPredicateChange/","text":"Class: SynonymPredicateChange A node synonym change where the predicate of a synonym is changed. Background: synonyms can be represented by a variety of predicates. For example, many OBO ontologies make use of predicates such as oio:hasExactSynonym, oio:hasRelatedSynonym, etc URI: kgcl:SynonymPredicateChange Parents is_a: NodeSynonymChange Attributes Own has textual diff OPT Description: A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. range: TextualDiff new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node synonym change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String Other properties Aliases: node scope change","title":"Class: SynonymPredicateChange"},{"location":"SynonymPredicateChange/#class-synonympredicatechange","text":"A node synonym change where the predicate of a synonym is changed. Background: synonyms can be represented by a variety of predicates. For example, many OBO ontologies make use of predicates such as oio:hasExactSynonym, oio:hasRelatedSynonym, etc URI: kgcl:SynonymPredicateChange","title":"Class: SynonymPredicateChange"},{"location":"SynonymPredicateChange/#parents","text":"is_a: NodeSynonymChange","title":"Parents"},{"location":"SynonymPredicateChange/#attributes","text":"","title":"Attributes"},{"location":"SynonymPredicateChange/#own","text":"has textual diff OPT Description: A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. range: TextualDiff new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"SynonymPredicateChange/#inherited-from-node-synonym-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String","title":"Inherited from node synonym change:"},{"location":"SynonymPredicateChange/#other-properties","text":"Aliases: node scope change","title":"Other properties"},{"location":"SynonymReplacement/","text":"Class: SynonymReplacement A node synonym change where the text of a synonym is changed URI: kgcl:SynonymReplacement Parents is_a: NodeSynonymChange Attributes Own has textual diff OPT Description: A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. range: TextualDiff new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node synonym change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String","title":"Class: SynonymReplacement"},{"location":"SynonymReplacement/#class-synonymreplacement","text":"A node synonym change where the text of a synonym is changed URI: kgcl:SynonymReplacement","title":"Class: SynonymReplacement"},{"location":"SynonymReplacement/#parents","text":"is_a: NodeSynonymChange","title":"Parents"},{"location":"SynonymReplacement/#attributes","text":"","title":"Attributes"},{"location":"SynonymReplacement/#own","text":"has textual diff OPT Description: A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. range: TextualDiff new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"SynonymReplacement/#inherited-from-node-synonym-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String","title":"Inherited from node synonym change:"},{"location":"TextDefinitionReplacement/","text":"Class: TextDefinitionReplacement A node change where a text definition is modified URI: kgcl:TextDefinitionReplacement Parents is_a: NodeTextDefinitionChange - A node change where the text definition is changed Attributes Own has textual diff OPT Description: A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. range: TextualDiff new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String Inherited from node text definition change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String","title":"Class: TextDefinitionReplacement"},{"location":"TextDefinitionReplacement/#class-textdefinitionreplacement","text":"A node change where a text definition is modified URI: kgcl:TextDefinitionReplacement","title":"Class: TextDefinitionReplacement"},{"location":"TextDefinitionReplacement/#parents","text":"is_a: NodeTextDefinitionChange - A node change where the text definition is changed","title":"Parents"},{"location":"TextDefinitionReplacement/#attributes","text":"","title":"Attributes"},{"location":"TextDefinitionReplacement/#own","text":"has textual diff OPT Description: A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. range: TextualDiff new value OPT Description: The value of a property held in the new instance of the ontology range: String old value OPT Description: The value of a property held in the old instance of the ontology range: String","title":"Own"},{"location":"TextDefinitionReplacement/#inherited-from-node-text-definition-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String node change\u279eabout OPT range: String","title":"Inherited from node text definition change:"},{"location":"TextualDiff/","text":"Class: TextualDiff A summarizing of a change on a piece of text. This could be rendered in a number of different ways URI: kgcl:TextualDiff Referenced by class Change has textual diff OPT TextualDiff Attributes","title":"Class: TextualDiff"},{"location":"TextualDiff/#class-textualdiff","text":"A summarizing of a change on a piece of text. This could be rendered in a number of different ways URI: kgcl:TextualDiff","title":"Class: TextualDiff"},{"location":"TextualDiff/#referenced-by-class","text":"Change has textual diff OPT TextualDiff","title":"Referenced by class"},{"location":"TextualDiff/#attributes","text":"","title":"Attributes"},{"location":"Transaction/","text":"Class: Transaction A change that is a composition of a set of changes, where those changes are treated as a single unit. Could be a single change, or the results of an ontology diff URI: kgcl:Transaction Parents is_a: Change - Any change perform on an ontology or knowledge graph Attributes Own change set 0..* Description: A collection of changes range: Change Inherited from change: change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String","title":"Class: Transaction"},{"location":"Transaction/#class-transaction","text":"A change that is a composition of a set of changes, where those changes are treated as a single unit. Could be a single change, or the results of an ontology diff URI: kgcl:Transaction","title":"Class: Transaction"},{"location":"Transaction/#parents","text":"is_a: Change - Any change perform on an ontology or knowledge graph","title":"Parents"},{"location":"Transaction/#attributes","text":"","title":"Attributes"},{"location":"Transaction/#own","text":"change set 0..* Description: A collection of changes range: Change","title":"Own"},{"location":"Transaction/#inherited-from-change","text":"change\u279echange date OPT range: String change\u279ecreator OPT range: String change\u279epull request OPT range: String change\u279esee also OPT range: String change\u279ewas generated by OPT range: Activity contributor OPT range: String has undo OPT Description: A change that reverses this change range: Change id REQ range: String","title":"Inherited from change:"},{"location":"Unobsoletion/","text":"Class: Unobsoletion Opposite operation of obsoletion. Rarely performed. URI: kgcl:Unobsoletion Parents is_a: ChangeMixin - root class for all change mixins Mixin for NodeUnobsoletion (mixin) - unobsoletion of a node deprecates usage of that node. Rarely applied. Referenced by class Attributes Own unobsoletion\u279ehas undo OPT range: Obsoletion Other properties See also: http://wiki.geneontology.org/index.php/Restoring_an_Obsolete_Ontology_Term","title":"Class: Unobsoletion"},{"location":"Unobsoletion/#class-unobsoletion","text":"Opposite operation of obsoletion. Rarely performed. URI: kgcl:Unobsoletion","title":"Class: Unobsoletion"},{"location":"Unobsoletion/#parents","text":"is_a: ChangeMixin - root class for all change mixins","title":"Parents"},{"location":"Unobsoletion/#mixin-for","text":"NodeUnobsoletion (mixin) - unobsoletion of a node deprecates usage of that node. Rarely applied.","title":"Mixin for"},{"location":"Unobsoletion/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Unobsoletion/#attributes","text":"","title":"Attributes"},{"location":"Unobsoletion/#own","text":"unobsoletion\u279ehas undo OPT range: Obsoletion","title":"Own"},{"location":"Unobsoletion/#other-properties","text":"See also: http://wiki.geneontology.org/index.php/Restoring_an_Obsolete_Ontology_Term","title":"Other properties"},{"location":"about/","text":"Slot: about The 'focus' entity on which the change operates URI: kgcl:about Domain and Range None -> OPT String Parents Children edge change\u279eabout node change\u279eabout obsoletion\u279eabout Used by DatatypeChange LogicalAxiomChange SimpleChange","title":"Slot: about"},{"location":"about/#slot-about","text":"The 'focus' entity on which the change operates URI: kgcl:about","title":"Slot: about"},{"location":"about/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"about/#parents","text":"","title":"Parents"},{"location":"about/#children","text":"edge change\u279eabout node change\u279eabout obsoletion\u279eabout","title":"Children"},{"location":"about/#used-by","text":"DatatypeChange LogicalAxiomChange SimpleChange","title":"Used by"},{"location":"acted_on_behalf_of/","text":"Slot: acted_on_behalf_of URI: kgcl:acted_on_behalf_of Domain and Range None -> OPT Agent Parents Children Used by Agent Other properties Mappings: prov:actedOnBehalfOf","title":"Slot: acted_on_behalf_of"},{"location":"acted_on_behalf_of/#slot-acted_on_behalf_of","text":"URI: kgcl:acted_on_behalf_of","title":"Slot: acted_on_behalf_of"},{"location":"acted_on_behalf_of/#domain-and-range","text":"None -> OPT Agent","title":"Domain and Range"},{"location":"acted_on_behalf_of/#parents","text":"","title":"Parents"},{"location":"acted_on_behalf_of/#children","text":"","title":"Children"},{"location":"acted_on_behalf_of/#used-by","text":"Agent","title":"Used by"},{"location":"acted_on_behalf_of/#other-properties","text":"Mappings: prov:actedOnBehalfOf","title":"Other properties"},{"location":"activity_id/","text":"Slot: activity_id URI: kgcl:activity_id Domain and Range None -> REQ String Parents Children Used by Activity","title":"Slot: activity_id"},{"location":"activity_id/#slot-activity_id","text":"URI: kgcl:activity_id","title":"Slot: activity_id"},{"location":"activity_id/#domain-and-range","text":"None -> REQ String","title":"Domain and Range"},{"location":"activity_id/#parents","text":"","title":"Parents"},{"location":"activity_id/#children","text":"","title":"Children"},{"location":"activity_id/#used-by","text":"Activity","title":"Used by"},{"location":"activity_set/","text":"Slot: activity_set URI: kgcl:activity_set Domain and Range None -> 0..* Activity Parents Children Used by Session","title":"Slot: activity_set"},{"location":"activity_set/#slot-activity_set","text":"URI: kgcl:activity_set","title":"Slot: activity_set"},{"location":"activity_set/#domain-and-range","text":"None -> 0..* Activity","title":"Domain and Range"},{"location":"activity_set/#parents","text":"","title":"Parents"},{"location":"activity_set/#children","text":"","title":"Children"},{"location":"activity_set/#used-by","text":"Session","title":"Used by"},{"location":"add_to_subset_in_subset/","text":"Slot: add_to_subset_in_subset subset that the element is being placed inside. URI: kgcl:add_to_subset_in_subset Domain and Range AddToSubset -> OPT OntologySubset Parents is_a: in subset Children Used by AddNodeToSubset AddToSubset","title":"Slot: add_to_subset_in_subset"},{"location":"add_to_subset_in_subset/#slot-add_to_subset_in_subset","text":"subset that the element is being placed inside. URI: kgcl:add_to_subset_in_subset","title":"Slot: add_to_subset_in_subset"},{"location":"add_to_subset_in_subset/#domain-and-range","text":"AddToSubset -> OPT OntologySubset","title":"Domain and Range"},{"location":"add_to_subset_in_subset/#parents","text":"is_a: in subset","title":"Parents"},{"location":"add_to_subset_in_subset/#children","text":"","title":"Children"},{"location":"add_to_subset_in_subset/#used-by","text":"AddNodeToSubset AddToSubset","title":"Used by"},{"location":"agent_set/","text":"Slot: agent_set URI: kgcl:agent_set Domain and Range None -> 0..* Agent Parents Children Used by","title":"Slot: agent_set"},{"location":"agent_set/#slot-agent_set","text":"URI: kgcl:agent_set","title":"Slot: agent_set"},{"location":"agent_set/#domain-and-range","text":"None -> 0..* Agent","title":"Domain and Range"},{"location":"agent_set/#parents","text":"","title":"Parents"},{"location":"agent_set/#children","text":"","title":"Children"},{"location":"agent_set/#used-by","text":"","title":"Used by"},{"location":"annotation_set/","text":"Slot: annotation_set URI: kgcl:annotation_set Domain and Range None -> OPT Annotation Parents Children Used by Annotation ClassCreation ClassNode Edge EdgeCreation EdgeDeletion EdgeObsoletion InstanceNode Node NodeCreation PlaceUnder","title":"Slot: annotation_set"},{"location":"annotation_set/#slot-annotation_set","text":"URI: kgcl:annotation_set","title":"Slot: annotation_set"},{"location":"annotation_set/#domain-and-range","text":"None -> OPT Annotation","title":"Domain and Range"},{"location":"annotation_set/#parents","text":"","title":"Parents"},{"location":"annotation_set/#children","text":"","title":"Children"},{"location":"annotation_set/#used-by","text":"Annotation ClassCreation ClassNode Edge EdgeCreation EdgeDeletion EdgeObsoletion InstanceNode Node NodeCreation PlaceUnder","title":"Used by"},{"location":"associated_change_set/","text":"Slot: associated_change_set All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D URI: kgcl:associated_change_set Domain and Range None -> 0..* Change Parents is_a: change set Children Used by","title":"Slot: associated_change_set"},{"location":"associated_change_set/#slot-associated_change_set","text":"All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D URI: kgcl:associated_change_set","title":"Slot: associated_change_set"},{"location":"associated_change_set/#domain-and-range","text":"None -> 0..* Change","title":"Domain and Range"},{"location":"associated_change_set/#parents","text":"is_a: change set","title":"Parents"},{"location":"associated_change_set/#children","text":"","title":"Children"},{"location":"associated_change_set/#used-by","text":"","title":"Used by"},{"location":"change_1/","text":"Slot: change_1 URI: kgcl:change_1 Domain and Range None -> OPT NodeRename Parents Children name becomes synonym\u279echange 1 Used by","title":"Slot: change_1"},{"location":"change_1/#slot-change_1","text":"URI: kgcl:change_1","title":"Slot: change_1"},{"location":"change_1/#domain-and-range","text":"None -> OPT NodeRename","title":"Domain and Range"},{"location":"change_1/#parents","text":"","title":"Parents"},{"location":"change_1/#children","text":"name becomes synonym\u279echange 1","title":"Children"},{"location":"change_1/#used-by","text":"","title":"Used by"},{"location":"change_2/","text":"Slot: change_2 URI: kgcl:change_2 Domain and Range None -> OPT NewSynonym Parents Children name becomes synonym\u279echange 2 Used by","title":"Slot: change_2"},{"location":"change_2/#slot-change_2","text":"URI: kgcl:change_2","title":"Slot: change_2"},{"location":"change_2/#domain-and-range","text":"None -> OPT NewSynonym","title":"Domain and Range"},{"location":"change_2/#parents","text":"","title":"Parents"},{"location":"change_2/#children","text":"name becomes synonym\u279echange 2","title":"Children"},{"location":"change_2/#used-by","text":"","title":"Used by"},{"location":"change_change_date/","text":"Slot: change_change_date URI: kgcl:change_change_date Domain and Range Change -> OPT String Parents is_a: change date Children Used by AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction Other properties Comments: This should be the composition of 'was generated by' and 'ended at time'","title":"Slot: change_change_date"},{"location":"change_change_date/#slot-change_change_date","text":"URI: kgcl:change_change_date","title":"Slot: change_change_date"},{"location":"change_change_date/#domain-and-range","text":"Change -> OPT String","title":"Domain and Range"},{"location":"change_change_date/#parents","text":"is_a: change date","title":"Parents"},{"location":"change_change_date/#children","text":"","title":"Children"},{"location":"change_change_date/#used-by","text":"AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Used by"},{"location":"change_change_date/#other-properties","text":"Comments: This should be the composition of 'was generated by' and 'ended at time'","title":"Other properties"},{"location":"change_creator/","text":"Slot: change_creator URI: kgcl:change_creator Domain and Range Change -> OPT String Parents is_a: creator Children Used by AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction Other properties Comments: This should be the composition of 'was generated by' and 'was associated with'","title":"Slot: change_creator"},{"location":"change_creator/#slot-change_creator","text":"URI: kgcl:change_creator","title":"Slot: change_creator"},{"location":"change_creator/#domain-and-range","text":"Change -> OPT String","title":"Domain and Range"},{"location":"change_creator/#parents","text":"is_a: creator","title":"Parents"},{"location":"change_creator/#children","text":"","title":"Children"},{"location":"change_creator/#used-by","text":"AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Used by"},{"location":"change_creator/#other-properties","text":"Comments: This should be the composition of 'was generated by' and 'was associated with'","title":"Other properties"},{"location":"change_date/","text":"Slot: change_date URI: kgcl:change_date Domain and Range None -> OPT String Parents Children change\u279echange date Used by Other properties Mappings: dcterms:date","title":"Slot: change_date"},{"location":"change_date/#slot-change_date","text":"URI: kgcl:change_date","title":"Slot: change_date"},{"location":"change_date/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"change_date/#parents","text":"","title":"Parents"},{"location":"change_date/#children","text":"change\u279echange date","title":"Children"},{"location":"change_date/#used-by","text":"","title":"Used by"},{"location":"change_date/#other-properties","text":"Mappings: dcterms:date","title":"Other properties"},{"location":"change_description/","text":"Slot: change_description A string serialization of the change. This should be both human-readable, and parseable. URI: kgcl:change_description Domain and Range None -> OPT String Parents Children edge creation\u279echange description edge deletion\u279echange description edge obsoletion\u279echange description multi node obsoletion\u279echange description name becomes synonym\u279echange description node creation\u279echange description node deletion\u279echange description node move\u279echange description node obsoletion\u279echange description node rename\u279echange description node unobsoletion\u279echange description predicate change\u279echange description removed node from subset\u279echange description Used by Other properties Comments: {'Form 1': 'IRIs are denoted by CURIEs, optionally followed by label in parenthesis'} {'Form 2': \"IRIs are denoted by the rdfs:label in single quotes, e.g. 'nervous system'\"} Examples: Example(value=\"rename UBERON:0002398 from 'manus' to 'hand'\", description=None) Example(value=\"move 'hand' from 'part of' 'hindlimb' to 'part of' 'forelimb'\", description=None) Example(value=\"merge 'cellular metabolic process' into 'metabolic process'\", description=None) Example(value=\"search and replace 'metabolic process' with 'metabolism' in all labels under 'biological process'\", description=None) Example(value=\"search and replace 'metabolic process' with 'metabolism' in all labels under 'biological process' retaining as 'exact synonym'\", description=None)","title":"Slot: change_description"},{"location":"change_description/#slot-change_description","text":"A string serialization of the change. This should be both human-readable, and parseable. URI: kgcl:change_description","title":"Slot: change_description"},{"location":"change_description/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"change_description/#parents","text":"","title":"Parents"},{"location":"change_description/#children","text":"edge creation\u279echange description edge deletion\u279echange description edge obsoletion\u279echange description multi node obsoletion\u279echange description name becomes synonym\u279echange description node creation\u279echange description node deletion\u279echange description node move\u279echange description node obsoletion\u279echange description node rename\u279echange description node unobsoletion\u279echange description predicate change\u279echange description removed node from subset\u279echange description","title":"Children"},{"location":"change_description/#used-by","text":"","title":"Used by"},{"location":"change_description/#other-properties","text":"Comments: {'Form 1': 'IRIs are denoted by CURIEs, optionally followed by label in parenthesis'} {'Form 2': \"IRIs are denoted by the rdfs:label in single quotes, e.g. 'nervous system'\"} Examples: Example(value=\"rename UBERON:0002398 from 'manus' to 'hand'\", description=None) Example(value=\"move 'hand' from 'part of' 'hindlimb' to 'part of' 'forelimb'\", description=None) Example(value=\"merge 'cellular metabolic process' into 'metabolic process'\", description=None) Example(value=\"search and replace 'metabolic process' with 'metabolism' in all labels under 'biological process'\", description=None) Example(value=\"search and replace 'metabolic process' with 'metabolism' in all labels under 'biological process' retaining as 'exact synonym'\", description=None)","title":"Other properties"},{"location":"change_pull_request/","text":"Slot: change_pull_request URI: kgcl:change_pull_request Domain and Range Change -> OPT String Parents is_a: pull request Children Used by AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction Other properties Comments: If this change has a pull request on a system like github, include the URL here","title":"Slot: change_pull_request"},{"location":"change_pull_request/#slot-change_pull_request","text":"URI: kgcl:change_pull_request","title":"Slot: change_pull_request"},{"location":"change_pull_request/#domain-and-range","text":"Change -> OPT String","title":"Domain and Range"},{"location":"change_pull_request/#parents","text":"is_a: pull request","title":"Parents"},{"location":"change_pull_request/#children","text":"","title":"Children"},{"location":"change_pull_request/#used-by","text":"AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Used by"},{"location":"change_pull_request/#other-properties","text":"Comments: If this change has a pull request on a system like github, include the URL here","title":"Other properties"},{"location":"change_see_also/","text":"Slot: change_see_also URI: kgcl:change_see_also Domain and Range Change -> OPT String Parents is_a: see also Children Used by AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction Other properties Comments: If this change is in relationship to an issue on a system like github, include the URL here","title":"Slot: change_see_also"},{"location":"change_see_also/#slot-change_see_also","text":"URI: kgcl:change_see_also","title":"Slot: change_see_also"},{"location":"change_see_also/#domain-and-range","text":"Change -> OPT String","title":"Domain and Range"},{"location":"change_see_also/#parents","text":"is_a: see also","title":"Parents"},{"location":"change_see_also/#children","text":"","title":"Children"},{"location":"change_see_also/#used-by","text":"AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Used by"},{"location":"change_see_also/#other-properties","text":"Comments: If this change is in relationship to an issue on a system like github, include the URL here","title":"Other properties"},{"location":"change_set/","text":"Slot: change_set A collection of changes URI: kgcl:change_set Domain and Range None -> 0..* Change Parents Children associated change set multi node obsoletion\u279eassociated change set multi node obsoletion\u279echange set node obsoletion\u279eassociated change set Used by ComplexChange Session Transaction","title":"Slot: change_set"},{"location":"change_set/#slot-change_set","text":"A collection of changes URI: kgcl:change_set","title":"Slot: change_set"},{"location":"change_set/#domain-and-range","text":"None -> 0..* Change","title":"Domain and Range"},{"location":"change_set/#parents","text":"","title":"Parents"},{"location":"change_set/#children","text":"associated change set multi node obsoletion\u279eassociated change set multi node obsoletion\u279echange set node obsoletion\u279eassociated change set","title":"Children"},{"location":"change_set/#used-by","text":"ComplexChange Session Transaction","title":"Used by"},{"location":"change_set_summary_statistic_change_type/","text":"Slot: change_set_summary_statistic_change_type URI: kgcl:change_set_summary_statistic_change_type Domain and Range ChangeSetSummaryStatistic -> OPT ChangeClassType Parents is_a: change type Children Used by ChangeSetSummaryStatistic","title":"Slot: change_set_summary_statistic_change_type"},{"location":"change_set_summary_statistic_change_type/#slot-change_set_summary_statistic_change_type","text":"URI: kgcl:change_set_summary_statistic_change_type","title":"Slot: change_set_summary_statistic_change_type"},{"location":"change_set_summary_statistic_change_type/#domain-and-range","text":"ChangeSetSummaryStatistic -> OPT ChangeClassType","title":"Domain and Range"},{"location":"change_set_summary_statistic_change_type/#parents","text":"is_a: change type","title":"Parents"},{"location":"change_set_summary_statistic_change_type/#children","text":"","title":"Children"},{"location":"change_set_summary_statistic_change_type/#used-by","text":"ChangeSetSummaryStatistic","title":"Used by"},{"location":"change_set_summary_statistic_count/","text":"Slot: change_set_summary_statistic_count URI: kgcl:change_set_summary_statistic_count Domain and Range ChangeSetSummaryStatistic -> OPT Integer Parents is_a: count Children Used by ChangeSetSummaryStatistic","title":"Slot: change_set_summary_statistic_count"},{"location":"change_set_summary_statistic_count/#slot-change_set_summary_statistic_count","text":"URI: kgcl:change_set_summary_statistic_count","title":"Slot: change_set_summary_statistic_count"},{"location":"change_set_summary_statistic_count/#domain-and-range","text":"ChangeSetSummaryStatistic -> OPT Integer","title":"Domain and Range"},{"location":"change_set_summary_statistic_count/#parents","text":"is_a: count","title":"Parents"},{"location":"change_set_summary_statistic_count/#children","text":"","title":"Children"},{"location":"change_set_summary_statistic_count/#used-by","text":"ChangeSetSummaryStatistic","title":"Used by"},{"location":"change_set_summary_statistic_property_value_set/","text":"Slot: change_set_summary_statistic_property_value_set Summary statistic is grouped by these constraints URI: kgcl:change_set_summary_statistic_property_value_set Domain and Range ChangeSetSummaryStatistic -> 0..* PropertyValue Parents is_a: property value set Children Used by ChangeSetSummaryStatistic","title":"Slot: change_set_summary_statistic_property_value_set"},{"location":"change_set_summary_statistic_property_value_set/#slot-change_set_summary_statistic_property_value_set","text":"Summary statistic is grouped by these constraints URI: kgcl:change_set_summary_statistic_property_value_set","title":"Slot: change_set_summary_statistic_property_value_set"},{"location":"change_set_summary_statistic_property_value_set/#domain-and-range","text":"ChangeSetSummaryStatistic -> 0..* PropertyValue","title":"Domain and Range"},{"location":"change_set_summary_statistic_property_value_set/#parents","text":"is_a: property value set","title":"Parents"},{"location":"change_set_summary_statistic_property_value_set/#children","text":"","title":"Children"},{"location":"change_set_summary_statistic_property_value_set/#used-by","text":"ChangeSetSummaryStatistic","title":"Used by"},{"location":"change_type/","text":"Slot: change_type URI: kgcl:change_type Domain and Range None -> OPT ChangeClassType Parents Children change set summary statistic\u279echange type Used by","title":"Slot: change_type"},{"location":"change_type/#slot-change_type","text":"URI: kgcl:change_type","title":"Slot: change_type"},{"location":"change_type/#domain-and-range","text":"None -> OPT ChangeClassType","title":"Domain and Range"},{"location":"change_type/#parents","text":"","title":"Parents"},{"location":"change_type/#children","text":"change set summary statistic\u279echange type","title":"Children"},{"location":"change_type/#used-by","text":"","title":"Used by"},{"location":"change_was_generated_by/","text":"Slot: change_was_generated_by URI: kgcl:change_was_generated_by Domain and Range Change -> OPT Activity Parents is_a: was generated by Children Used by AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction Other properties Comments: we use the PROV model to represent the agent making a change","title":"Slot: change_was_generated_by"},{"location":"change_was_generated_by/#slot-change_was_generated_by","text":"URI: kgcl:change_was_generated_by","title":"Slot: change_was_generated_by"},{"location":"change_was_generated_by/#domain-and-range","text":"Change -> OPT Activity","title":"Domain and Range"},{"location":"change_was_generated_by/#parents","text":"is_a: was generated by","title":"Parents"},{"location":"change_was_generated_by/#children","text":"","title":"Children"},{"location":"change_was_generated_by/#used-by","text":"AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Used by"},{"location":"change_was_generated_by/#other-properties","text":"Comments: we use the PROV model to represent the agent making a change","title":"Other properties"},{"location":"configuration__contributor_predicate/","text":"Slot: configuration__contributor_predicate URI: kgcl:configuration__contributor_predicate Domain and Range None -> OPT String Parents Children Used by Configuration","title":"Slot: configuration__contributor_predicate"},{"location":"configuration__contributor_predicate/#slot-configuration__contributor_predicate","text":"URI: kgcl:configuration__contributor_predicate","title":"Slot: configuration__contributor_predicate"},{"location":"configuration__contributor_predicate/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"configuration__contributor_predicate/#parents","text":"","title":"Parents"},{"location":"configuration__contributor_predicate/#children","text":"","title":"Children"},{"location":"configuration__contributor_predicate/#used-by","text":"Configuration","title":"Used by"},{"location":"configuration__creator_predicate/","text":"Slot: configuration__creator_predicate URI: kgcl:configuration__creator_predicate Domain and Range None -> OPT String Parents Children Used by Configuration","title":"Slot: configuration__creator_predicate"},{"location":"configuration__creator_predicate/#slot-configuration__creator_predicate","text":"URI: kgcl:configuration__creator_predicate","title":"Slot: configuration__creator_predicate"},{"location":"configuration__creator_predicate/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"configuration__creator_predicate/#parents","text":"","title":"Parents"},{"location":"configuration__creator_predicate/#children","text":"","title":"Children"},{"location":"configuration__creator_predicate/#used-by","text":"Configuration","title":"Used by"},{"location":"configuration__definition_predicate/","text":"Slot: configuration__definition_predicate URI: kgcl:configuration__definition_predicate Domain and Range None -> OPT String Parents Children Used by Configuration","title":"Slot: configuration__definition_predicate"},{"location":"configuration__definition_predicate/#slot-configuration__definition_predicate","text":"URI: kgcl:configuration__definition_predicate","title":"Slot: configuration__definition_predicate"},{"location":"configuration__definition_predicate/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"configuration__definition_predicate/#parents","text":"","title":"Parents"},{"location":"configuration__definition_predicate/#children","text":"","title":"Children"},{"location":"configuration__definition_predicate/#used-by","text":"Configuration","title":"Used by"},{"location":"configuration__main_synonym_predicate/","text":"Slot: configuration__main_synonym_predicate URI: kgcl:configuration__main_synonym_predicate Domain and Range None -> OPT String Parents Children Used by Configuration","title":"Slot: configuration__main_synonym_predicate"},{"location":"configuration__main_synonym_predicate/#slot-configuration__main_synonym_predicate","text":"URI: kgcl:configuration__main_synonym_predicate","title":"Slot: configuration__main_synonym_predicate"},{"location":"configuration__main_synonym_predicate/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"configuration__main_synonym_predicate/#parents","text":"","title":"Parents"},{"location":"configuration__main_synonym_predicate/#children","text":"","title":"Children"},{"location":"configuration__main_synonym_predicate/#used-by","text":"Configuration","title":"Used by"},{"location":"configuration__name_predicate/","text":"Slot: configuration__name_predicate URI: kgcl:configuration__name_predicate Domain and Range None -> OPT String Parents Children Used by Configuration","title":"Slot: configuration__name_predicate"},{"location":"configuration__name_predicate/#slot-configuration__name_predicate","text":"URI: kgcl:configuration__name_predicate","title":"Slot: configuration__name_predicate"},{"location":"configuration__name_predicate/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"configuration__name_predicate/#parents","text":"","title":"Parents"},{"location":"configuration__name_predicate/#children","text":"","title":"Children"},{"location":"configuration__name_predicate/#used-by","text":"Configuration","title":"Used by"},{"location":"configuration__obsoletion_policy/","text":"Slot: configuration__obsoletion_policy URI: kgcl:configuration__obsoletion_policy Domain and Range None -> OPT String Parents Children Used by Configuration","title":"Slot: configuration__obsoletion_policy"},{"location":"configuration__obsoletion_policy/#slot-configuration__obsoletion_policy","text":"URI: kgcl:configuration__obsoletion_policy","title":"Slot: configuration__obsoletion_policy"},{"location":"configuration__obsoletion_policy/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"configuration__obsoletion_policy/#parents","text":"","title":"Parents"},{"location":"configuration__obsoletion_policy/#children","text":"","title":"Children"},{"location":"configuration__obsoletion_policy/#used-by","text":"Configuration","title":"Used by"},{"location":"configuration__obsoletion_workflow/","text":"Slot: configuration__obsoletion_workflow URI: kgcl:configuration__obsoletion_workflow Domain and Range None -> OPT String Parents Children Used by Configuration","title":"Slot: configuration__obsoletion_workflow"},{"location":"configuration__obsoletion_workflow/#slot-configuration__obsoletion_workflow","text":"URI: kgcl:configuration__obsoletion_workflow","title":"Slot: configuration__obsoletion_workflow"},{"location":"configuration__obsoletion_workflow/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"configuration__obsoletion_workflow/#parents","text":"","title":"Parents"},{"location":"configuration__obsoletion_workflow/#children","text":"","title":"Children"},{"location":"configuration__obsoletion_workflow/#used-by","text":"Configuration","title":"Used by"},{"location":"configuration__synonym_predicates/","text":"Slot: configuration__synonym_predicates URI: kgcl:configuration__synonym_predicates Domain and Range None -> OPT String Parents Children Used by Configuration","title":"Slot: configuration__synonym_predicates"},{"location":"configuration__synonym_predicates/#slot-configuration__synonym_predicates","text":"URI: kgcl:configuration__synonym_predicates","title":"Slot: configuration__synonym_predicates"},{"location":"configuration__synonym_predicates/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"configuration__synonym_predicates/#parents","text":"","title":"Parents"},{"location":"configuration__synonym_predicates/#children","text":"","title":"Children"},{"location":"configuration__synonym_predicates/#used-by","text":"Configuration","title":"Used by"},{"location":"consider/","text":"Slot: consider URI: kgcl:consider Domain and Range None -> OPT Node Parents Children node unobsoletion\u279econsider Used by","title":"Slot: consider"},{"location":"consider/#slot-consider","text":"URI: kgcl:consider","title":"Slot: consider"},{"location":"consider/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"consider/#parents","text":"","title":"Parents"},{"location":"consider/#children","text":"node unobsoletion\u279econsider","title":"Children"},{"location":"consider/#used-by","text":"","title":"Used by"},{"location":"contributor/","text":"Slot: contributor URI: kgcl:contributor Domain and Range None -> OPT String Parents Children Used by AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction Other properties Mappings: dcterms:creator","title":"Slot: contributor"},{"location":"contributor/#slot-contributor","text":"URI: kgcl:contributor","title":"Slot: contributor"},{"location":"contributor/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"contributor/#parents","text":"","title":"Parents"},{"location":"contributor/#children","text":"","title":"Children"},{"location":"contributor/#used-by","text":"AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Used by"},{"location":"contributor/#other-properties","text":"Mappings: dcterms:creator","title":"Other properties"},{"location":"count/","text":"Slot: count URI: kgcl:count Domain and Range None -> OPT Integer Parents Children change set summary statistic\u279ecount Used by","title":"Slot: count"},{"location":"count/#slot-count","text":"URI: kgcl:count","title":"Slot: count"},{"location":"count/#domain-and-range","text":"None -> OPT Integer","title":"Domain and Range"},{"location":"count/#parents","text":"","title":"Parents"},{"location":"count/#children","text":"change set summary statistic\u279ecount","title":"Children"},{"location":"count/#used-by","text":"","title":"Used by"},{"location":"creation_has_undo/","text":"Slot: creation_has_undo URI: kgcl:creation_has_undo Domain and Range Creation -> OPT Deletion Parents is_a: has undo Children Used by Creation","title":"Slot: creation_has_undo"},{"location":"creation_has_undo/#slot-creation_has_undo","text":"URI: kgcl:creation_has_undo","title":"Slot: creation_has_undo"},{"location":"creation_has_undo/#domain-and-range","text":"Creation -> OPT Deletion","title":"Domain and Range"},{"location":"creation_has_undo/#parents","text":"is_a: has undo","title":"Parents"},{"location":"creation_has_undo/#children","text":"","title":"Children"},{"location":"creation_has_undo/#used-by","text":"Creation","title":"Used by"},{"location":"creator/","text":"Slot: creator URI: kgcl:creator Domain and Range None -> OPT String Parents Children change\u279ecreator Used by Other properties Mappings: dcterms:creator","title":"Slot: creator"},{"location":"creator/#slot-creator","text":"URI: kgcl:creator","title":"Slot: creator"},{"location":"creator/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"creator/#parents","text":"","title":"Parents"},{"location":"creator/#children","text":"change\u279ecreator","title":"Children"},{"location":"creator/#used-by","text":"","title":"Used by"},{"location":"creator/#other-properties","text":"Mappings: dcterms:creator","title":"Other properties"},{"location":"credits/","text":"Credits this project was made using the LinkML framework","title":"Credits"},{"location":"credits/#credits","text":"this project was made using the LinkML framework","title":"Credits"},{"location":"date/","text":"Slot: date URI: kgcl:date Domain and Range None -> OPT String Parents Children change\u279edate Used by Other properties Comments: This should be the composition of 'was generated by' and 'ended at time'","title":"Slot: date"},{"location":"date/#slot-date","text":"URI: kgcl:date","title":"Slot: date"},{"location":"date/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"date/#parents","text":"","title":"Parents"},{"location":"date/#children","text":"change\u279edate","title":"Children"},{"location":"date/#used-by","text":"","title":"Used by"},{"location":"date/#other-properties","text":"Comments: This should be the composition of 'was generated by' and 'ended at time'","title":"Other properties"},{"location":"description/","text":"Slot: description URI: kgcl:description Domain and Range None -> OPT String Parents Children Used by Activity Other properties Mappings: dcterms:description","title":"Slot: description"},{"location":"description/#slot-description","text":"URI: kgcl:description","title":"Slot: description"},{"location":"description/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"description/#parents","text":"","title":"Parents"},{"location":"description/#children","text":"","title":"Children"},{"location":"description/#used-by","text":"Activity","title":"Used by"},{"location":"description/#other-properties","text":"Mappings: dcterms:description","title":"Other properties"},{"location":"edge_change_about/","text":"Slot: edge_change_about URI: kgcl:edge_change_about Domain and Range EdgeChange -> OPT String Parents is_a: about Children Used by EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring NodeDeepening NodeMove NodeShallowing PlaceUnder PredicateChange","title":"Slot: edge_change_about"},{"location":"edge_change_about/#slot-edge_change_about","text":"URI: kgcl:edge_change_about","title":"Slot: edge_change_about"},{"location":"edge_change_about/#domain-and-range","text":"EdgeChange -> OPT String","title":"Domain and Range"},{"location":"edge_change_about/#parents","text":"is_a: about","title":"Parents"},{"location":"edge_change_about/#children","text":"","title":"Children"},{"location":"edge_change_about/#used-by","text":"EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring NodeDeepening NodeMove NodeShallowing PlaceUnder PredicateChange","title":"Used by"},{"location":"edge_change_subject/","text":"Slot: edge_change_subject URI: kgcl:edge_change_subject Domain and Range EdgeChange -> OPT Node Parents is_a: subject Children Used by EdgeChange EdgeLogicalInterpretationChange EdgeRewiring NodeDeepening NodeMove NodeShallowing PredicateChange Other properties Comments: if subject is empty, use the about field of the last node change","title":"Slot: edge_change_subject"},{"location":"edge_change_subject/#slot-edge_change_subject","text":"URI: kgcl:edge_change_subject","title":"Slot: edge_change_subject"},{"location":"edge_change_subject/#domain-and-range","text":"EdgeChange -> OPT Node","title":"Domain and Range"},{"location":"edge_change_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"edge_change_subject/#children","text":"","title":"Children"},{"location":"edge_change_subject/#used-by","text":"EdgeChange EdgeLogicalInterpretationChange EdgeRewiring NodeDeepening NodeMove NodeShallowing PredicateChange","title":"Used by"},{"location":"edge_change_subject/#other-properties","text":"Comments: if subject is empty, use the about field of the last node change","title":"Other properties"},{"location":"edge_creation_change_description/","text":"Slot: edge_creation_change_description URI: kgcl:edge_creation_change_description Domain and Range EdgeCreation -> OPT String Parents is_a: change description Children Used by EdgeCreation PlaceUnder","title":"Slot: edge_creation_change_description"},{"location":"edge_creation_change_description/#slot-edge_creation_change_description","text":"URI: kgcl:edge_creation_change_description","title":"Slot: edge_creation_change_description"},{"location":"edge_creation_change_description/#domain-and-range","text":"EdgeCreation -> OPT String","title":"Domain and Range"},{"location":"edge_creation_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"edge_creation_change_description/#children","text":"","title":"Children"},{"location":"edge_creation_change_description/#used-by","text":"EdgeCreation PlaceUnder","title":"Used by"},{"location":"edge_deletion_change_description/","text":"Slot: edge_deletion_change_description URI: kgcl:edge_deletion_change_description Domain and Range EdgeDeletion -> OPT String Parents is_a: change description Children Used by EdgeDeletion","title":"Slot: edge_deletion_change_description"},{"location":"edge_deletion_change_description/#slot-edge_deletion_change_description","text":"URI: kgcl:edge_deletion_change_description","title":"Slot: edge_deletion_change_description"},{"location":"edge_deletion_change_description/#domain-and-range","text":"EdgeDeletion -> OPT String","title":"Domain and Range"},{"location":"edge_deletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"edge_deletion_change_description/#children","text":"","title":"Children"},{"location":"edge_deletion_change_description/#used-by","text":"EdgeDeletion","title":"Used by"},{"location":"edge_label/","text":"Slot: edge_label URI: kgcl:edge_label Domain and Range None -> OPT Node Parents Children Used by Edge EdgeCreation EdgeDeletion EdgeObsoletion","title":"Slot: edge_label"},{"location":"edge_label/#slot-edge_label","text":"URI: kgcl:edge_label","title":"Slot: edge_label"},{"location":"edge_label/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"edge_label/#parents","text":"","title":"Parents"},{"location":"edge_label/#children","text":"","title":"Children"},{"location":"edge_label/#used-by","text":"Edge EdgeCreation EdgeDeletion EdgeObsoletion","title":"Used by"},{"location":"edge_label_change_change_description/","text":"Slot: edge_label_change_change_description URI: kgcl:edge_label_change_change_description Domain and Range EdgeLabelChange -> OPT String Parents is_a: change description Children Used by EdgeLabelChange","title":"Slot: edge_label_change_change_description"},{"location":"edge_label_change_change_description/#slot-edge_label_change_change_description","text":"URI: kgcl:edge_label_change_change_description","title":"Slot: edge_label_change_change_description"},{"location":"edge_label_change_change_description/#domain-and-range","text":"EdgeLabelChange -> OPT String","title":"Domain and Range"},{"location":"edge_label_change_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"edge_label_change_change_description/#children","text":"","title":"Children"},{"location":"edge_label_change_change_description/#used-by","text":"EdgeLabelChange","title":"Used by"},{"location":"edge_obsoletion_change_description/","text":"Slot: edge_obsoletion_change_description URI: kgcl:edge_obsoletion_change_description Domain and Range EdgeObsoletion -> OPT String Parents is_a: change description Children Used by EdgeObsoletion","title":"Slot: edge_obsoletion_change_description"},{"location":"edge_obsoletion_change_description/#slot-edge_obsoletion_change_description","text":"URI: kgcl:edge_obsoletion_change_description","title":"Slot: edge_obsoletion_change_description"},{"location":"edge_obsoletion_change_description/#domain-and-range","text":"EdgeObsoletion -> OPT String","title":"Domain and Range"},{"location":"edge_obsoletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"edge_obsoletion_change_description/#children","text":"","title":"Children"},{"location":"edge_obsoletion_change_description/#used-by","text":"EdgeObsoletion","title":"Used by"},{"location":"ended_at_time/","text":"Slot: ended_at_time URI: kgcl:ended_at_time Domain and Range None -> OPT String Parents Children Used by Activity Other properties Mappings: prov:endedAtTime","title":"Slot: ended_at_time"},{"location":"ended_at_time/#slot-ended_at_time","text":"URI: kgcl:ended_at_time","title":"Slot: ended_at_time"},{"location":"ended_at_time/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"ended_at_time/#parents","text":"","title":"Parents"},{"location":"ended_at_time/#children","text":"","title":"Children"},{"location":"ended_at_time/#used-by","text":"Activity","title":"Used by"},{"location":"ended_at_time/#other-properties","text":"Mappings: prov:endedAtTime","title":"Other properties"},{"location":"filler/","text":"Slot: filler URI: kgcl:filler Domain and Range None -> OPT String Parents Children Used by Annotation PropertyValue","title":"Slot: filler"},{"location":"filler/#slot-filler","text":"URI: kgcl:filler","title":"Slot: filler"},{"location":"filler/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"filler/#parents","text":"","title":"Parents"},{"location":"filler/#children","text":"","title":"Children"},{"location":"filler/#used-by","text":"Annotation PropertyValue","title":"Used by"},{"location":"foobar/","text":"TEST foo","title":"Foobar"},{"location":"foobar/#test","text":"foo","title":"TEST"},{"location":"grammar/","text":"The original spec specified a grammar We could use LARK May be better to use a system like https://cucumber.io/docs/gherkin/reference/","title":"Grammar"},{"location":"has_direct_replacement/","text":"Slot: has_direct_replacement An obsoletion replacement where it IS valid to automatically update annotations/edges pointing at the node with its direct replacement URI: kgcl:has_direct_replacement Domain and Range None -> OPT Node Parents Children node direct merge\u279ehas direct replacement node obsoletion with direct replacement\u279ehas direct replacement Used by NodeObsoletion NodeObsoletionWithNoDirectReplacement Other properties Comments: if a node obsoletion C, C about N1, and C has direct replacement N2, and there exists an edge with an edge property referencing N1, it is possible to replace with N2 if a node obsoletion C C about N1, and Chas direct replacement N2, then N1 IAO:0100001 N2 Close Mappings: IAO:0100001","title":"Slot: has_direct_replacement"},{"location":"has_direct_replacement/#slot-has_direct_replacement","text":"An obsoletion replacement where it IS valid to automatically update annotations/edges pointing at the node with its direct replacement URI: kgcl:has_direct_replacement","title":"Slot: has_direct_replacement"},{"location":"has_direct_replacement/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"has_direct_replacement/#parents","text":"","title":"Parents"},{"location":"has_direct_replacement/#children","text":"node direct merge\u279ehas direct replacement node obsoletion with direct replacement\u279ehas direct replacement","title":"Children"},{"location":"has_direct_replacement/#used-by","text":"NodeObsoletion NodeObsoletionWithNoDirectReplacement","title":"Used by"},{"location":"has_direct_replacement/#other-properties","text":"Comments: if a node obsoletion C, C about N1, and C has direct replacement N2, and there exists an edge with an edge property referencing N1, it is possible to replace with N2 if a node obsoletion C C about N1, and Chas direct replacement N2, then N1 IAO:0100001 N2 Close Mappings: IAO:0100001","title":"Other properties"},{"location":"has_nondirect_replacement/","text":"Slot: has_nondirect_replacement An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement URI: kgcl:has_nondirect_replacement Domain and Range None -> 0..* Node Parents Children node obsoletion with no direct replacement\u279ehas nondirect replacement Used by NodeDirectMerge NodeObsoletion NodeObsoletionWithDirectReplacement Other properties Comments: if a node obsoletion C, C about N1, and C has direct replacement N2, and there exists an edge with an edge property referencing N1, it is possible to replace with N2 if a node obsoletion C C about N1, and Chas direct replacement N2, then N1 oio:consider N2 Close Mappings: oio:consider","title":"Slot: has_nondirect_replacement"},{"location":"has_nondirect_replacement/#slot-has_nondirect_replacement","text":"An obsoletion replacement where it is NOT valid to automatically update annotations/edges pointing at the node with its direct replacement URI: kgcl:has_nondirect_replacement","title":"Slot: has_nondirect_replacement"},{"location":"has_nondirect_replacement/#domain-and-range","text":"None -> 0..* Node","title":"Domain and Range"},{"location":"has_nondirect_replacement/#parents","text":"","title":"Parents"},{"location":"has_nondirect_replacement/#children","text":"node obsoletion with no direct replacement\u279ehas nondirect replacement","title":"Children"},{"location":"has_nondirect_replacement/#used-by","text":"NodeDirectMerge NodeObsoletion NodeObsoletionWithDirectReplacement","title":"Used by"},{"location":"has_nondirect_replacement/#other-properties","text":"Comments: if a node obsoletion C, C about N1, and C has direct replacement N2, and there exists an edge with an edge property referencing N1, it is possible to replace with N2 if a node obsoletion C C about N1, and Chas direct replacement N2, then N1 oio:consider N2 Close Mappings: oio:consider","title":"Other properties"},{"location":"has_replacement/","text":"Slot: has_replacement A single node obsoletion event may be accompanied by one or more suggested replacement nodes URI: kgcl:has_replacement Domain and Range NodeObsoletion -> OPT Node Parents is_a: target Children Used by Other properties Comments: In OBO, the replacement term is indicated using IAO:nnnnnn","title":"Slot: has_replacement"},{"location":"has_replacement/#slot-has_replacement","text":"A single node obsoletion event may be accompanied by one or more suggested replacement nodes URI: kgcl:has_replacement","title":"Slot: has_replacement"},{"location":"has_replacement/#domain-and-range","text":"NodeObsoletion -> OPT Node","title":"Domain and Range"},{"location":"has_replacement/#parents","text":"is_a: target","title":"Parents"},{"location":"has_replacement/#children","text":"","title":"Children"},{"location":"has_replacement/#used-by","text":"","title":"Used by"},{"location":"has_replacement/#other-properties","text":"Comments: In OBO, the replacement term is indicated using IAO:nnnnnn","title":"Other properties"},{"location":"has_textual_diff/","text":"Slot: has_textual_diff A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. URI: kgcl:has_textual_diff Domain and Range Change -> OPT TextualDiff Parents Children Used by NodeRename SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Other properties Comments: this is NOT for representing the diff of the change as a whole.","title":"Slot: has_textual_diff"},{"location":"has_textual_diff/#slot-has_textual_diff","text":"A representation of character-level changes on a textual literal property. For example, if a text definition may change by only a single character such as addition of a period, it is useful to be able to see this visually. URI: kgcl:has_textual_diff","title":"Slot: has_textual_diff"},{"location":"has_textual_diff/#domain-and-range","text":"Change -> OPT TextualDiff","title":"Domain and Range"},{"location":"has_textual_diff/#parents","text":"","title":"Parents"},{"location":"has_textual_diff/#children","text":"","title":"Children"},{"location":"has_textual_diff/#used-by","text":"NodeRename SynonymPredicateChange SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"has_textual_diff/#other-properties","text":"Comments: this is NOT for representing the diff of the change as a whole.","title":"Other properties"},{"location":"has_undo/","text":"Slot: has_undo A change that reverses this change URI: kgcl:has_undo Domain and Range Change -> OPT Change Parents Children creation\u279ehas undo obsoletion\u279ehas undo remove from subset\u279ehas undo unobsoletion\u279ehas undo Used by AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Slot: has_undo"},{"location":"has_undo/#slot-has_undo","text":"A change that reverses this change URI: kgcl:has_undo","title":"Slot: has_undo"},{"location":"has_undo/#domain-and-range","text":"Change -> OPT Change","title":"Domain and Range"},{"location":"has_undo/#parents","text":"","title":"Parents"},{"location":"has_undo/#children","text":"creation\u279ehas undo obsoletion\u279ehas undo remove from subset\u279ehas undo unobsoletion\u279ehas undo","title":"Children"},{"location":"has_undo/#used-by","text":"AddNodeToSubset Change ClassCreation ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Used by"},{"location":"home/","text":"Introduction About Browse Schema GitHub The goal of this project is to define a high level language and data model that can be used to describe changes in ontologies and more generally, \"knowledge graphs\". The language should be a higher level of abstraction than a low-level owl or rdf diff. For example, conceptually, changing the parent of a class in ontology is a single event, which can be broken down into a delete and add operation (see NodeMove ). An example of a NodeMove instance, correcting an incorrect placement from being part-of leg to part-of arm: [ a kgcl:NodeMove ; kgcl:about UBERON:0002398 ## manus kgcl:old_value UBERON:0002103 ## hindlimb kgcl:old_predicate BFO:0000050 ## part_of kgcl:new_value UBERON:0002102 ## forelimb kgcl:new_predicate BFO:0000050 ## part_of ] Apply and Diff operations Change objects can be used in two directions: Diff: given two ontologies O1 and O2, generate a list of changes C Apply: Given a list of changes C, apply to ontology O1 to generate O2 The Diff operation is intended to be used to provide KG/Ontology authors a high level view of changes. The Apply operation can take diffs as inputs. The diffs can have different serializations: A direct instantiation of the classes design in the model, in one of: JSON YAML RDF A string serialization A tsv serialization, for use in spreadsheets For example an instance of a rename class on Uberon to change the primary label of an entity may be: [ a kgcl:NodeRename ; kgcl:about UBERON:0002398 ; kgcl:old_value \"manus\" ; kgcl:new_value \"hand\" ] This can be serialized as rename UBERON:0002398 from 'manus' to 'hand' TBD: we also want an even more compact form: rename 'manus' to 'hand' There are a few user stories for the Apply operation: As an ontology contributor, I want to quickly describe and apply a change to an ontology, so that I do not have to clone a github repo, open protege, make a PR As an ontology tool creator, I want to generate \"suggestions\" for changes to an ontology, so that a human user can spot-check them and apply all valid ones Example: a tool that makes suggested lexical changes to text defs to conform to standards An OWL logic tool may suggest redundant axioms that can safely be removed. The curator feels safest vetting these via the intermediate form Intended use in GitHub One intended killer app for this language is the ability for a human or agent to specify a set of changes in a GitHub ticket in a human-readable transparent way, and for a bot to create a PR from the computable description in the ticket. This would be ideal for \"drive-by\" edits and Term Brokers. The overall idea is laid out in: this google doc Schema Source The linkml source yaml can be found here: src/schema The source is in LinkML. The best way to browse this is via the generated markdown An example class is kgcl:NodeRename classes: node rename: is_a: node change description: >- A node change where the name (aka rdfs:label) of the node changes slots: - old value - new value - has textual diff slot_usage: old value: multivalued: false new value: multivalued: false change description: string_serialization: \"renaming {about} from {old value} to {new value}\" Derived Artefacts jsonschema python dataclasses shex graphql owl Python Classes python dataclasses Example code: from kgcl import NodeRename change = NodeRename(about=\"UBERON:1234567\", old_value=\"limb skin\", new_value=\"skin of limb\") JSON Schema jsonschema Example snippet: \"NodeRename\": { \"additionalProperties\": false, \"description\": \"A node change where the name (aka rdfs:label) of the node changes\", \"properties\": { \"about\": { \"type\": \"string\" }, \"change_description\": { \"type\": \"string\" }, \"has_textual_diff\": { \"$ref\": \"#/definitions/TextualDiff\" }, \"new_value\": { \"type\": \"string\" }, \"old_value\": { \"type\": \"string\" }, \"was_generated_by\": { \"type\": \"string\" } }, \"required\": [], \"title\": \"NodeRename\", \"type\": \"object\" }, Implementation Currently this is just a schema, no implementation. It is likely we will bind this into owl-diff so compilation to scala traits likely in future. Note that transactions can themselves be represented in RDF. This can be either JSON-LD following the schema above or native. The ShEx Schema constrains the shape of the RDF graph.","title":"Home"},{"location":"home/#introduction","text":"","title":"Introduction"},{"location":"home/#about","text":"Browse Schema GitHub The goal of this project is to define a high level language and data model that can be used to describe changes in ontologies and more generally, \"knowledge graphs\". The language should be a higher level of abstraction than a low-level owl or rdf diff. For example, conceptually, changing the parent of a class in ontology is a single event, which can be broken down into a delete and add operation (see NodeMove ). An example of a NodeMove instance, correcting an incorrect placement from being part-of leg to part-of arm: [ a kgcl:NodeMove ; kgcl:about UBERON:0002398 ## manus kgcl:old_value UBERON:0002103 ## hindlimb kgcl:old_predicate BFO:0000050 ## part_of kgcl:new_value UBERON:0002102 ## forelimb kgcl:new_predicate BFO:0000050 ## part_of ]","title":"About"},{"location":"home/#apply-and-diff-operations","text":"Change objects can be used in two directions: Diff: given two ontologies O1 and O2, generate a list of changes C Apply: Given a list of changes C, apply to ontology O1 to generate O2 The Diff operation is intended to be used to provide KG/Ontology authors a high level view of changes. The Apply operation can take diffs as inputs. The diffs can have different serializations: A direct instantiation of the classes design in the model, in one of: JSON YAML RDF A string serialization A tsv serialization, for use in spreadsheets For example an instance of a rename class on Uberon to change the primary label of an entity may be: [ a kgcl:NodeRename ; kgcl:about UBERON:0002398 ; kgcl:old_value \"manus\" ; kgcl:new_value \"hand\" ] This can be serialized as rename UBERON:0002398 from 'manus' to 'hand' TBD: we also want an even more compact form: rename 'manus' to 'hand' There are a few user stories for the Apply operation: As an ontology contributor, I want to quickly describe and apply a change to an ontology, so that I do not have to clone a github repo, open protege, make a PR As an ontology tool creator, I want to generate \"suggestions\" for changes to an ontology, so that a human user can spot-check them and apply all valid ones Example: a tool that makes suggested lexical changes to text defs to conform to standards An OWL logic tool may suggest redundant axioms that can safely be removed. The curator feels safest vetting these via the intermediate form","title":"Apply and Diff operations"},{"location":"home/#intended-use-in-github","text":"One intended killer app for this language is the ability for a human or agent to specify a set of changes in a GitHub ticket in a human-readable transparent way, and for a bot to create a PR from the computable description in the ticket. This would be ideal for \"drive-by\" edits and Term Brokers. The overall idea is laid out in: this google doc","title":"Intended use in GitHub"},{"location":"home/#schema-source","text":"The linkml source yaml can be found here: src/schema The source is in LinkML. The best way to browse this is via the generated markdown An example class is kgcl:NodeRename classes: node rename: is_a: node change description: >- A node change where the name (aka rdfs:label) of the node changes slots: - old value - new value - has textual diff slot_usage: old value: multivalued: false new value: multivalued: false change description: string_serialization: \"renaming {about} from {old value} to {new value}\"","title":"Schema Source"},{"location":"home/#derived-artefacts","text":"jsonschema python dataclasses shex graphql owl","title":"Derived Artefacts"},{"location":"home/#python-classes","text":"python dataclasses Example code: from kgcl import NodeRename change = NodeRename(about=\"UBERON:1234567\", old_value=\"limb skin\", new_value=\"skin of limb\")","title":"Python Classes"},{"location":"home/#json-schema","text":"jsonschema Example snippet: \"NodeRename\": { \"additionalProperties\": false, \"description\": \"A node change where the name (aka rdfs:label) of the node changes\", \"properties\": { \"about\": { \"type\": \"string\" }, \"change_description\": { \"type\": \"string\" }, \"has_textual_diff\": { \"$ref\": \"#/definitions/TextualDiff\" }, \"new_value\": { \"type\": \"string\" }, \"old_value\": { \"type\": \"string\" }, \"was_generated_by\": { \"type\": \"string\" } }, \"required\": [], \"title\": \"NodeRename\", \"type\": \"object\" },","title":"JSON Schema"},{"location":"home/#implementation","text":"Currently this is just a schema, no implementation. It is likely we will bind this into owl-diff so compilation to scala traits likely in future. Note that transactions can themselves be represented in RDF. This can be either JSON-LD following the schema above or native. The ShEx Schema constrains the shape of the RDF graph.","title":"Implementation"},{"location":"id/","text":"Slot: id URI: kgcl:id Domain and Range None -> REQ String Parents Children Used by Activity AddNodeToSubset Agent Change ClassCreation ClassNode ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring InstanceNode LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition Node NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Slot: id"},{"location":"id/#slot-id","text":"URI: kgcl:id","title":"Slot: id"},{"location":"id/#domain-and-range","text":"None -> REQ String","title":"Domain and Range"},{"location":"id/#parents","text":"","title":"Parents"},{"location":"id/#children","text":"","title":"Children"},{"location":"id/#used-by","text":"Activity AddNodeToSubset Agent Change ClassCreation ClassNode ComplexChange DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring InstanceNode LogicalAxiomChange MultiNodeObsoletion NameBecomesSynonym NewSynonym NewTextDefinition Node NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement Transaction","title":"Used by"},{"location":"in_subset/","text":"Slot: in_subset The subset that pertains to this change URI: kgcl:in_subset Domain and Range None -> OPT OntologySubset Parents Children add to subset\u279ein subset remove from subset\u279ein subset Used by SubsetMembershipChange","title":"Slot: in_subset"},{"location":"in_subset/#slot-in_subset","text":"The subset that pertains to this change URI: kgcl:in_subset","title":"Slot: in_subset"},{"location":"in_subset/#domain-and-range","text":"None -> OPT OntologySubset","title":"Domain and Range"},{"location":"in_subset/#parents","text":"","title":"Parents"},{"location":"in_subset/#children","text":"add to subset\u279ein subset remove from subset\u279ein subset","title":"Children"},{"location":"in_subset/#used-by","text":"SubsetMembershipChange","title":"Used by"},{"location":"multi_node_obsoletion_associated_change_set/","text":"Slot: multi_node_obsoletion_associated_change_set All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D URI: kgcl:multi_node_obsoletion_associated_change_set Domain and Range MultiNodeObsoletion -> 0..* Change Parents is_a: change set Children Used by MultiNodeObsoletion","title":"Slot: multi_node_obsoletion_associated_change_set"},{"location":"multi_node_obsoletion_associated_change_set/#slot-multi_node_obsoletion_associated_change_set","text":"All changes associated with a set of obsoletions. This change set is the composed change set rather than the set of individual changes. For example, if previous state is: A subClassOf B subClassOf C subClassOf D and we obsolete {B,C}, then the individual changes are A moves from B to C and B moves from C to D , but the composed change set is A moves from B to D URI: kgcl:multi_node_obsoletion_associated_change_set","title":"Slot: multi_node_obsoletion_associated_change_set"},{"location":"multi_node_obsoletion_associated_change_set/#domain-and-range","text":"MultiNodeObsoletion -> 0..* Change","title":"Domain and Range"},{"location":"multi_node_obsoletion_associated_change_set/#parents","text":"is_a: change set","title":"Parents"},{"location":"multi_node_obsoletion_associated_change_set/#children","text":"","title":"Children"},{"location":"multi_node_obsoletion_associated_change_set/#used-by","text":"MultiNodeObsoletion","title":"Used by"},{"location":"multi_node_obsoletion_change_description/","text":"Slot: multi_node_obsoletion_change_description URI: kgcl:multi_node_obsoletion_change_description Domain and Range MultiNodeObsoletion -> OPT String Parents is_a: change description Children Used by MultiNodeObsoletion","title":"Slot: multi_node_obsoletion_change_description"},{"location":"multi_node_obsoletion_change_description/#slot-multi_node_obsoletion_change_description","text":"URI: kgcl:multi_node_obsoletion_change_description","title":"Slot: multi_node_obsoletion_change_description"},{"location":"multi_node_obsoletion_change_description/#domain-and-range","text":"MultiNodeObsoletion -> OPT String","title":"Domain and Range"},{"location":"multi_node_obsoletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"multi_node_obsoletion_change_description/#children","text":"","title":"Children"},{"location":"multi_node_obsoletion_change_description/#used-by","text":"MultiNodeObsoletion","title":"Used by"},{"location":"multi_node_obsoletion_change_set/","text":"Slot: multi_node_obsoletion_change_set URI: kgcl:multi_node_obsoletion_change_set Domain and Range MultiNodeObsoletion -> 0..* NodeObsoletion Parents is_a: change set Children Used by MultiNodeObsoletion","title":"Slot: multi_node_obsoletion_change_set"},{"location":"multi_node_obsoletion_change_set/#slot-multi_node_obsoletion_change_set","text":"URI: kgcl:multi_node_obsoletion_change_set","title":"Slot: multi_node_obsoletion_change_set"},{"location":"multi_node_obsoletion_change_set/#domain-and-range","text":"MultiNodeObsoletion -> 0..* NodeObsoletion","title":"Domain and Range"},{"location":"multi_node_obsoletion_change_set/#parents","text":"is_a: change set","title":"Parents"},{"location":"multi_node_obsoletion_change_set/#children","text":"","title":"Children"},{"location":"multi_node_obsoletion_change_set/#used-by","text":"MultiNodeObsoletion","title":"Used by"},{"location":"name/","text":"Slot: name URI: kgcl:name Domain and Range None -> OPT String Parents Children Used by ClassCreation ClassNode InstanceNode Node NodeCreation","title":"Slot: name"},{"location":"name/#slot-name","text":"URI: kgcl:name","title":"Slot: name"},{"location":"name/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"name/#parents","text":"","title":"Parents"},{"location":"name/#children","text":"","title":"Children"},{"location":"name/#used-by","text":"ClassCreation ClassNode InstanceNode Node NodeCreation","title":"Used by"},{"location":"name_becomes_synonym_change_1/","text":"Slot: name_becomes_synonym_change_1 URI: kgcl:name_becomes_synonym_change_1 Domain and Range NameBecomesSynonym -> OPT NodeRename Parents is_a: change 1 Children Used by NameBecomesSynonym","title":"Slot: name_becomes_synonym_change_1"},{"location":"name_becomes_synonym_change_1/#slot-name_becomes_synonym_change_1","text":"URI: kgcl:name_becomes_synonym_change_1","title":"Slot: name_becomes_synonym_change_1"},{"location":"name_becomes_synonym_change_1/#domain-and-range","text":"NameBecomesSynonym -> OPT NodeRename","title":"Domain and Range"},{"location":"name_becomes_synonym_change_1/#parents","text":"is_a: change 1","title":"Parents"},{"location":"name_becomes_synonym_change_1/#children","text":"","title":"Children"},{"location":"name_becomes_synonym_change_1/#used-by","text":"NameBecomesSynonym","title":"Used by"},{"location":"name_becomes_synonym_change_2/","text":"Slot: name_becomes_synonym_change_2 URI: kgcl:name_becomes_synonym_change_2 Domain and Range NameBecomesSynonym -> OPT NewSynonym Parents is_a: change 2 Children Used by NameBecomesSynonym","title":"Slot: name_becomes_synonym_change_2"},{"location":"name_becomes_synonym_change_2/#slot-name_becomes_synonym_change_2","text":"URI: kgcl:name_becomes_synonym_change_2","title":"Slot: name_becomes_synonym_change_2"},{"location":"name_becomes_synonym_change_2/#domain-and-range","text":"NameBecomesSynonym -> OPT NewSynonym","title":"Domain and Range"},{"location":"name_becomes_synonym_change_2/#parents","text":"is_a: change 2","title":"Parents"},{"location":"name_becomes_synonym_change_2/#children","text":"","title":"Children"},{"location":"name_becomes_synonym_change_2/#used-by","text":"NameBecomesSynonym","title":"Used by"},{"location":"name_becomes_synonym_change_description/","text":"Slot: name_becomes_synonym_change_description URI: kgcl:name_becomes_synonym_change_description Domain and Range NameBecomesSynonym -> OPT String Parents is_a: change description Children Used by NameBecomesSynonym","title":"Slot: name_becomes_synonym_change_description"},{"location":"name_becomes_synonym_change_description/#slot-name_becomes_synonym_change_description","text":"URI: kgcl:name_becomes_synonym_change_description","title":"Slot: name_becomes_synonym_change_description"},{"location":"name_becomes_synonym_change_description/#domain-and-range","text":"NameBecomesSynonym -> OPT String","title":"Domain and Range"},{"location":"name_becomes_synonym_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"name_becomes_synonym_change_description/#children","text":"","title":"Children"},{"location":"name_becomes_synonym_change_description/#used-by","text":"NameBecomesSynonym","title":"Used by"},{"location":"name_becomes_synonym_name_change/","text":"Type: name becomes synonym_name change URI: kgcl:name_becomes_synonym_name_change Domain and Range NameBecomesSynonym -> OPT NodeRename Parents is_a: name change Children Used by NameBecomesSynonym","title":"Type: name becomes synonym_name change"},{"location":"name_becomes_synonym_name_change/#type-name-becomes-synonym_name-change","text":"URI: kgcl:name_becomes_synonym_name_change","title":"Type: name becomes synonym_name change"},{"location":"name_becomes_synonym_name_change/#domain-and-range","text":"NameBecomesSynonym -> OPT NodeRename","title":"Domain and Range"},{"location":"name_becomes_synonym_name_change/#parents","text":"is_a: name change","title":"Parents"},{"location":"name_becomes_synonym_name_change/#children","text":"","title":"Children"},{"location":"name_becomes_synonym_name_change/#used-by","text":"NameBecomesSynonym","title":"Used by"},{"location":"name_change/","text":"Type: name change URI: kgcl:name_change Domain and Range None -> OPT NodeRename Parents Children name becomes synonym\u279ename change Used by","title":"Type: name change"},{"location":"name_change/#type-name-change","text":"URI: kgcl:name_change","title":"Type: name change"},{"location":"name_change/#domain-and-range","text":"None -> OPT NodeRename","title":"Domain and Range"},{"location":"name_change/#parents","text":"","title":"Parents"},{"location":"name_change/#children","text":"name becomes synonym\u279ename change","title":"Children"},{"location":"name_change/#used-by","text":"","title":"Used by"},{"location":"new_value/","text":"Slot: new_value The value of a property held in the new instance of the ontology URI: kgcl:new_value Domain and Range None -> OPT String Parents Children node rename\u279enew value Used by AddNodeToSubset ClassCreation DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement","title":"Slot: new_value"},{"location":"new_value/#slot-new_value","text":"The value of a property held in the new instance of the ontology URI: kgcl:new_value","title":"Slot: new_value"},{"location":"new_value/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"new_value/#parents","text":"","title":"Parents"},{"location":"new_value/#children","text":"node rename\u279enew value","title":"Children"},{"location":"new_value/#used-by","text":"AddNodeToSubset ClassCreation DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"node_change_about/","text":"Slot: node_change_about URI: kgcl:node_change_about Domain and Range NodeChange -> OPT String Parents is_a: about Children node direct merge\u279eabout removed node from subset\u279eabout Used by AddNodeToSubset ClassCreation NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeletion NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition SynonymPredicateChange SynonymReplacement TextDefinitionReplacement","title":"Slot: node_change_about"},{"location":"node_change_about/#slot-node_change_about","text":"URI: kgcl:node_change_about","title":"Slot: node_change_about"},{"location":"node_change_about/#domain-and-range","text":"NodeChange -> OPT String","title":"Domain and Range"},{"location":"node_change_about/#parents","text":"is_a: about","title":"Parents"},{"location":"node_change_about/#children","text":"node direct merge\u279eabout removed node from subset\u279eabout","title":"Children"},{"location":"node_change_about/#used-by","text":"AddNodeToSubset ClassCreation NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeletion NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeRename NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion RemoveSynonym RemoveTextDefinition SynonymPredicateChange SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"node_creation_change_description/","text":"Slot: node_creation_change_description URI: kgcl:node_creation_change_description Domain and Range NodeCreation -> OPT String Parents is_a: change description Children Used by ClassCreation NodeCreation","title":"Slot: node_creation_change_description"},{"location":"node_creation_change_description/#slot-node_creation_change_description","text":"URI: kgcl:node_creation_change_description","title":"Slot: node_creation_change_description"},{"location":"node_creation_change_description/#domain-and-range","text":"NodeCreation -> OPT String","title":"Domain and Range"},{"location":"node_creation_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_creation_change_description/#children","text":"","title":"Children"},{"location":"node_creation_change_description/#used-by","text":"ClassCreation NodeCreation","title":"Used by"},{"location":"node_deepening_change_description/","text":"Slot: node_deepening_change_description URI: kgcl:node_deepening_change_description Domain and Range NodeDeepening -> OPT String Parents is_a: node move\u279echange description Children Used by NodeDeepening","title":"Slot: node_deepening_change_description"},{"location":"node_deepening_change_description/#slot-node_deepening_change_description","text":"URI: kgcl:node_deepening_change_description","title":"Slot: node_deepening_change_description"},{"location":"node_deepening_change_description/#domain-and-range","text":"NodeDeepening -> OPT String","title":"Domain and Range"},{"location":"node_deepening_change_description/#parents","text":"is_a: node move\u279echange description","title":"Parents"},{"location":"node_deepening_change_description/#children","text":"","title":"Children"},{"location":"node_deepening_change_description/#used-by","text":"NodeDeepening","title":"Used by"},{"location":"node_deletion_change_description/","text":"Slot: node_deletion_change_description URI: kgcl:node_deletion_change_description Domain and Range NodeDeletion -> OPT String Parents is_a: change description Children Used by NodeDeletion","title":"Slot: node_deletion_change_description"},{"location":"node_deletion_change_description/#slot-node_deletion_change_description","text":"URI: kgcl:node_deletion_change_description","title":"Slot: node_deletion_change_description"},{"location":"node_deletion_change_description/#domain-and-range","text":"NodeDeletion -> OPT String","title":"Domain and Range"},{"location":"node_deletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_deletion_change_description/#children","text":"","title":"Children"},{"location":"node_deletion_change_description/#used-by","text":"NodeDeletion","title":"Used by"},{"location":"node_direct_merge_about/","text":"Slot: node_direct_merge_about URI: kgcl:node_direct_merge_about Domain and Range NodeDirectMerge -> OPT String Parents is_a: node change\u279eabout Children Used by NodeDirectMerge Other properties Aliases: alt_id","title":"Slot: node_direct_merge_about"},{"location":"node_direct_merge_about/#slot-node_direct_merge_about","text":"URI: kgcl:node_direct_merge_about","title":"Slot: node_direct_merge_about"},{"location":"node_direct_merge_about/#domain-and-range","text":"NodeDirectMerge -> OPT String","title":"Domain and Range"},{"location":"node_direct_merge_about/#parents","text":"is_a: node change\u279eabout","title":"Parents"},{"location":"node_direct_merge_about/#children","text":"","title":"Children"},{"location":"node_direct_merge_about/#used-by","text":"NodeDirectMerge","title":"Used by"},{"location":"node_direct_merge_about/#other-properties","text":"Aliases: alt_id","title":"Other properties"},{"location":"node_direct_merge_change_description/","text":"Slot: node_direct_merge_change_description URI: kgcl:node_direct_merge_change_description Domain and Range NodeDirectMerge -> OPT String Parents is_a: node obsoletion\u279echange description Children Used by NodeDirectMerge","title":"Slot: node_direct_merge_change_description"},{"location":"node_direct_merge_change_description/#slot-node_direct_merge_change_description","text":"URI: kgcl:node_direct_merge_change_description","title":"Slot: node_direct_merge_change_description"},{"location":"node_direct_merge_change_description/#domain-and-range","text":"NodeDirectMerge -> OPT String","title":"Domain and Range"},{"location":"node_direct_merge_change_description/#parents","text":"is_a: node obsoletion\u279echange description","title":"Parents"},{"location":"node_direct_merge_change_description/#children","text":"","title":"Children"},{"location":"node_direct_merge_change_description/#used-by","text":"NodeDirectMerge","title":"Used by"},{"location":"node_direct_merge_has_direct_replacement/","text":"Slot: node_direct_merge_has_direct_replacement URI: kgcl:node_direct_merge_has_direct_replacement Domain and Range NodeDirectMerge -> REQ Node Parents is_a: has direct replacement Children Used by NodeDirectMerge","title":"Slot: node_direct_merge_has_direct_replacement"},{"location":"node_direct_merge_has_direct_replacement/#slot-node_direct_merge_has_direct_replacement","text":"URI: kgcl:node_direct_merge_has_direct_replacement","title":"Slot: node_direct_merge_has_direct_replacement"},{"location":"node_direct_merge_has_direct_replacement/#domain-and-range","text":"NodeDirectMerge -> REQ Node","title":"Domain and Range"},{"location":"node_direct_merge_has_direct_replacement/#parents","text":"is_a: has direct replacement","title":"Parents"},{"location":"node_direct_merge_has_direct_replacement/#children","text":"","title":"Children"},{"location":"node_direct_merge_has_direct_replacement/#used-by","text":"NodeDirectMerge","title":"Used by"},{"location":"node_id/","text":"Slot: node_id id of a node to be created URI: kgcl:node_id Domain and Range None -> OPT Node Parents Children Used by ClassCreation NodeCreation","title":"Slot: node_id"},{"location":"node_id/#slot-node_id","text":"id of a node to be created URI: kgcl:node_id","title":"Slot: node_id"},{"location":"node_id/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"node_id/#parents","text":"","title":"Parents"},{"location":"node_id/#children","text":"","title":"Children"},{"location":"node_id/#used-by","text":"ClassCreation NodeCreation","title":"Used by"},{"location":"node_move_change_description/","text":"Slot: node_move_change_description URI: kgcl:node_move_change_description Domain and Range NodeMove -> OPT String Parents is_a: change description Children node deepening\u279echange description node shallowing\u279echange description Used by NodeMove","title":"Slot: node_move_change_description"},{"location":"node_move_change_description/#slot-node_move_change_description","text":"URI: kgcl:node_move_change_description","title":"Slot: node_move_change_description"},{"location":"node_move_change_description/#domain-and-range","text":"NodeMove -> OPT String","title":"Domain and Range"},{"location":"node_move_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_move_change_description/#children","text":"node deepening\u279echange description node shallowing\u279echange description","title":"Children"},{"location":"node_move_change_description/#used-by","text":"NodeMove","title":"Used by"},{"location":"node_obsoletion_associated_change_set/","text":"Slot: node_obsoletion_associated_change_set All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere URI: kgcl:node_obsoletion_associated_change_set Domain and Range NodeObsoletion -> 0..* Change Parents is_a: change set Children Used by NodeDirectMerge NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement","title":"Slot: node_obsoletion_associated_change_set"},{"location":"node_obsoletion_associated_change_set/#slot-node_obsoletion_associated_change_set","text":"All changes forced as a result of this obsoletion. For example, starting with A subClassOf B subClassOf C , if we obsolete node B, then we may decide to bundle in a node move change of A from B to C. Note: this change set is not considered a part of the obsoletion, as obsoletion is considered atomic/simple. Instead this is a reference to a change set that may exist elsewhere URI: kgcl:node_obsoletion_associated_change_set","title":"Slot: node_obsoletion_associated_change_set"},{"location":"node_obsoletion_associated_change_set/#domain-and-range","text":"NodeObsoletion -> 0..* Change","title":"Domain and Range"},{"location":"node_obsoletion_associated_change_set/#parents","text":"is_a: change set","title":"Parents"},{"location":"node_obsoletion_associated_change_set/#children","text":"","title":"Children"},{"location":"node_obsoletion_associated_change_set/#used-by","text":"NodeDirectMerge NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement","title":"Used by"},{"location":"node_obsoletion_change_description/","text":"Slot: node_obsoletion_change_description URI: kgcl:node_obsoletion_change_description Domain and Range NodeObsoletion -> OPT String Parents is_a: change description Children node direct merge\u279echange description node obsoletion with direct replacement\u279echange description node obsoletion with no direct replacement\u279echange description Used by NodeObsoletion","title":"Slot: node_obsoletion_change_description"},{"location":"node_obsoletion_change_description/#slot-node_obsoletion_change_description","text":"URI: kgcl:node_obsoletion_change_description","title":"Slot: node_obsoletion_change_description"},{"location":"node_obsoletion_change_description/#domain-and-range","text":"NodeObsoletion -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_obsoletion_change_description/#children","text":"node direct merge\u279echange description node obsoletion with direct replacement\u279echange description node obsoletion with no direct replacement\u279echange description","title":"Children"},{"location":"node_obsoletion_change_description/#used-by","text":"NodeObsoletion","title":"Used by"},{"location":"node_obsoletion_consider/","text":"Slot: node_obsoletion_consider URI: kgcl:node_obsoletion_consider Domain and Range NodeObsoletion -> OPT Node Parents is_a: consider Children Used by NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit Other properties Exact Mappings: oio:consider","title":"Slot: node_obsoletion_consider"},{"location":"node_obsoletion_consider/#slot-node_obsoletion_consider","text":"URI: kgcl:node_obsoletion_consider","title":"Slot: node_obsoletion_consider"},{"location":"node_obsoletion_consider/#domain-and-range","text":"NodeObsoletion -> OPT Node","title":"Domain and Range"},{"location":"node_obsoletion_consider/#parents","text":"is_a: consider","title":"Parents"},{"location":"node_obsoletion_consider/#children","text":"","title":"Children"},{"location":"node_obsoletion_consider/#used-by","text":"NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit","title":"Used by"},{"location":"node_obsoletion_consider/#other-properties","text":"Exact Mappings: oio:consider","title":"Other properties"},{"location":"node_obsoletion_replaced_by/","text":"Slot: node_obsoletion_replaced_by When this is present, the node obsoletion MAY be associated with automated rewiring changes URI: kgcl:node_obsoletion_replaced_by Domain and Range NodeObsoletion -> OPT Node Parents is_a: replaced by Children Used by NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit Other properties Exact Mappings: IAO:0100001","title":"Slot: node_obsoletion_replaced_by"},{"location":"node_obsoletion_replaced_by/#slot-node_obsoletion_replaced_by","text":"When this is present, the node obsoletion MAY be associated with automated rewiring changes URI: kgcl:node_obsoletion_replaced_by","title":"Slot: node_obsoletion_replaced_by"},{"location":"node_obsoletion_replaced_by/#domain-and-range","text":"NodeObsoletion -> OPT Node","title":"Domain and Range"},{"location":"node_obsoletion_replaced_by/#parents","text":"is_a: replaced by","title":"Parents"},{"location":"node_obsoletion_replaced_by/#children","text":"","title":"Children"},{"location":"node_obsoletion_replaced_by/#used-by","text":"NodeObsoletion NodeObsoletionWithMerge NodeObsoletionWithSplit","title":"Used by"},{"location":"node_obsoletion_replaced_by/#other-properties","text":"Exact Mappings: IAO:0100001","title":"Other properties"},{"location":"node_obsoletion_with_direct_replacement_change_description/","text":"Slot: node_obsoletion_with_direct_replacement_change_description URI: kgcl:node_obsoletion_with_direct_replacement_change_description Domain and Range NodeObsoletionWithDirectReplacement -> OPT String Parents is_a: node obsoletion\u279echange description Children Used by NodeObsoletionWithDirectReplacement","title":"Slot: node_obsoletion_with_direct_replacement_change_description"},{"location":"node_obsoletion_with_direct_replacement_change_description/#slot-node_obsoletion_with_direct_replacement_change_description","text":"URI: kgcl:node_obsoletion_with_direct_replacement_change_description","title":"Slot: node_obsoletion_with_direct_replacement_change_description"},{"location":"node_obsoletion_with_direct_replacement_change_description/#domain-and-range","text":"NodeObsoletionWithDirectReplacement -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_direct_replacement_change_description/#parents","text":"is_a: node obsoletion\u279echange description","title":"Parents"},{"location":"node_obsoletion_with_direct_replacement_change_description/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_direct_replacement_change_description/#used-by","text":"NodeObsoletionWithDirectReplacement","title":"Used by"},{"location":"node_obsoletion_with_direct_replacement_has_direct_replacement/","text":"Slot: node_obsoletion_with_direct_replacement_has_direct_replacement URI: kgcl:node_obsoletion_with_direct_replacement_has_direct_replacement Domain and Range NodeObsoletionWithDirectReplacement -> REQ Node Parents is_a: has direct replacement Children Used by NodeObsoletionWithDirectReplacement","title":"Slot: node_obsoletion_with_direct_replacement_has_direct_replacement"},{"location":"node_obsoletion_with_direct_replacement_has_direct_replacement/#slot-node_obsoletion_with_direct_replacement_has_direct_replacement","text":"URI: kgcl:node_obsoletion_with_direct_replacement_has_direct_replacement","title":"Slot: node_obsoletion_with_direct_replacement_has_direct_replacement"},{"location":"node_obsoletion_with_direct_replacement_has_direct_replacement/#domain-and-range","text":"NodeObsoletionWithDirectReplacement -> REQ Node","title":"Domain and Range"},{"location":"node_obsoletion_with_direct_replacement_has_direct_replacement/#parents","text":"is_a: has direct replacement","title":"Parents"},{"location":"node_obsoletion_with_direct_replacement_has_direct_replacement/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_direct_replacement_has_direct_replacement/#used-by","text":"NodeObsoletionWithDirectReplacement","title":"Used by"},{"location":"node_obsoletion_with_merge_about/","text":"Slot: node_obsoletion_with_merge_about URI: kgcl:node_obsoletion_with_merge_about Domain and Range NodeObsoletionWithMerge -> OPT String Parents is_a: node change\u279eabout Children Used by NodeObsoletionWithMerge Other properties Aliases: alt_id","title":"Slot: node_obsoletion_with_merge_about"},{"location":"node_obsoletion_with_merge_about/#slot-node_obsoletion_with_merge_about","text":"URI: kgcl:node_obsoletion_with_merge_about","title":"Slot: node_obsoletion_with_merge_about"},{"location":"node_obsoletion_with_merge_about/#domain-and-range","text":"NodeObsoletionWithMerge -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_merge_about/#parents","text":"is_a: node change\u279eabout","title":"Parents"},{"location":"node_obsoletion_with_merge_about/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_merge_about/#used-by","text":"NodeObsoletionWithMerge","title":"Used by"},{"location":"node_obsoletion_with_merge_about/#other-properties","text":"Aliases: alt_id","title":"Other properties"},{"location":"node_obsoletion_with_merge_change_description/","text":"Slot: node_obsoletion_with_merge_change_description URI: kgcl:node_obsoletion_with_merge_change_description Domain and Range NodeObsoletionWithMerge -> OPT String Parents is_a: node obsoletion\u279echange description Children Used by NodeObsoletionWithMerge","title":"Slot: node_obsoletion_with_merge_change_description"},{"location":"node_obsoletion_with_merge_change_description/#slot-node_obsoletion_with_merge_change_description","text":"URI: kgcl:node_obsoletion_with_merge_change_description","title":"Slot: node_obsoletion_with_merge_change_description"},{"location":"node_obsoletion_with_merge_change_description/#domain-and-range","text":"NodeObsoletionWithMerge -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_merge_change_description/#parents","text":"is_a: node obsoletion\u279echange description","title":"Parents"},{"location":"node_obsoletion_with_merge_change_description/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_merge_change_description/#used-by","text":"NodeObsoletionWithMerge","title":"Used by"},{"location":"node_obsoletion_with_merge_target/","text":"Slot: node_obsoletion_with_merge_target URI: kgcl:node_obsoletion_with_merge_target Domain and Range NodeObsoletionWithMerge -> OPT String Parents is_a: target Children Used by NodeObsoletionWithMerge","title":"Slot: node_obsoletion_with_merge_target"},{"location":"node_obsoletion_with_merge_target/#slot-node_obsoletion_with_merge_target","text":"URI: kgcl:node_obsoletion_with_merge_target","title":"Slot: node_obsoletion_with_merge_target"},{"location":"node_obsoletion_with_merge_target/#domain-and-range","text":"NodeObsoletionWithMerge -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_merge_target/#parents","text":"is_a: target","title":"Parents"},{"location":"node_obsoletion_with_merge_target/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_merge_target/#used-by","text":"NodeObsoletionWithMerge","title":"Used by"},{"location":"node_obsoletion_with_no_direct_replacement_change_description/","text":"Slot: node_obsoletion_with_no_direct_replacement_change_description URI: kgcl:node_obsoletion_with_no_direct_replacement_change_description Domain and Range NodeObsoletionWithNoDirectReplacement -> OPT String Parents is_a: node obsoletion\u279echange description Children Used by NodeObsoletionWithNoDirectReplacement","title":"Slot: node_obsoletion_with_no_direct_replacement_change_description"},{"location":"node_obsoletion_with_no_direct_replacement_change_description/#slot-node_obsoletion_with_no_direct_replacement_change_description","text":"URI: kgcl:node_obsoletion_with_no_direct_replacement_change_description","title":"Slot: node_obsoletion_with_no_direct_replacement_change_description"},{"location":"node_obsoletion_with_no_direct_replacement_change_description/#domain-and-range","text":"NodeObsoletionWithNoDirectReplacement -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_no_direct_replacement_change_description/#parents","text":"is_a: node obsoletion\u279echange description","title":"Parents"},{"location":"node_obsoletion_with_no_direct_replacement_change_description/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_no_direct_replacement_change_description/#used-by","text":"NodeObsoletionWithNoDirectReplacement","title":"Used by"},{"location":"node_obsoletion_with_no_direct_replacement_has_nondirect_replacement/","text":"Slot: node_obsoletion_with_no_direct_replacement_has_nondirect_replacement URI: kgcl:node_obsoletion_with_no_direct_replacement_has_nondirect_replacement Domain and Range NodeObsoletionWithNoDirectReplacement -> 1..* Node Parents is_a: has nondirect replacement Children Used by NodeObsoletionWithNoDirectReplacement","title":"Slot: node_obsoletion_with_no_direct_replacement_has_nondirect_replacement"},{"location":"node_obsoletion_with_no_direct_replacement_has_nondirect_replacement/#slot-node_obsoletion_with_no_direct_replacement_has_nondirect_replacement","text":"URI: kgcl:node_obsoletion_with_no_direct_replacement_has_nondirect_replacement","title":"Slot: node_obsoletion_with_no_direct_replacement_has_nondirect_replacement"},{"location":"node_obsoletion_with_no_direct_replacement_has_nondirect_replacement/#domain-and-range","text":"NodeObsoletionWithNoDirectReplacement -> 1..* Node","title":"Domain and Range"},{"location":"node_obsoletion_with_no_direct_replacement_has_nondirect_replacement/#parents","text":"is_a: has nondirect replacement","title":"Parents"},{"location":"node_obsoletion_with_no_direct_replacement_has_nondirect_replacement/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_no_direct_replacement_has_nondirect_replacement/#used-by","text":"NodeObsoletionWithNoDirectReplacement","title":"Used by"},{"location":"node_obsoletion_with_split_change_description/","text":"Slot: node_obsoletion_with_split_change_description URI: kgcl:node_obsoletion_with_split_change_description Domain and Range NodeObsoletionWithSplit -> OPT String Parents is_a: node obsoletion\u279echange description Children Used by NodeObsoletionWithSplit","title":"Slot: node_obsoletion_with_split_change_description"},{"location":"node_obsoletion_with_split_change_description/#slot-node_obsoletion_with_split_change_description","text":"URI: kgcl:node_obsoletion_with_split_change_description","title":"Slot: node_obsoletion_with_split_change_description"},{"location":"node_obsoletion_with_split_change_description/#domain-and-range","text":"NodeObsoletionWithSplit -> OPT String","title":"Domain and Range"},{"location":"node_obsoletion_with_split_change_description/#parents","text":"is_a: node obsoletion\u279echange description","title":"Parents"},{"location":"node_obsoletion_with_split_change_description/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_split_change_description/#used-by","text":"NodeObsoletionWithSplit","title":"Used by"},{"location":"node_obsoletion_with_split_target/","text":"Slot: node_obsoletion_with_split_target URI: kgcl:node_obsoletion_with_split_target Domain and Range NodeObsoletionWithSplit -> 0..* String Parents is_a: target Children Used by NodeObsoletionWithSplit","title":"Slot: node_obsoletion_with_split_target"},{"location":"node_obsoletion_with_split_target/#slot-node_obsoletion_with_split_target","text":"URI: kgcl:node_obsoletion_with_split_target","title":"Slot: node_obsoletion_with_split_target"},{"location":"node_obsoletion_with_split_target/#domain-and-range","text":"NodeObsoletionWithSplit -> 0..* String","title":"Domain and Range"},{"location":"node_obsoletion_with_split_target/#parents","text":"is_a: target","title":"Parents"},{"location":"node_obsoletion_with_split_target/#children","text":"","title":"Children"},{"location":"node_obsoletion_with_split_target/#used-by","text":"NodeObsoletionWithSplit","title":"Used by"},{"location":"node_rename_change_description/","text":"Slot: node_rename_change_description URI: kgcl:node_rename_change_description Domain and Range NodeRename -> OPT String Parents is_a: change description Children Used by NodeRename","title":"Slot: node_rename_change_description"},{"location":"node_rename_change_description/#slot-node_rename_change_description","text":"URI: kgcl:node_rename_change_description","title":"Slot: node_rename_change_description"},{"location":"node_rename_change_description/#domain-and-range","text":"NodeRename -> OPT String","title":"Domain and Range"},{"location":"node_rename_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_rename_change_description/#children","text":"","title":"Children"},{"location":"node_rename_change_description/#used-by","text":"NodeRename","title":"Used by"},{"location":"node_rename_new_value/","text":"Slot: node_rename_new_value URI: kgcl:node_rename_new_value Domain and Range NodeRename -> OPT String Parents is_a: new value Children Used by NodeRename","title":"Slot: node_rename_new_value"},{"location":"node_rename_new_value/#slot-node_rename_new_value","text":"URI: kgcl:node_rename_new_value","title":"Slot: node_rename_new_value"},{"location":"node_rename_new_value/#domain-and-range","text":"NodeRename -> OPT String","title":"Domain and Range"},{"location":"node_rename_new_value/#parents","text":"is_a: new value","title":"Parents"},{"location":"node_rename_new_value/#children","text":"","title":"Children"},{"location":"node_rename_new_value/#used-by","text":"NodeRename","title":"Used by"},{"location":"node_rename_old_value/","text":"Slot: node_rename_old_value URI: kgcl:node_rename_old_value Domain and Range NodeRename -> OPT String Parents is_a: old value Children Used by NodeRename","title":"Slot: node_rename_old_value"},{"location":"node_rename_old_value/#slot-node_rename_old_value","text":"URI: kgcl:node_rename_old_value","title":"Slot: node_rename_old_value"},{"location":"node_rename_old_value/#domain-and-range","text":"NodeRename -> OPT String","title":"Domain and Range"},{"location":"node_rename_old_value/#parents","text":"is_a: old value","title":"Parents"},{"location":"node_rename_old_value/#children","text":"","title":"Children"},{"location":"node_rename_old_value/#used-by","text":"NodeRename","title":"Used by"},{"location":"node_shallowing_change_description/","text":"Slot: node_shallowing_change_description URI: kgcl:node_shallowing_change_description Domain and Range NodeShallowing -> OPT String Parents is_a: node move\u279echange description Children Used by NodeShallowing","title":"Slot: node_shallowing_change_description"},{"location":"node_shallowing_change_description/#slot-node_shallowing_change_description","text":"URI: kgcl:node_shallowing_change_description","title":"Slot: node_shallowing_change_description"},{"location":"node_shallowing_change_description/#domain-and-range","text":"NodeShallowing -> OPT String","title":"Domain and Range"},{"location":"node_shallowing_change_description/#parents","text":"is_a: node move\u279echange description","title":"Parents"},{"location":"node_shallowing_change_description/#children","text":"","title":"Children"},{"location":"node_shallowing_change_description/#used-by","text":"NodeShallowing","title":"Used by"},{"location":"node_unobsoletion_change_description/","text":"Slot: node_unobsoletion_change_description URI: kgcl:node_unobsoletion_change_description Domain and Range NodeUnobsoletion -> OPT String Parents is_a: change description Children Used by NodeUnobsoletion","title":"Slot: node_unobsoletion_change_description"},{"location":"node_unobsoletion_change_description/#slot-node_unobsoletion_change_description","text":"URI: kgcl:node_unobsoletion_change_description","title":"Slot: node_unobsoletion_change_description"},{"location":"node_unobsoletion_change_description/#domain-and-range","text":"NodeUnobsoletion -> OPT String","title":"Domain and Range"},{"location":"node_unobsoletion_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"node_unobsoletion_change_description/#children","text":"","title":"Children"},{"location":"node_unobsoletion_change_description/#used-by","text":"NodeUnobsoletion","title":"Used by"},{"location":"node_unobsoletion_consider/","text":"Slot: node_unobsoletion_consider URI: kgcl:node_unobsoletion_consider Domain and Range NodeUnobsoletion -> OPT Node Parents is_a: consider Children Used by NodeUnobsoletion","title":"Slot: node_unobsoletion_consider"},{"location":"node_unobsoletion_consider/#slot-node_unobsoletion_consider","text":"URI: kgcl:node_unobsoletion_consider","title":"Slot: node_unobsoletion_consider"},{"location":"node_unobsoletion_consider/#domain-and-range","text":"NodeUnobsoletion -> OPT Node","title":"Domain and Range"},{"location":"node_unobsoletion_consider/#parents","text":"is_a: consider","title":"Parents"},{"location":"node_unobsoletion_consider/#children","text":"","title":"Children"},{"location":"node_unobsoletion_consider/#used-by","text":"NodeUnobsoletion","title":"Used by"},{"location":"node_unobsoletion_replaced_by/","text":"Slot: node_unobsoletion_replaced_by URI: kgcl:node_unobsoletion_replaced_by Domain and Range NodeUnobsoletion -> OPT Node Parents is_a: replaced by Children Used by NodeUnobsoletion","title":"Slot: node_unobsoletion_replaced_by"},{"location":"node_unobsoletion_replaced_by/#slot-node_unobsoletion_replaced_by","text":"URI: kgcl:node_unobsoletion_replaced_by","title":"Slot: node_unobsoletion_replaced_by"},{"location":"node_unobsoletion_replaced_by/#domain-and-range","text":"NodeUnobsoletion -> OPT Node","title":"Domain and Range"},{"location":"node_unobsoletion_replaced_by/#parents","text":"is_a: replaced by","title":"Parents"},{"location":"node_unobsoletion_replaced_by/#children","text":"","title":"Children"},{"location":"node_unobsoletion_replaced_by/#used-by","text":"NodeUnobsoletion","title":"Used by"},{"location":"object/","text":"Slot: object URI: kgcl:object Domain and Range None -> OPT Node Parents Children Used by Edge EdgeCreation EdgeDeletion EdgeObsoletion PlaceUnder","title":"Slot: object"},{"location":"object/#slot-object","text":"URI: kgcl:object","title":"Slot: object"},{"location":"object/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"object/#parents","text":"","title":"Parents"},{"location":"object/#children","text":"","title":"Children"},{"location":"object/#used-by","text":"Edge EdgeCreation EdgeDeletion EdgeObsoletion PlaceUnder","title":"Used by"},{"location":"obsoletion_about/","text":"Slot: obsoletion_about The element that is obsoleted by this change. URI: kgcl:obsoletion_about Domain and Range Obsoletion -> OPT String Parents is_a: about Children Used by AllowsAutomaticReplacementOfEdges Obsoletion","title":"Slot: obsoletion_about"},{"location":"obsoletion_about/#slot-obsoletion_about","text":"The element that is obsoleted by this change. URI: kgcl:obsoletion_about","title":"Slot: obsoletion_about"},{"location":"obsoletion_about/#domain-and-range","text":"Obsoletion -> OPT String","title":"Domain and Range"},{"location":"obsoletion_about/#parents","text":"is_a: about","title":"Parents"},{"location":"obsoletion_about/#children","text":"","title":"Children"},{"location":"obsoletion_about/#used-by","text":"AllowsAutomaticReplacementOfEdges Obsoletion","title":"Used by"},{"location":"obsoletion_has_undo/","text":"Slot: obsoletion_has_undo URI: kgcl:obsoletion_has_undo Domain and Range Obsoletion -> OPT Obsoletion Parents is_a: has undo Children Used by AllowsAutomaticReplacementOfEdges Obsoletion","title":"Slot: obsoletion_has_undo"},{"location":"obsoletion_has_undo/#slot-obsoletion_has_undo","text":"URI: kgcl:obsoletion_has_undo","title":"Slot: obsoletion_has_undo"},{"location":"obsoletion_has_undo/#domain-and-range","text":"Obsoletion -> OPT Obsoletion","title":"Domain and Range"},{"location":"obsoletion_has_undo/#parents","text":"is_a: has undo","title":"Parents"},{"location":"obsoletion_has_undo/#children","text":"","title":"Children"},{"location":"obsoletion_has_undo/#used-by","text":"AllowsAutomaticReplacementOfEdges Obsoletion","title":"Used by"},{"location":"old_value/","text":"Slot: old_value The value of a property held in the old instance of the ontology URI: kgcl:old_value Domain and Range None -> OPT String Parents Children node rename\u279eold value Used by AddNodeToSubset ClassCreation DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement","title":"Slot: old_value"},{"location":"old_value/#slot-old_value","text":"The value of a property held in the old instance of the ontology URI: kgcl:old_value","title":"Slot: old_value"},{"location":"old_value/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"old_value/#parents","text":"","title":"Parents"},{"location":"old_value/#children","text":"node rename\u279eold value","title":"Children"},{"location":"old_value/#used-by","text":"AddNodeToSubset ClassCreation DatatypeChange EdgeChange EdgeCreation EdgeDeletion EdgeLogicalInterpretationChange EdgeObsoletion EdgeRewiring LogicalAxiomChange NameBecomesSynonym NewSynonym NewTextDefinition NodeAnnotationChange NodeAnnotationReplacement NodeChange NodeCreation NodeDeepening NodeDeletion NodeDirectMerge NodeMove NodeObsoletion NodeObsoletionWithDirectReplacement NodeObsoletionWithNoDirectReplacement NodeShallowing NodeSynonymChange NodeTextDefinitionChange NodeUnobsoletion PlaceUnder PredicateChange RemoveSynonym RemoveTextDefinition RemovedNodeFromSubset SimpleChange SynonymPredicateChange SynonymReplacement TextDefinitionReplacement","title":"Used by"},{"location":"owl_type/","text":"Slot: owl_type URI: kgcl:owl_type Domain and Range None -> OPT owl_type_enum Parents Children Used by ClassCreation ClassNode InstanceNode Node NodeCreation","title":"Slot: owl_type"},{"location":"owl_type/#slot-owl_type","text":"URI: kgcl:owl_type","title":"Slot: owl_type"},{"location":"owl_type/#domain-and-range","text":"None -> OPT owl_type_enum","title":"Domain and Range"},{"location":"owl_type/#parents","text":"","title":"Parents"},{"location":"owl_type/#children","text":"","title":"Children"},{"location":"owl_type/#used-by","text":"ClassCreation ClassNode InstanceNode Node NodeCreation","title":"Used by"},{"location":"owl_type_enum/","text":"Enum: owl_type_enum URI: kgcl:owl_type_enum Other properties Permissible Values Text Description Meaning Other Information class owl:Class object property owl:ObjectProperty named individual owl:NamedIndividual","title":"Enum: owl_type_enum"},{"location":"owl_type_enum/#enum-owl_type_enum","text":"URI: kgcl:owl_type_enum","title":"Enum: owl_type_enum"},{"location":"owl_type_enum/#other-properties","text":"","title":"Other properties"},{"location":"owl_type_enum/#permissible-values","text":"Text Description Meaning Other Information class owl:Class object property owl:ObjectProperty named individual owl:NamedIndividual","title":"Permissible Values"},{"location":"predicate/","text":"Slot: predicate URI: kgcl:predicate Domain and Range None -> OPT Node Parents Children Used by Edge EdgeCreation EdgeDeletion EdgeObsoletion PlaceUnder","title":"Slot: predicate"},{"location":"predicate/#slot-predicate","text":"URI: kgcl:predicate","title":"Slot: predicate"},{"location":"predicate/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"predicate/#parents","text":"","title":"Parents"},{"location":"predicate/#children","text":"","title":"Children"},{"location":"predicate/#used-by","text":"Edge EdgeCreation EdgeDeletion EdgeObsoletion PlaceUnder","title":"Used by"},{"location":"predicate_change_change_description/","text":"Slot: predicate_change_change_description URI: kgcl:predicate_change_change_description Domain and Range PredicateChange -> OPT String Parents is_a: change description Children Used by PredicateChange","title":"Slot: predicate_change_change_description"},{"location":"predicate_change_change_description/#slot-predicate_change_change_description","text":"URI: kgcl:predicate_change_change_description","title":"Slot: predicate_change_change_description"},{"location":"predicate_change_change_description/#domain-and-range","text":"PredicateChange -> OPT String","title":"Domain and Range"},{"location":"predicate_change_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"predicate_change_change_description/#children","text":"","title":"Children"},{"location":"predicate_change_change_description/#used-by","text":"PredicateChange","title":"Used by"},{"location":"property/","text":"Slot: property URI: kgcl:property Domain and Range None -> OPT Node Parents Children Used by Annotation PropertyValue","title":"Slot: property"},{"location":"property/#slot-property","text":"URI: kgcl:property","title":"Slot: property"},{"location":"property/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"property/#parents","text":"","title":"Parents"},{"location":"property/#children","text":"","title":"Children"},{"location":"property/#used-by","text":"Annotation PropertyValue","title":"Used by"},{"location":"property_value_set/","text":"Slot: property_value_set URI: kgcl:property_value_set Domain and Range None -> 0..* PropertyValue Parents Children change set summary statistic\u279eproperty value set Used by","title":"Slot: property_value_set"},{"location":"property_value_set/#slot-property_value_set","text":"URI: kgcl:property_value_set","title":"Slot: property_value_set"},{"location":"property_value_set/#domain-and-range","text":"None -> 0..* PropertyValue","title":"Domain and Range"},{"location":"property_value_set/#parents","text":"","title":"Parents"},{"location":"property_value_set/#children","text":"change set summary statistic\u279eproperty value set","title":"Children"},{"location":"property_value_set/#used-by","text":"","title":"Used by"},{"location":"pull_request/","text":"Slot: pull_request URI: kgcl:pull_request Domain and Range None -> OPT String Parents Children change\u279epull request Used by","title":"Slot: pull_request"},{"location":"pull_request/#slot-pull_request","text":"URI: kgcl:pull_request","title":"Slot: pull_request"},{"location":"pull_request/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"pull_request/#parents","text":"","title":"Parents"},{"location":"pull_request/#children","text":"change\u279epull request","title":"Children"},{"location":"pull_request/#used-by","text":"","title":"Used by"},{"location":"remove_from_subset_has_undo/","text":"Slot: remove_from_subset_has_undo URI: kgcl:remove_from_subset_has_undo Domain and Range RemoveFromSubset -> OPT AddToSubset Parents is_a: has undo Children Used by RemoveFromSubset","title":"Slot: remove_from_subset_has_undo"},{"location":"remove_from_subset_has_undo/#slot-remove_from_subset_has_undo","text":"URI: kgcl:remove_from_subset_has_undo","title":"Slot: remove_from_subset_has_undo"},{"location":"remove_from_subset_has_undo/#domain-and-range","text":"RemoveFromSubset -> OPT AddToSubset","title":"Domain and Range"},{"location":"remove_from_subset_has_undo/#parents","text":"is_a: has undo","title":"Parents"},{"location":"remove_from_subset_has_undo/#children","text":"","title":"Children"},{"location":"remove_from_subset_has_undo/#used-by","text":"RemoveFromSubset","title":"Used by"},{"location":"remove_from_subset_in_subset/","text":"Slot: remove_from_subset_in_subset subset that the element is being removed from URI: kgcl:remove_from_subset_in_subset Domain and Range RemoveFromSubset -> OPT OntologySubset Parents is_a: in subset Children Used by RemoveFromSubset RemovedNodeFromSubset","title":"Slot: remove_from_subset_in_subset"},{"location":"remove_from_subset_in_subset/#slot-remove_from_subset_in_subset","text":"subset that the element is being removed from URI: kgcl:remove_from_subset_in_subset","title":"Slot: remove_from_subset_in_subset"},{"location":"remove_from_subset_in_subset/#domain-and-range","text":"RemoveFromSubset -> OPT OntologySubset","title":"Domain and Range"},{"location":"remove_from_subset_in_subset/#parents","text":"is_a: in subset","title":"Parents"},{"location":"remove_from_subset_in_subset/#children","text":"","title":"Children"},{"location":"remove_from_subset_in_subset/#used-by","text":"RemoveFromSubset RemovedNodeFromSubset","title":"Used by"},{"location":"removed_node_from_subset_about/","text":"Slot: removed_node_from_subset_about The node that is removed from the subset URI: kgcl:removed_node_from_subset_about Domain and Range RemovedNodeFromSubset -> OPT String Parents is_a: node change\u279eabout Children Used by RemovedNodeFromSubset","title":"Slot: removed_node_from_subset_about"},{"location":"removed_node_from_subset_about/#slot-removed_node_from_subset_about","text":"The node that is removed from the subset URI: kgcl:removed_node_from_subset_about","title":"Slot: removed_node_from_subset_about"},{"location":"removed_node_from_subset_about/#domain-and-range","text":"RemovedNodeFromSubset -> OPT String","title":"Domain and Range"},{"location":"removed_node_from_subset_about/#parents","text":"is_a: node change\u279eabout","title":"Parents"},{"location":"removed_node_from_subset_about/#children","text":"","title":"Children"},{"location":"removed_node_from_subset_about/#used-by","text":"RemovedNodeFromSubset","title":"Used by"},{"location":"removed_node_from_subset_change_description/","text":"Slot: removed_node_from_subset_change_description URI: kgcl:removed_node_from_subset_change_description Domain and Range RemovedNodeFromSubset -> OPT String Parents is_a: change description Children Used by RemovedNodeFromSubset","title":"Slot: removed_node_from_subset_change_description"},{"location":"removed_node_from_subset_change_description/#slot-removed_node_from_subset_change_description","text":"URI: kgcl:removed_node_from_subset_change_description","title":"Slot: removed_node_from_subset_change_description"},{"location":"removed_node_from_subset_change_description/#domain-and-range","text":"RemovedNodeFromSubset -> OPT String","title":"Domain and Range"},{"location":"removed_node_from_subset_change_description/#parents","text":"is_a: change description","title":"Parents"},{"location":"removed_node_from_subset_change_description/#children","text":"","title":"Children"},{"location":"removed_node_from_subset_change_description/#used-by","text":"RemovedNodeFromSubset","title":"Used by"},{"location":"removed_node_from_subset_subset/","text":"Slot: removed_node_from_subset_subset The subset from which the node is to be removed URI: kgcl:removed_node_from_subset_subset Domain and Range RemovedNodeFromSubset -> OPT String Parents is_a: subset Children Used by RemovedNodeFromSubset","title":"Slot: removed_node_from_subset_subset"},{"location":"removed_node_from_subset_subset/#slot-removed_node_from_subset_subset","text":"The subset from which the node is to be removed URI: kgcl:removed_node_from_subset_subset","title":"Slot: removed_node_from_subset_subset"},{"location":"removed_node_from_subset_subset/#domain-and-range","text":"RemovedNodeFromSubset -> OPT String","title":"Domain and Range"},{"location":"removed_node_from_subset_subset/#parents","text":"is_a: subset","title":"Parents"},{"location":"removed_node_from_subset_subset/#children","text":"","title":"Children"},{"location":"removed_node_from_subset_subset/#used-by","text":"RemovedNodeFromSubset","title":"Used by"},{"location":"replaced_by/","text":"Slot: replaced_by URI: kgcl:replaced_by Domain and Range None -> OPT Node Parents Children node unobsoletion\u279ereplaced by Used by","title":"Slot: replaced_by"},{"location":"replaced_by/#slot-replaced_by","text":"URI: kgcl:replaced_by","title":"Slot: replaced_by"},{"location":"replaced_by/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"replaced_by/#parents","text":"","title":"Parents"},{"location":"replaced_by/#children","text":"node unobsoletion\u279ereplaced by","title":"Children"},{"location":"replaced_by/#used-by","text":"","title":"Used by"},{"location":"see_also/","text":"Slot: see_also URI: kgcl:see_also Domain and Range None -> OPT String Parents Children change\u279esee also Used by Other properties Mappings: rdfs:seeAlso","title":"Slot: see_also"},{"location":"see_also/#slot-see_also","text":"URI: kgcl:see_also","title":"Slot: see_also"},{"location":"see_also/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"see_also/#parents","text":"","title":"Parents"},{"location":"see_also/#children","text":"change\u279esee also","title":"Children"},{"location":"see_also/#used-by","text":"","title":"Used by"},{"location":"see_also/#other-properties","text":"Mappings: rdfs:seeAlso","title":"Other properties"},{"location":"started_at_time/","text":"Slot: started_at_time URI: kgcl:started_at_time Domain and Range None -> OPT String Parents Children Used by Activity Other properties Mappings: prov:startedAtTime","title":"Slot: started_at_time"},{"location":"started_at_time/#slot-started_at_time","text":"URI: kgcl:started_at_time","title":"Slot: started_at_time"},{"location":"started_at_time/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"started_at_time/#parents","text":"","title":"Parents"},{"location":"started_at_time/#children","text":"","title":"Children"},{"location":"started_at_time/#used-by","text":"Activity","title":"Used by"},{"location":"started_at_time/#other-properties","text":"Mappings: prov:startedAtTime","title":"Other properties"},{"location":"subject/","text":"Slot: subject URI: kgcl:subject Domain and Range None -> OPT Node Parents Children edge change\u279esubject Used by Edge EdgeCreation EdgeDeletion EdgeObsoletion PlaceUnder","title":"Slot: subject"},{"location":"subject/#slot-subject","text":"URI: kgcl:subject","title":"Slot: subject"},{"location":"subject/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"subject/#parents","text":"","title":"Parents"},{"location":"subject/#children","text":"edge change\u279esubject","title":"Children"},{"location":"subject/#used-by","text":"Edge EdgeCreation EdgeDeletion EdgeObsoletion PlaceUnder","title":"Used by"},{"location":"superclass/","text":"Slot: superclass URI: kgcl:superclass Domain and Range None -> OPT Node Parents Children Used by ClassCreation","title":"Slot: superclass"},{"location":"superclass/#slot-superclass","text":"URI: kgcl:superclass","title":"Slot: superclass"},{"location":"superclass/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"superclass/#parents","text":"","title":"Parents"},{"location":"superclass/#children","text":"","title":"Children"},{"location":"superclass/#used-by","text":"ClassCreation","title":"Used by"},{"location":"target/","text":"Slot: target The secondary entity on which the change operates URI: kgcl:target Domain and Range None -> OPT String Parents Children has replacement Used by","title":"Slot: target"},{"location":"target/#slot-target","text":"The secondary entity on which the change operates URI: kgcl:target","title":"Slot: target"},{"location":"target/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"target/#parents","text":"","title":"Parents"},{"location":"target/#children","text":"has replacement","title":"Children"},{"location":"target/#used-by","text":"","title":"Used by"},{"location":"unobsoletion_has_undo/","text":"Slot: unobsoletion_has_undo URI: kgcl:unobsoletion_has_undo Domain and Range Unobsoletion -> OPT Obsoletion Parents is_a: has undo Children Used by Unobsoletion","title":"Slot: unobsoletion_has_undo"},{"location":"unobsoletion_has_undo/#slot-unobsoletion_has_undo","text":"URI: kgcl:unobsoletion_has_undo","title":"Slot: unobsoletion_has_undo"},{"location":"unobsoletion_has_undo/#domain-and-range","text":"Unobsoletion -> OPT Obsoletion","title":"Domain and Range"},{"location":"unobsoletion_has_undo/#parents","text":"is_a: has undo","title":"Parents"},{"location":"unobsoletion_has_undo/#children","text":"","title":"Children"},{"location":"unobsoletion_has_undo/#used-by","text":"Unobsoletion","title":"Used by"},{"location":"used/","text":"Slot: used URI: kgcl:used Domain and Range Activity -> OPT String Parents Children Used by Activity Other properties Mappings: prov:used","title":"Slot: used"},{"location":"used/#slot-used","text":"URI: kgcl:used","title":"Slot: used"},{"location":"used/#domain-and-range","text":"Activity -> OPT String","title":"Domain and Range"},{"location":"used/#parents","text":"","title":"Parents"},{"location":"used/#children","text":"","title":"Children"},{"location":"used/#used-by","text":"Activity","title":"Used by"},{"location":"used/#other-properties","text":"Mappings: prov:used","title":"Other properties"},{"location":"was_associated_with/","text":"Slot: was_associated_with URI: kgcl:was_associated_with Domain and Range None -> OPT Agent Parents Children Used by Activity Other properties Mappings: prov:wasAssociatedWith","title":"Slot: was_associated_with"},{"location":"was_associated_with/#slot-was_associated_with","text":"URI: kgcl:was_associated_with","title":"Slot: was_associated_with"},{"location":"was_associated_with/#domain-and-range","text":"None -> OPT Agent","title":"Domain and Range"},{"location":"was_associated_with/#parents","text":"","title":"Parents"},{"location":"was_associated_with/#children","text":"","title":"Children"},{"location":"was_associated_with/#used-by","text":"Activity","title":"Used by"},{"location":"was_associated_with/#other-properties","text":"Mappings: prov:wasAssociatedWith","title":"Other properties"},{"location":"was_generated_by/","text":"Slot: was_generated_by URI: kgcl:was_generated_by Domain and Range None -> OPT Activity Parents Children change\u279ewas generated by Used by Other properties Mappings: prov:wasGeneratedBy","title":"Slot: was_generated_by"},{"location":"was_generated_by/#slot-was_generated_by","text":"URI: kgcl:was_generated_by","title":"Slot: was_generated_by"},{"location":"was_generated_by/#domain-and-range","text":"None -> OPT Activity","title":"Domain and Range"},{"location":"was_generated_by/#parents","text":"","title":"Parents"},{"location":"was_generated_by/#children","text":"change\u279ewas generated by","title":"Children"},{"location":"was_generated_by/#used-by","text":"","title":"Used by"},{"location":"was_generated_by/#other-properties","text":"Mappings: prov:wasGeneratedBy","title":"Other properties"},{"location":"was_informed_by/","text":"Slot: was_informed_by URI: kgcl:was_informed_by Domain and Range None -> OPT Activity Parents Children Used by Activity Agent Other properties Mappings: prov:wasInformedBy","title":"Slot: was_informed_by"},{"location":"was_informed_by/#slot-was_informed_by","text":"URI: kgcl:was_informed_by","title":"Slot: was_informed_by"},{"location":"was_informed_by/#domain-and-range","text":"None -> OPT Activity","title":"Domain and Range"},{"location":"was_informed_by/#parents","text":"","title":"Parents"},{"location":"was_informed_by/#children","text":"","title":"Children"},{"location":"was_informed_by/#used-by","text":"Activity Agent","title":"Used by"},{"location":"was_informed_by/#other-properties","text":"Mappings: prov:wasInformedBy","title":"Other properties"},{"location":"types/Boolean/","text":"Type: Boolean A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"types/Boolean/#type-boolean","text":"A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"types/ChangeClassType/","text":"Type: ChangeClassType CURIE for a class within this datamodel. E.g. kgcl:NodeObsoletion URI: kgcl:ChangeClassType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: ChangeClassType"},{"location":"types/ChangeClassType/#type-changeclasstype","text":"CURIE for a class within this datamodel. E.g. kgcl:NodeObsoletion URI: kgcl:ChangeClassType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: ChangeClassType"},{"location":"types/Date/","text":"Type: Date a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"types/Date/#type-date","text":"a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"types/Datetime/","text":"Type: Datetime The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"types/Datetime/#type-datetime","text":"The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"types/Decimal/","text":"Type: Decimal A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"types/Decimal/#type-decimal","text":"A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"types/Double/","text":"Type: Double A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: Double"},{"location":"types/Double/#type-double","text":"A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: Double"},{"location":"types/Float/","text":"Type: Float A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: Float"},{"location":"types/Float/#type-float","text":"A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: Float"},{"location":"types/Integer/","text":"Type: Integer An integer URI: linkml:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"types/Integer/#type-integer","text":"An integer URI: linkml:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"types/Ncname/","text":"Type: Ncname Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"types/Ncname/#type-ncname","text":"Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"types/Nodeidentifier/","text":"Type: Nodeidentifier A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"types/Nodeidentifier/#type-nodeidentifier","text":"A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"types/Objectidentifier/","text":"Type: Objectidentifier A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str Other properties Comments: Used for inheritence and type checking","title":"Type: Objectidentifier"},{"location":"types/Objectidentifier/#type-objectidentifier","text":"A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str","title":"Type: Objectidentifier"},{"location":"types/Objectidentifier/#other-properties","text":"Comments: Used for inheritence and type checking","title":"Other properties"},{"location":"types/String/","text":"Type: String A character string URI: linkml:String Root (builtin) type str","title":"Type: String"},{"location":"types/String/#type-string","text":"A character string URI: linkml:String Root (builtin) type str","title":"Type: String"},{"location":"types/Time/","text":"Type: Time A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"types/Time/#type-time","text":"A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"types/Uri/","text":"Type: Uri a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"types/Uri/#type-uri","text":"a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"types/Uriorcurie/","text":"Type: Uriorcurie a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"},{"location":"types/Uriorcurie/#type-uriorcurie","text":"a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"}]}